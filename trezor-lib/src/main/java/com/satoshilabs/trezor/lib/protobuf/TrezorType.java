// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: types.proto
// libprotoc 3.0.0
// trezor-common 7e61f3703883da2f58d1988b373503cfe7c3561c

package com.satoshilabs.trezor.lib.protobuf;

public final class TrezorType {
  private TrezorType() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(com.satoshilabs.trezor.lib.protobuf.TrezorType.wireIn);
    registry.add(com.satoshilabs.trezor.lib.protobuf.TrezorType.wireOut);
    registry.add(com.satoshilabs.trezor.lib.protobuf.TrezorType.wireDebugIn);
    registry.add(com.satoshilabs.trezor.lib.protobuf.TrezorType.wireDebugOut);
    registry.add(com.satoshilabs.trezor.lib.protobuf.TrezorType.wireTiny);
    registry.add(com.satoshilabs.trezor.lib.protobuf.TrezorType.wireBootloader);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   **
   * Type of failures returned by Failure message
   * &#64;used_in Failure
   * </pre>
   *
   * Protobuf enum {@code FailureType}
   */
  public enum FailureType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Failure_UnexpectedMessage = 1;</code>
     */
    Failure_UnexpectedMessage(1),
    /**
     * <code>Failure_ButtonExpected = 2;</code>
     */
    Failure_ButtonExpected(2),
    /**
     * <code>Failure_DataError = 3;</code>
     */
    Failure_DataError(3),
    /**
     * <code>Failure_ActionCancelled = 4;</code>
     */
    Failure_ActionCancelled(4),
    /**
     * <code>Failure_PinExpected = 5;</code>
     */
    Failure_PinExpected(5),
    /**
     * <code>Failure_PinCancelled = 6;</code>
     */
    Failure_PinCancelled(6),
    /**
     * <code>Failure_PinInvalid = 7;</code>
     */
    Failure_PinInvalid(7),
    /**
     * <code>Failure_InvalidSignature = 8;</code>
     */
    Failure_InvalidSignature(8),
    /**
     * <code>Failure_ProcessError = 9;</code>
     */
    Failure_ProcessError(9),
    /**
     * <code>Failure_NotEnoughFunds = 10;</code>
     */
    Failure_NotEnoughFunds(10),
    /**
     * <code>Failure_NotInitialized = 11;</code>
     */
    Failure_NotInitialized(11),
    /**
     * <code>Failure_PinMismatch = 12;</code>
     */
    Failure_PinMismatch(12),
    /**
     * <code>Failure_FirmwareError = 99;</code>
     */
    Failure_FirmwareError(99),
    ;

    /**
     * <code>Failure_UnexpectedMessage = 1;</code>
     */
    public static final int Failure_UnexpectedMessage_VALUE = 1;
    /**
     * <code>Failure_ButtonExpected = 2;</code>
     */
    public static final int Failure_ButtonExpected_VALUE = 2;
    /**
     * <code>Failure_DataError = 3;</code>
     */
    public static final int Failure_DataError_VALUE = 3;
    /**
     * <code>Failure_ActionCancelled = 4;</code>
     */
    public static final int Failure_ActionCancelled_VALUE = 4;
    /**
     * <code>Failure_PinExpected = 5;</code>
     */
    public static final int Failure_PinExpected_VALUE = 5;
    /**
     * <code>Failure_PinCancelled = 6;</code>
     */
    public static final int Failure_PinCancelled_VALUE = 6;
    /**
     * <code>Failure_PinInvalid = 7;</code>
     */
    public static final int Failure_PinInvalid_VALUE = 7;
    /**
     * <code>Failure_InvalidSignature = 8;</code>
     */
    public static final int Failure_InvalidSignature_VALUE = 8;
    /**
     * <code>Failure_ProcessError = 9;</code>
     */
    public static final int Failure_ProcessError_VALUE = 9;
    /**
     * <code>Failure_NotEnoughFunds = 10;</code>
     */
    public static final int Failure_NotEnoughFunds_VALUE = 10;
    /**
     * <code>Failure_NotInitialized = 11;</code>
     */
    public static final int Failure_NotInitialized_VALUE = 11;
    /**
     * <code>Failure_PinMismatch = 12;</code>
     */
    public static final int Failure_PinMismatch_VALUE = 12;
    /**
     * <code>Failure_FirmwareError = 99;</code>
     */
    public static final int Failure_FirmwareError_VALUE = 99;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FailureType valueOf(int value) {
      return forNumber(value);
    }

    public static FailureType forNumber(int value) {
      switch (value) {
        case 1: return Failure_UnexpectedMessage;
        case 2: return Failure_ButtonExpected;
        case 3: return Failure_DataError;
        case 4: return Failure_ActionCancelled;
        case 5: return Failure_PinExpected;
        case 6: return Failure_PinCancelled;
        case 7: return Failure_PinInvalid;
        case 8: return Failure_InvalidSignature;
        case 9: return Failure_ProcessError;
        case 10: return Failure_NotEnoughFunds;
        case 11: return Failure_NotInitialized;
        case 12: return Failure_PinMismatch;
        case 99: return Failure_FirmwareError;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FailureType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FailureType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FailureType>() {
            public FailureType findValueByNumber(int number) {
              return FailureType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(0);
    }

    private static final FailureType[] VALUES = values();

    public static FailureType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FailureType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:FailureType)
  }

  /**
   * <pre>
   **
   * Type of script which will be used for transaction output
   * &#64;used_in TxOutputType
   * </pre>
   *
   * Protobuf enum {@code OutputScriptType}
   */
  public enum OutputScriptType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * used for all addresses (bitcoin, p2sh, witness)
     * </pre>
     *
     * <code>PAYTOADDRESS = 0;</code>
     */
    PAYTOADDRESS(0),
    /**
     * <pre>
     * p2sh address (deprecated; use PAYTOADDRESS)
     * </pre>
     *
     * <code>PAYTOSCRIPTHASH = 1;</code>
     */
    PAYTOSCRIPTHASH(1),
    /**
     * <pre>
     * only for change output
     * </pre>
     *
     * <code>PAYTOMULTISIG = 2;</code>
     */
    PAYTOMULTISIG(2),
    /**
     * <pre>
     * op_return
     * </pre>
     *
     * <code>PAYTOOPRETURN = 3;</code>
     */
    PAYTOOPRETURN(3),
    /**
     * <pre>
     * only for change output
     * </pre>
     *
     * <code>PAYTOWITNESS = 4;</code>
     */
    PAYTOWITNESS(4),
    /**
     * <pre>
     * only for change output
     * </pre>
     *
     * <code>PAYTOP2SHWITNESS = 5;</code>
     */
    PAYTOP2SHWITNESS(5),
    ;

    /**
     * <pre>
     * used for all addresses (bitcoin, p2sh, witness)
     * </pre>
     *
     * <code>PAYTOADDRESS = 0;</code>
     */
    public static final int PAYTOADDRESS_VALUE = 0;
    /**
     * <pre>
     * p2sh address (deprecated; use PAYTOADDRESS)
     * </pre>
     *
     * <code>PAYTOSCRIPTHASH = 1;</code>
     */
    public static final int PAYTOSCRIPTHASH_VALUE = 1;
    /**
     * <pre>
     * only for change output
     * </pre>
     *
     * <code>PAYTOMULTISIG = 2;</code>
     */
    public static final int PAYTOMULTISIG_VALUE = 2;
    /**
     * <pre>
     * op_return
     * </pre>
     *
     * <code>PAYTOOPRETURN = 3;</code>
     */
    public static final int PAYTOOPRETURN_VALUE = 3;
    /**
     * <pre>
     * only for change output
     * </pre>
     *
     * <code>PAYTOWITNESS = 4;</code>
     */
    public static final int PAYTOWITNESS_VALUE = 4;
    /**
     * <pre>
     * only for change output
     * </pre>
     *
     * <code>PAYTOP2SHWITNESS = 5;</code>
     */
    public static final int PAYTOP2SHWITNESS_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OutputScriptType valueOf(int value) {
      return forNumber(value);
    }

    public static OutputScriptType forNumber(int value) {
      switch (value) {
        case 0: return PAYTOADDRESS;
        case 1: return PAYTOSCRIPTHASH;
        case 2: return PAYTOMULTISIG;
        case 3: return PAYTOOPRETURN;
        case 4: return PAYTOWITNESS;
        case 5: return PAYTOP2SHWITNESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OutputScriptType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OutputScriptType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OutputScriptType>() {
            public OutputScriptType findValueByNumber(int number) {
              return OutputScriptType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(1);
    }

    private static final OutputScriptType[] VALUES = values();

    public static OutputScriptType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OutputScriptType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:OutputScriptType)
  }

  /**
   * <pre>
   **
   * Type of script which will be used for transaction output
   * &#64;used_in TxInputType
   * </pre>
   *
   * Protobuf enum {@code InputScriptType}
   */
  public enum InputScriptType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * standard p2pkh address
     * </pre>
     *
     * <code>SPENDADDRESS = 0;</code>
     */
    SPENDADDRESS(0),
    /**
     * <pre>
     * p2sh multisig address
     * </pre>
     *
     * <code>SPENDMULTISIG = 1;</code>
     */
    SPENDMULTISIG(1),
    /**
     * <pre>
     * reserved for external inputs (coinjoin)
     * </pre>
     *
     * <code>EXTERNAL = 2;</code>
     */
    EXTERNAL(2),
    /**
     * <pre>
     * native segwit
     * </pre>
     *
     * <code>SPENDWITNESS = 3;</code>
     */
    SPENDWITNESS(3),
    /**
     * <pre>
     * segwit over p2sh (backward compatible)
     * </pre>
     *
     * <code>SPENDP2SHWITNESS = 4;</code>
     */
    SPENDP2SHWITNESS(4),
    ;

    /**
     * <pre>
     * standard p2pkh address
     * </pre>
     *
     * <code>SPENDADDRESS = 0;</code>
     */
    public static final int SPENDADDRESS_VALUE = 0;
    /**
     * <pre>
     * p2sh multisig address
     * </pre>
     *
     * <code>SPENDMULTISIG = 1;</code>
     */
    public static final int SPENDMULTISIG_VALUE = 1;
    /**
     * <pre>
     * reserved for external inputs (coinjoin)
     * </pre>
     *
     * <code>EXTERNAL = 2;</code>
     */
    public static final int EXTERNAL_VALUE = 2;
    /**
     * <pre>
     * native segwit
     * </pre>
     *
     * <code>SPENDWITNESS = 3;</code>
     */
    public static final int SPENDWITNESS_VALUE = 3;
    /**
     * <pre>
     * segwit over p2sh (backward compatible)
     * </pre>
     *
     * <code>SPENDP2SHWITNESS = 4;</code>
     */
    public static final int SPENDP2SHWITNESS_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static InputScriptType valueOf(int value) {
      return forNumber(value);
    }

    public static InputScriptType forNumber(int value) {
      switch (value) {
        case 0: return SPENDADDRESS;
        case 1: return SPENDMULTISIG;
        case 2: return EXTERNAL;
        case 3: return SPENDWITNESS;
        case 4: return SPENDP2SHWITNESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<InputScriptType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        InputScriptType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<InputScriptType>() {
            public InputScriptType findValueByNumber(int number) {
              return InputScriptType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(2);
    }

    private static final InputScriptType[] VALUES = values();

    public static InputScriptType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private InputScriptType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:InputScriptType)
  }

  /**
   * <pre>
   **
   * Type of information required by transaction signing process
   * &#64;used_in TxRequest
   * </pre>
   *
   * Protobuf enum {@code RequestType}
   */
  public enum RequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TXINPUT = 0;</code>
     */
    TXINPUT(0),
    /**
     * <code>TXOUTPUT = 1;</code>
     */
    TXOUTPUT(1),
    /**
     * <code>TXMETA = 2;</code>
     */
    TXMETA(2),
    /**
     * <code>TXFINISHED = 3;</code>
     */
    TXFINISHED(3),
    /**
     * <code>TXEXTRADATA = 4;</code>
     */
    TXEXTRADATA(4),
    ;

    /**
     * <code>TXINPUT = 0;</code>
     */
    public static final int TXINPUT_VALUE = 0;
    /**
     * <code>TXOUTPUT = 1;</code>
     */
    public static final int TXOUTPUT_VALUE = 1;
    /**
     * <code>TXMETA = 2;</code>
     */
    public static final int TXMETA_VALUE = 2;
    /**
     * <code>TXFINISHED = 3;</code>
     */
    public static final int TXFINISHED_VALUE = 3;
    /**
     * <code>TXEXTRADATA = 4;</code>
     */
    public static final int TXEXTRADATA_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RequestType valueOf(int value) {
      return forNumber(value);
    }

    public static RequestType forNumber(int value) {
      switch (value) {
        case 0: return TXINPUT;
        case 1: return TXOUTPUT;
        case 2: return TXMETA;
        case 3: return TXFINISHED;
        case 4: return TXEXTRADATA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
            public RequestType findValueByNumber(int number) {
              return RequestType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(3);
    }

    private static final RequestType[] VALUES = values();

    public static RequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RequestType)
  }

  /**
   * <pre>
   **
   * Type of button request
   * &#64;used_in ButtonRequest
   * </pre>
   *
   * Protobuf enum {@code ButtonRequestType}
   */
  public enum ButtonRequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ButtonRequest_Other = 1;</code>
     */
    ButtonRequest_Other(1),
    /**
     * <code>ButtonRequest_FeeOverThreshold = 2;</code>
     */
    ButtonRequest_FeeOverThreshold(2),
    /**
     * <code>ButtonRequest_ConfirmOutput = 3;</code>
     */
    ButtonRequest_ConfirmOutput(3),
    /**
     * <code>ButtonRequest_ResetDevice = 4;</code>
     */
    ButtonRequest_ResetDevice(4),
    /**
     * <code>ButtonRequest_ConfirmWord = 5;</code>
     */
    ButtonRequest_ConfirmWord(5),
    /**
     * <code>ButtonRequest_WipeDevice = 6;</code>
     */
    ButtonRequest_WipeDevice(6),
    /**
     * <code>ButtonRequest_ProtectCall = 7;</code>
     */
    ButtonRequest_ProtectCall(7),
    /**
     * <code>ButtonRequest_SignTx = 8;</code>
     */
    ButtonRequest_SignTx(8),
    /**
     * <code>ButtonRequest_FirmwareCheck = 9;</code>
     */
    ButtonRequest_FirmwareCheck(9),
    /**
     * <code>ButtonRequest_Address = 10;</code>
     */
    ButtonRequest_Address(10),
    /**
     * <code>ButtonRequest_PublicKey = 11;</code>
     */
    ButtonRequest_PublicKey(11),
    /**
     * <code>ButtonRequest_MnemonicWordCount = 12;</code>
     */
    ButtonRequest_MnemonicWordCount(12),
    /**
     * <code>ButtonRequest_MnemonicInput = 13;</code>
     */
    ButtonRequest_MnemonicInput(13),
    /**
     * <code>ButtonRequest_PassphraseType = 14;</code>
     */
    ButtonRequest_PassphraseType(14),
    ;

    /**
     * <code>ButtonRequest_Other = 1;</code>
     */
    public static final int ButtonRequest_Other_VALUE = 1;
    /**
     * <code>ButtonRequest_FeeOverThreshold = 2;</code>
     */
    public static final int ButtonRequest_FeeOverThreshold_VALUE = 2;
    /**
     * <code>ButtonRequest_ConfirmOutput = 3;</code>
     */
    public static final int ButtonRequest_ConfirmOutput_VALUE = 3;
    /**
     * <code>ButtonRequest_ResetDevice = 4;</code>
     */
    public static final int ButtonRequest_ResetDevice_VALUE = 4;
    /**
     * <code>ButtonRequest_ConfirmWord = 5;</code>
     */
    public static final int ButtonRequest_ConfirmWord_VALUE = 5;
    /**
     * <code>ButtonRequest_WipeDevice = 6;</code>
     */
    public static final int ButtonRequest_WipeDevice_VALUE = 6;
    /**
     * <code>ButtonRequest_ProtectCall = 7;</code>
     */
    public static final int ButtonRequest_ProtectCall_VALUE = 7;
    /**
     * <code>ButtonRequest_SignTx = 8;</code>
     */
    public static final int ButtonRequest_SignTx_VALUE = 8;
    /**
     * <code>ButtonRequest_FirmwareCheck = 9;</code>
     */
    public static final int ButtonRequest_FirmwareCheck_VALUE = 9;
    /**
     * <code>ButtonRequest_Address = 10;</code>
     */
    public static final int ButtonRequest_Address_VALUE = 10;
    /**
     * <code>ButtonRequest_PublicKey = 11;</code>
     */
    public static final int ButtonRequest_PublicKey_VALUE = 11;
    /**
     * <code>ButtonRequest_MnemonicWordCount = 12;</code>
     */
    public static final int ButtonRequest_MnemonicWordCount_VALUE = 12;
    /**
     * <code>ButtonRequest_MnemonicInput = 13;</code>
     */
    public static final int ButtonRequest_MnemonicInput_VALUE = 13;
    /**
     * <code>ButtonRequest_PassphraseType = 14;</code>
     */
    public static final int ButtonRequest_PassphraseType_VALUE = 14;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ButtonRequestType valueOf(int value) {
      return forNumber(value);
    }

    public static ButtonRequestType forNumber(int value) {
      switch (value) {
        case 1: return ButtonRequest_Other;
        case 2: return ButtonRequest_FeeOverThreshold;
        case 3: return ButtonRequest_ConfirmOutput;
        case 4: return ButtonRequest_ResetDevice;
        case 5: return ButtonRequest_ConfirmWord;
        case 6: return ButtonRequest_WipeDevice;
        case 7: return ButtonRequest_ProtectCall;
        case 8: return ButtonRequest_SignTx;
        case 9: return ButtonRequest_FirmwareCheck;
        case 10: return ButtonRequest_Address;
        case 11: return ButtonRequest_PublicKey;
        case 12: return ButtonRequest_MnemonicWordCount;
        case 13: return ButtonRequest_MnemonicInput;
        case 14: return ButtonRequest_PassphraseType;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ButtonRequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ButtonRequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ButtonRequestType>() {
            public ButtonRequestType findValueByNumber(int number) {
              return ButtonRequestType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(4);
    }

    private static final ButtonRequestType[] VALUES = values();

    public static ButtonRequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ButtonRequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ButtonRequestType)
  }

  /**
   * <pre>
   **
   * Type of PIN request
   * &#64;used_in PinMatrixRequest
   * </pre>
   *
   * Protobuf enum {@code PinMatrixRequestType}
   */
  public enum PinMatrixRequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PinMatrixRequestType_Current = 1;</code>
     */
    PinMatrixRequestType_Current(1),
    /**
     * <code>PinMatrixRequestType_NewFirst = 2;</code>
     */
    PinMatrixRequestType_NewFirst(2),
    /**
     * <code>PinMatrixRequestType_NewSecond = 3;</code>
     */
    PinMatrixRequestType_NewSecond(3),
    ;

    /**
     * <code>PinMatrixRequestType_Current = 1;</code>
     */
    public static final int PinMatrixRequestType_Current_VALUE = 1;
    /**
     * <code>PinMatrixRequestType_NewFirst = 2;</code>
     */
    public static final int PinMatrixRequestType_NewFirst_VALUE = 2;
    /**
     * <code>PinMatrixRequestType_NewSecond = 3;</code>
     */
    public static final int PinMatrixRequestType_NewSecond_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PinMatrixRequestType valueOf(int value) {
      return forNumber(value);
    }

    public static PinMatrixRequestType forNumber(int value) {
      switch (value) {
        case 1: return PinMatrixRequestType_Current;
        case 2: return PinMatrixRequestType_NewFirst;
        case 3: return PinMatrixRequestType_NewSecond;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PinMatrixRequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PinMatrixRequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PinMatrixRequestType>() {
            public PinMatrixRequestType findValueByNumber(int number) {
              return PinMatrixRequestType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(5);
    }

    private static final PinMatrixRequestType[] VALUES = values();

    public static PinMatrixRequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PinMatrixRequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:PinMatrixRequestType)
  }

  /**
   * <pre>
   **
   * Type of recovery procedure. These should be used as bitmask, e.g.,
   * `RecoveryDeviceType_ScrambledWords | RecoveryDeviceType_Matrix`
   * listing every method supported by the host computer.
   * Note that ScrambledWords must be supported by every implementation
   * for backward compatibility; there is no way to not support it.
   * &#64;used_in RecoveryDevice
   * </pre>
   *
   * Protobuf enum {@code RecoveryDeviceType}
   */
  public enum RecoveryDeviceType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * use powers of two when extending this field
     * </pre>
     *
     * <code>RecoveryDeviceType_ScrambledWords = 0;</code>
     */
    RecoveryDeviceType_ScrambledWords(0),
    /**
     * <pre>
     * matrix recovery type
     * </pre>
     *
     * <code>RecoveryDeviceType_Matrix = 1;</code>
     */
    RecoveryDeviceType_Matrix(1),
    ;

    /**
     * <pre>
     * use powers of two when extending this field
     * </pre>
     *
     * <code>RecoveryDeviceType_ScrambledWords = 0;</code>
     */
    public static final int RecoveryDeviceType_ScrambledWords_VALUE = 0;
    /**
     * <pre>
     * matrix recovery type
     * </pre>
     *
     * <code>RecoveryDeviceType_Matrix = 1;</code>
     */
    public static final int RecoveryDeviceType_Matrix_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RecoveryDeviceType valueOf(int value) {
      return forNumber(value);
    }

    public static RecoveryDeviceType forNumber(int value) {
      switch (value) {
        case 0: return RecoveryDeviceType_ScrambledWords;
        case 1: return RecoveryDeviceType_Matrix;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RecoveryDeviceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RecoveryDeviceType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RecoveryDeviceType>() {
            public RecoveryDeviceType findValueByNumber(int number) {
              return RecoveryDeviceType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(6);
    }

    private static final RecoveryDeviceType[] VALUES = values();

    public static RecoveryDeviceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RecoveryDeviceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RecoveryDeviceType)
  }

  /**
   * <pre>
   **
   * Type of Recovery Word request
   * &#64;used_in WordRequest
   * </pre>
   *
   * Protobuf enum {@code WordRequestType}
   */
  public enum WordRequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>WordRequestType_Plain = 0;</code>
     */
    WordRequestType_Plain(0),
    /**
     * <code>WordRequestType_Matrix9 = 1;</code>
     */
    WordRequestType_Matrix9(1),
    /**
     * <code>WordRequestType_Matrix6 = 2;</code>
     */
    WordRequestType_Matrix6(2),
    ;

    /**
     * <code>WordRequestType_Plain = 0;</code>
     */
    public static final int WordRequestType_Plain_VALUE = 0;
    /**
     * <code>WordRequestType_Matrix9 = 1;</code>
     */
    public static final int WordRequestType_Matrix9_VALUE = 1;
    /**
     * <code>WordRequestType_Matrix6 = 2;</code>
     */
    public static final int WordRequestType_Matrix6_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WordRequestType valueOf(int value) {
      return forNumber(value);
    }

    public static WordRequestType forNumber(int value) {
      switch (value) {
        case 0: return WordRequestType_Plain;
        case 1: return WordRequestType_Matrix9;
        case 2: return WordRequestType_Matrix6;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WordRequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WordRequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WordRequestType>() {
            public WordRequestType findValueByNumber(int number) {
              return WordRequestType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(7);
    }

    private static final WordRequestType[] VALUES = values();

    public static WordRequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WordRequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:WordRequestType)
  }

  /**
   * <pre>
   **
   * Type of levy which will be used for mosaic
   * &#64;used_in NEMMosaicDefinition
   * </pre>
   *
   * Protobuf enum {@code NEMMosaicLevy}
   */
  public enum NEMMosaicLevy
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MosaicLevy_Absolute = 1;</code>
     */
    MosaicLevy_Absolute(1),
    /**
     * <code>MosaicLevy_Percentile = 2;</code>
     */
    MosaicLevy_Percentile(2),
    ;

    /**
     * <code>MosaicLevy_Absolute = 1;</code>
     */
    public static final int MosaicLevy_Absolute_VALUE = 1;
    /**
     * <code>MosaicLevy_Percentile = 2;</code>
     */
    public static final int MosaicLevy_Percentile_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NEMMosaicLevy valueOf(int value) {
      return forNumber(value);
    }

    public static NEMMosaicLevy forNumber(int value) {
      switch (value) {
        case 1: return MosaicLevy_Absolute;
        case 2: return MosaicLevy_Percentile;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NEMMosaicLevy>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NEMMosaicLevy> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NEMMosaicLevy>() {
            public NEMMosaicLevy findValueByNumber(int number) {
              return NEMMosaicLevy.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(8);
    }

    private static final NEMMosaicLevy[] VALUES = values();

    public static NEMMosaicLevy valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NEMMosaicLevy(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NEMMosaicLevy)
  }

  /**
   * <pre>
   **
   * Type of supply change which will be applied to mosaic
   * &#64;used_in NEMMosaicSupplyChange
   * </pre>
   *
   * Protobuf enum {@code NEMSupplyChangeType}
   */
  public enum NEMSupplyChangeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SupplyChange_Increase = 1;</code>
     */
    SupplyChange_Increase(1),
    /**
     * <code>SupplyChange_Decrease = 2;</code>
     */
    SupplyChange_Decrease(2),
    ;

    /**
     * <code>SupplyChange_Increase = 1;</code>
     */
    public static final int SupplyChange_Increase_VALUE = 1;
    /**
     * <code>SupplyChange_Decrease = 2;</code>
     */
    public static final int SupplyChange_Decrease_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NEMSupplyChangeType valueOf(int value) {
      return forNumber(value);
    }

    public static NEMSupplyChangeType forNumber(int value) {
      switch (value) {
        case 1: return SupplyChange_Increase;
        case 2: return SupplyChange_Decrease;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NEMSupplyChangeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NEMSupplyChangeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NEMSupplyChangeType>() {
            public NEMSupplyChangeType findValueByNumber(int number) {
              return NEMSupplyChangeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(9);
    }

    private static final NEMSupplyChangeType[] VALUES = values();

    public static NEMSupplyChangeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NEMSupplyChangeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NEMSupplyChangeType)
  }

  /**
   * <pre>
   **
   * Type of cosignatory modification
   * &#64;used_in NEMCosignatoryModification
   * </pre>
   *
   * Protobuf enum {@code NEMModificationType}
   */
  public enum NEMModificationType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CosignatoryModification_Add = 1;</code>
     */
    CosignatoryModification_Add(1),
    /**
     * <code>CosignatoryModification_Delete = 2;</code>
     */
    CosignatoryModification_Delete(2),
    ;

    /**
     * <code>CosignatoryModification_Add = 1;</code>
     */
    public static final int CosignatoryModification_Add_VALUE = 1;
    /**
     * <code>CosignatoryModification_Delete = 2;</code>
     */
    public static final int CosignatoryModification_Delete_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NEMModificationType valueOf(int value) {
      return forNumber(value);
    }

    public static NEMModificationType forNumber(int value) {
      switch (value) {
        case 1: return CosignatoryModification_Add;
        case 2: return CosignatoryModification_Delete;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NEMModificationType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NEMModificationType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NEMModificationType>() {
            public NEMModificationType findValueByNumber(int number) {
              return NEMModificationType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(10);
    }

    private static final NEMModificationType[] VALUES = values();

    public static NEMModificationType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NEMModificationType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NEMModificationType)
  }

  /**
   * <pre>
   **
   * Mode of importance transfer
   * &#64;used_in NEMModificationType
   * </pre>
   *
   * Protobuf enum {@code NEMImportanceTransferMode}
   */
  public enum NEMImportanceTransferMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ImportanceTransfer_Activate = 1;</code>
     */
    ImportanceTransfer_Activate(1),
    /**
     * <code>ImportanceTransfer_Deactivate = 2;</code>
     */
    ImportanceTransfer_Deactivate(2),
    ;

    /**
     * <code>ImportanceTransfer_Activate = 1;</code>
     */
    public static final int ImportanceTransfer_Activate_VALUE = 1;
    /**
     * <code>ImportanceTransfer_Deactivate = 2;</code>
     */
    public static final int ImportanceTransfer_Deactivate_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NEMImportanceTransferMode valueOf(int value) {
      return forNumber(value);
    }

    public static NEMImportanceTransferMode forNumber(int value) {
      switch (value) {
        case 1: return ImportanceTransfer_Activate;
        case 2: return ImportanceTransfer_Deactivate;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NEMImportanceTransferMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NEMImportanceTransferMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NEMImportanceTransferMode>() {
            public NEMImportanceTransferMode findValueByNumber(int number) {
              return NEMImportanceTransferMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.getDescriptor().getEnumTypes().get(11);
    }

    private static final NEMImportanceTransferMode[] VALUES = values();

    public static NEMImportanceTransferMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NEMImportanceTransferMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NEMImportanceTransferMode)
  }

  public interface HDNodeTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HDNodeType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 depth = 1;</code>
     */
    boolean hasDepth();
    /**
     * <code>required uint32 depth = 1;</code>
     */
    int getDepth();

    /**
     * <code>required uint32 fingerprint = 2;</code>
     */
    boolean hasFingerprint();
    /**
     * <code>required uint32 fingerprint = 2;</code>
     */
    int getFingerprint();

    /**
     * <code>required uint32 child_num = 3;</code>
     */
    boolean hasChildNum();
    /**
     * <code>required uint32 child_num = 3;</code>
     */
    int getChildNum();

    /**
     * <code>required bytes chain_code = 4;</code>
     */
    boolean hasChainCode();
    /**
     * <code>required bytes chain_code = 4;</code>
     */
    com.google.protobuf.ByteString getChainCode();

    /**
     * <code>optional bytes private_key = 5;</code>
     */
    boolean hasPrivateKey();
    /**
     * <code>optional bytes private_key = 5;</code>
     */
    com.google.protobuf.ByteString getPrivateKey();

    /**
     * <code>optional bytes public_key = 6;</code>
     */
    boolean hasPublicKey();
    /**
     * <code>optional bytes public_key = 6;</code>
     */
    com.google.protobuf.ByteString getPublicKey();
  }
  /**
   * <pre>
   **
   * Structure representing BIP32 (hierarchical deterministic) node
   * Used for imports of private key into the device and exporting public key out of device
   * &#64;used_in PublicKey
   * &#64;used_in LoadDevice
   * &#64;used_in DebugLinkState
   * &#64;used_in Storage
   * </pre>
   *
   * Protobuf type {@code HDNodeType}
   */
  public  static final class HDNodeType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HDNodeType)
      HDNodeTypeOrBuilder {
    // Use HDNodeType.newBuilder() to construct.
    private HDNodeType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HDNodeType() {
      depth_ = 0;
      fingerprint_ = 0;
      childNum_ = 0;
      chainCode_ = com.google.protobuf.ByteString.EMPTY;
      privateKey_ = com.google.protobuf.ByteString.EMPTY;
      publicKey_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HDNodeType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              depth_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              fingerprint_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              childNum_ = input.readUInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              chainCode_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              privateKey_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              publicKey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_HDNodeType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_HDNodeType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.Builder.class);
    }

    private int bitField0_;
    public static final int DEPTH_FIELD_NUMBER = 1;
    private int depth_;
    /**
     * <code>required uint32 depth = 1;</code>
     */
    public boolean hasDepth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 depth = 1;</code>
     */
    public int getDepth() {
      return depth_;
    }

    public static final int FINGERPRINT_FIELD_NUMBER = 2;
    private int fingerprint_;
    /**
     * <code>required uint32 fingerprint = 2;</code>
     */
    public boolean hasFingerprint() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 fingerprint = 2;</code>
     */
    public int getFingerprint() {
      return fingerprint_;
    }

    public static final int CHILD_NUM_FIELD_NUMBER = 3;
    private int childNum_;
    /**
     * <code>required uint32 child_num = 3;</code>
     */
    public boolean hasChildNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 child_num = 3;</code>
     */
    public int getChildNum() {
      return childNum_;
    }

    public static final int CHAIN_CODE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString chainCode_;
    /**
     * <code>required bytes chain_code = 4;</code>
     */
    public boolean hasChainCode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bytes chain_code = 4;</code>
     */
    public com.google.protobuf.ByteString getChainCode() {
      return chainCode_;
    }

    public static final int PRIVATE_KEY_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString privateKey_;
    /**
     * <code>optional bytes private_key = 5;</code>
     */
    public boolean hasPrivateKey() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes private_key = 5;</code>
     */
    public com.google.protobuf.ByteString getPrivateKey() {
      return privateKey_;
    }

    public static final int PUBLIC_KEY_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString publicKey_;
    /**
     * <code>optional bytes public_key = 6;</code>
     */
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes public_key = 6;</code>
     */
    public com.google.protobuf.ByteString getPublicKey() {
      return publicKey_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDepth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFingerprint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChildNum()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChainCode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, depth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, fingerprint_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, childNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, chainCode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, privateKey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, publicKey_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, depth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fingerprint_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, childNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, chainCode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, privateKey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, publicKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType) obj;

      boolean result = true;
      result = result && (hasDepth() == other.hasDepth());
      if (hasDepth()) {
        result = result && (getDepth()
            == other.getDepth());
      }
      result = result && (hasFingerprint() == other.hasFingerprint());
      if (hasFingerprint()) {
        result = result && (getFingerprint()
            == other.getFingerprint());
      }
      result = result && (hasChildNum() == other.hasChildNum());
      if (hasChildNum()) {
        result = result && (getChildNum()
            == other.getChildNum());
      }
      result = result && (hasChainCode() == other.hasChainCode());
      if (hasChainCode()) {
        result = result && getChainCode()
            .equals(other.getChainCode());
      }
      result = result && (hasPrivateKey() == other.hasPrivateKey());
      if (hasPrivateKey()) {
        result = result && getPrivateKey()
            .equals(other.getPrivateKey());
      }
      result = result && (hasPublicKey() == other.hasPublicKey());
      if (hasPublicKey()) {
        result = result && getPublicKey()
            .equals(other.getPublicKey());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasDepth()) {
        hash = (37 * hash) + DEPTH_FIELD_NUMBER;
        hash = (53 * hash) + getDepth();
      }
      if (hasFingerprint()) {
        hash = (37 * hash) + FINGERPRINT_FIELD_NUMBER;
        hash = (53 * hash) + getFingerprint();
      }
      if (hasChildNum()) {
        hash = (37 * hash) + CHILD_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getChildNum();
      }
      if (hasChainCode()) {
        hash = (37 * hash) + CHAIN_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getChainCode().hashCode();
      }
      if (hasPrivateKey()) {
        hash = (37 * hash) + PRIVATE_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateKey().hashCode();
      }
      if (hasPublicKey()) {
        hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKey().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing BIP32 (hierarchical deterministic) node
     * Used for imports of private key into the device and exporting public key out of device
     * &#64;used_in PublicKey
     * &#64;used_in LoadDevice
     * &#64;used_in DebugLinkState
     * &#64;used_in Storage
     * </pre>
     *
     * Protobuf type {@code HDNodeType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HDNodeType)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_HDNodeType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_HDNodeType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        depth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fingerprint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        childNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        chainCode_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        privateKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        publicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_HDNodeType_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.depth_ = depth_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fingerprint_ = fingerprint_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.childNum_ = childNum_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.chainCode_ = chainCode_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.privateKey_ = privateKey_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.publicKey_ = publicKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.getDefaultInstance()) return this;
        if (other.hasDepth()) {
          setDepth(other.getDepth());
        }
        if (other.hasFingerprint()) {
          setFingerprint(other.getFingerprint());
        }
        if (other.hasChildNum()) {
          setChildNum(other.getChildNum());
        }
        if (other.hasChainCode()) {
          setChainCode(other.getChainCode());
        }
        if (other.hasPrivateKey()) {
          setPrivateKey(other.getPrivateKey());
        }
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDepth()) {
          return false;
        }
        if (!hasFingerprint()) {
          return false;
        }
        if (!hasChildNum()) {
          return false;
        }
        if (!hasChainCode()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int depth_ ;
      /**
       * <code>required uint32 depth = 1;</code>
       */
      public boolean hasDepth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 depth = 1;</code>
       */
      public int getDepth() {
        return depth_;
      }
      /**
       * <code>required uint32 depth = 1;</code>
       */
      public Builder setDepth(int value) {
        bitField0_ |= 0x00000001;
        depth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 depth = 1;</code>
       */
      public Builder clearDepth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        depth_ = 0;
        onChanged();
        return this;
      }

      private int fingerprint_ ;
      /**
       * <code>required uint32 fingerprint = 2;</code>
       */
      public boolean hasFingerprint() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 fingerprint = 2;</code>
       */
      public int getFingerprint() {
        return fingerprint_;
      }
      /**
       * <code>required uint32 fingerprint = 2;</code>
       */
      public Builder setFingerprint(int value) {
        bitField0_ |= 0x00000002;
        fingerprint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 fingerprint = 2;</code>
       */
      public Builder clearFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fingerprint_ = 0;
        onChanged();
        return this;
      }

      private int childNum_ ;
      /**
       * <code>required uint32 child_num = 3;</code>
       */
      public boolean hasChildNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 child_num = 3;</code>
       */
      public int getChildNum() {
        return childNum_;
      }
      /**
       * <code>required uint32 child_num = 3;</code>
       */
      public Builder setChildNum(int value) {
        bitField0_ |= 0x00000004;
        childNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 child_num = 3;</code>
       */
      public Builder clearChildNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        childNum_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString chainCode_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes chain_code = 4;</code>
       */
      public boolean hasChainCode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes chain_code = 4;</code>
       */
      public com.google.protobuf.ByteString getChainCode() {
        return chainCode_;
      }
      /**
       * <code>required bytes chain_code = 4;</code>
       */
      public Builder setChainCode(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        chainCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes chain_code = 4;</code>
       */
      public Builder clearChainCode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        chainCode_ = getDefaultInstance().getChainCode();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString privateKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes private_key = 5;</code>
       */
      public boolean hasPrivateKey() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes private_key = 5;</code>
       */
      public com.google.protobuf.ByteString getPrivateKey() {
        return privateKey_;
      }
      /**
       * <code>optional bytes private_key = 5;</code>
       */
      public Builder setPrivateKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        privateKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes private_key = 5;</code>
       */
      public Builder clearPrivateKey() {
        bitField0_ = (bitField0_ & ~0x00000010);
        privateKey_ = getDefaultInstance().getPrivateKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes public_key = 6;</code>
       */
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bytes public_key = 6;</code>
       */
      public com.google.protobuf.ByteString getPublicKey() {
        return publicKey_;
      }
      /**
       * <code>optional bytes public_key = 6;</code>
       */
      public Builder setPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        publicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes public_key = 6;</code>
       */
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000020);
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:HDNodeType)
    }

    // @@protoc_insertion_point(class_scope:HDNodeType)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<HDNodeType>
        PARSER = new com.google.protobuf.AbstractParser<HDNodeType>() {
      public HDNodeType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HDNodeType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HDNodeType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HDNodeType> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HDNodePathTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HDNodePathType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * BIP-32 node in deserialized form
     * </pre>
     *
     * <code>required .HDNodeType node = 1;</code>
     */
    boolean hasNode();
    /**
     * <pre>
     * BIP-32 node in deserialized form
     * </pre>
     *
     * <code>required .HDNodeType node = 1;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType getNode();
    /**
     * <pre>
     * BIP-32 node in deserialized form
     * </pre>
     *
     * <code>required .HDNodeType node = 1;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeTypeOrBuilder getNodeOrBuilder();

    /**
     * <pre>
     * BIP-32 path to derive the key from node
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    java.util.List<java.lang.Integer> getAddressNList();
    /**
     * <pre>
     * BIP-32 path to derive the key from node
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    int getAddressNCount();
    /**
     * <pre>
     * BIP-32 path to derive the key from node
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    int getAddressN(int index);
  }
  /**
   * Protobuf type {@code HDNodePathType}
   */
  public  static final class HDNodePathType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HDNodePathType)
      HDNodePathTypeOrBuilder {
    // Use HDNodePathType.newBuilder() to construct.
    private HDNodePathType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HDNodePathType() {
      addressN_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HDNodePathType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = node_.toBuilder();
              }
              node_ = input.readMessage(com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(node_);
                node_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                addressN_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              addressN_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                addressN_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                addressN_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          addressN_ = java.util.Collections.unmodifiableList(addressN_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_HDNodePathType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_HDNodePathType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder.class);
    }

    private int bitField0_;
    public static final int NODE_FIELD_NUMBER = 1;
    private com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType node_;
    /**
     * <pre>
     * BIP-32 node in deserialized form
     * </pre>
     *
     * <code>required .HDNodeType node = 1;</code>
     */
    public boolean hasNode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * BIP-32 node in deserialized form
     * </pre>
     *
     * <code>required .HDNodeType node = 1;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType getNode() {
      return node_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.getDefaultInstance() : node_;
    }
    /**
     * <pre>
     * BIP-32 node in deserialized form
     * </pre>
     *
     * <code>required .HDNodeType node = 1;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeTypeOrBuilder getNodeOrBuilder() {
      return node_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.getDefaultInstance() : node_;
    }

    public static final int ADDRESS_N_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> addressN_;
    /**
     * <pre>
     * BIP-32 path to derive the key from node
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getAddressNList() {
      return addressN_;
    }
    /**
     * <pre>
     * BIP-32 path to derive the key from node
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    public int getAddressNCount() {
      return addressN_.size();
    }
    /**
     * <pre>
     * BIP-32 path to derive the key from node
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    public int getAddressN(int index) {
      return addressN_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasNode()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getNode().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getNode());
      }
      for (int i = 0; i < addressN_.size(); i++) {
        output.writeUInt32(2, addressN_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getNode());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < addressN_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(addressN_.get(i));
        }
        size += dataSize;
        size += 1 * getAddressNList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType) obj;

      boolean result = true;
      result = result && (hasNode() == other.hasNode());
      if (hasNode()) {
        result = result && getNode()
            .equals(other.getNode());
      }
      result = result && getAddressNList()
          .equals(other.getAddressNList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasNode()) {
        hash = (37 * hash) + NODE_FIELD_NUMBER;
        hash = (53 * hash) + getNode().hashCode();
      }
      if (getAddressNCount() > 0) {
        hash = (37 * hash) + ADDRESS_N_FIELD_NUMBER;
        hash = (53 * hash) + getAddressNList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HDNodePathType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HDNodePathType)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_HDNodePathType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_HDNodePathType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodeBuilder_ == null) {
          node_ = null;
        } else {
          nodeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        addressN_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_HDNodePathType_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (nodeBuilder_ == null) {
          result.node_ = node_;
        } else {
          result.node_ = nodeBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          addressN_ = java.util.Collections.unmodifiableList(addressN_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.addressN_ = addressN_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.getDefaultInstance()) return this;
        if (other.hasNode()) {
          mergeNode(other.getNode());
        }
        if (!other.addressN_.isEmpty()) {
          if (addressN_.isEmpty()) {
            addressN_ = other.addressN_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAddressNIsMutable();
            addressN_.addAll(other.addressN_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNode()) {
          return false;
        }
        if (!getNode().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType node_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeTypeOrBuilder> nodeBuilder_;
      /**
       * <pre>
       * BIP-32 node in deserialized form
       * </pre>
       *
       * <code>required .HDNodeType node = 1;</code>
       */
      public boolean hasNode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * BIP-32 node in deserialized form
       * </pre>
       *
       * <code>required .HDNodeType node = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType getNode() {
        if (nodeBuilder_ == null) {
          return node_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.getDefaultInstance() : node_;
        } else {
          return nodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * BIP-32 node in deserialized form
       * </pre>
       *
       * <code>required .HDNodeType node = 1;</code>
       */
      public Builder setNode(com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          node_ = value;
          onChanged();
        } else {
          nodeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * BIP-32 node in deserialized form
       * </pre>
       *
       * <code>required .HDNodeType node = 1;</code>
       */
      public Builder setNode(
          com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          node_ = builderForValue.build();
          onChanged();
        } else {
          nodeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * BIP-32 node in deserialized form
       * </pre>
       *
       * <code>required .HDNodeType node = 1;</code>
       */
      public Builder mergeNode(com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType value) {
        if (nodeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              node_ != null &&
              node_ != com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.getDefaultInstance()) {
            node_ =
              com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.newBuilder(node_).mergeFrom(value).buildPartial();
          } else {
            node_ = value;
          }
          onChanged();
        } else {
          nodeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * BIP-32 node in deserialized form
       * </pre>
       *
       * <code>required .HDNodeType node = 1;</code>
       */
      public Builder clearNode() {
        if (nodeBuilder_ == null) {
          node_ = null;
          onChanged();
        } else {
          nodeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * BIP-32 node in deserialized form
       * </pre>
       *
       * <code>required .HDNodeType node = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.Builder getNodeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getNodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * BIP-32 node in deserialized form
       * </pre>
       *
       * <code>required .HDNodeType node = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeTypeOrBuilder getNodeOrBuilder() {
        if (nodeBuilder_ != null) {
          return nodeBuilder_.getMessageOrBuilder();
        } else {
          return node_ == null ?
              com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.getDefaultInstance() : node_;
        }
      }
      /**
       * <pre>
       * BIP-32 node in deserialized form
       * </pre>
       *
       * <code>required .HDNodeType node = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeTypeOrBuilder> 
          getNodeFieldBuilder() {
        if (nodeBuilder_ == null) {
          nodeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodeTypeOrBuilder>(
                  getNode(),
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        return nodeBuilder_;
      }

      private java.util.List<java.lang.Integer> addressN_ = java.util.Collections.emptyList();
      private void ensureAddressNIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          addressN_ = new java.util.ArrayList<java.lang.Integer>(addressN_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from node
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getAddressNList() {
        return java.util.Collections.unmodifiableList(addressN_);
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from node
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public int getAddressNCount() {
        return addressN_.size();
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from node
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public int getAddressN(int index) {
        return addressN_.get(index);
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from node
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public Builder setAddressN(
          int index, int value) {
        ensureAddressNIsMutable();
        addressN_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from node
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public Builder addAddressN(int value) {
        ensureAddressNIsMutable();
        addressN_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from node
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public Builder addAllAddressN(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAddressNIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, addressN_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from node
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public Builder clearAddressN() {
        addressN_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:HDNodePathType)
    }

    // @@protoc_insertion_point(class_scope:HDNodePathType)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<HDNodePathType>
        PARSER = new com.google.protobuf.AbstractParser<HDNodePathType>() {
      public HDNodePathType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new HDNodePathType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HDNodePathType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HDNodePathType> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CoinTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CoinType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string coin_name = 1;</code>
     */
    boolean hasCoinName();
    /**
     * <code>optional string coin_name = 1;</code>
     */
    java.lang.String getCoinName();
    /**
     * <code>optional string coin_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getCoinNameBytes();

    /**
     * <code>optional string coin_shortcut = 2;</code>
     */
    boolean hasCoinShortcut();
    /**
     * <code>optional string coin_shortcut = 2;</code>
     */
    java.lang.String getCoinShortcut();
    /**
     * <code>optional string coin_shortcut = 2;</code>
     */
    com.google.protobuf.ByteString
        getCoinShortcutBytes();

    /**
     * <code>optional uint32 address_type = 3 [default = 0];</code>
     */
    boolean hasAddressType();
    /**
     * <code>optional uint32 address_type = 3 [default = 0];</code>
     */
    int getAddressType();

    /**
     * <code>optional uint64 maxfee_kb = 4;</code>
     */
    boolean hasMaxfeeKb();
    /**
     * <code>optional uint64 maxfee_kb = 4;</code>
     */
    long getMaxfeeKb();

    /**
     * <code>optional uint32 address_type_p2sh = 5 [default = 5];</code>
     */
    boolean hasAddressTypeP2Sh();
    /**
     * <code>optional uint32 address_type_p2sh = 5 [default = 5];</code>
     */
    int getAddressTypeP2Sh();

    /**
     * <code>optional string signed_message_header = 8;</code>
     */
    boolean hasSignedMessageHeader();
    /**
     * <code>optional string signed_message_header = 8;</code>
     */
    java.lang.String getSignedMessageHeader();
    /**
     * <code>optional string signed_message_header = 8;</code>
     */
    com.google.protobuf.ByteString
        getSignedMessageHeaderBytes();

    /**
     * <pre>
     * default=0x0488b21e
     * </pre>
     *
     * <code>optional uint32 xpub_magic = 9 [default = 76067358];</code>
     */
    boolean hasXpubMagic();
    /**
     * <pre>
     * default=0x0488b21e
     * </pre>
     *
     * <code>optional uint32 xpub_magic = 9 [default = 76067358];</code>
     */
    int getXpubMagic();

    /**
     * <pre>
     * default=0x0488ade4
     * </pre>
     *
     * <code>optional uint32 xprv_magic = 10 [default = 76066276];</code>
     */
    boolean hasXprvMagic();
    /**
     * <pre>
     * default=0x0488ade4
     * </pre>
     *
     * <code>optional uint32 xprv_magic = 10 [default = 76066276];</code>
     */
    int getXprvMagic();

    /**
     * <code>optional bool segwit = 11;</code>
     */
    boolean hasSegwit();
    /**
     * <code>optional bool segwit = 11;</code>
     */
    boolean getSegwit();

    /**
     * <code>optional uint32 forkid = 12;</code>
     */
    boolean hasForkid();
    /**
     * <code>optional uint32 forkid = 12;</code>
     */
    int getForkid();

    /**
     * <code>optional bool force_bip143 = 13;</code>
     */
    boolean hasForceBip143();
    /**
     * <code>optional bool force_bip143 = 13;</code>
     */
    boolean getForceBip143();
  }
  /**
   * <pre>
   **
   * Structure representing Coin
   * &#64;used_in Features
   * </pre>
   *
   * Protobuf type {@code CoinType}
   */
  public  static final class CoinType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CoinType)
      CoinTypeOrBuilder {
    // Use CoinType.newBuilder() to construct.
    private CoinType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CoinType() {
      coinName_ = "";
      coinShortcut_ = "";
      addressType_ = 0;
      maxfeeKb_ = 0L;
      addressTypeP2Sh_ = 5;
      signedMessageHeader_ = "";
      xpubMagic_ = 76067358;
      xprvMagic_ = 76066276;
      segwit_ = false;
      forkid_ = 0;
      forceBip143_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CoinType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              coinName_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              coinShortcut_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              addressType_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              maxfeeKb_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              addressTypeP2Sh_ = input.readUInt32();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              signedMessageHeader_ = bs;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              xpubMagic_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              xprvMagic_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              segwit_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              forkid_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              forceBip143_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_CoinType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_CoinType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType.Builder.class);
    }

    private int bitField0_;
    public static final int COIN_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object coinName_;
    /**
     * <code>optional string coin_name = 1;</code>
     */
    public boolean hasCoinName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string coin_name = 1;</code>
     */
    public java.lang.String getCoinName() {
      java.lang.Object ref = coinName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          coinName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string coin_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCoinNameBytes() {
      java.lang.Object ref = coinName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        coinName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COIN_SHORTCUT_FIELD_NUMBER = 2;
    private volatile java.lang.Object coinShortcut_;
    /**
     * <code>optional string coin_shortcut = 2;</code>
     */
    public boolean hasCoinShortcut() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string coin_shortcut = 2;</code>
     */
    public java.lang.String getCoinShortcut() {
      java.lang.Object ref = coinShortcut_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          coinShortcut_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string coin_shortcut = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCoinShortcutBytes() {
      java.lang.Object ref = coinShortcut_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        coinShortcut_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDRESS_TYPE_FIELD_NUMBER = 3;
    private int addressType_;
    /**
     * <code>optional uint32 address_type = 3 [default = 0];</code>
     */
    public boolean hasAddressType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 address_type = 3 [default = 0];</code>
     */
    public int getAddressType() {
      return addressType_;
    }

    public static final int MAXFEE_KB_FIELD_NUMBER = 4;
    private long maxfeeKb_;
    /**
     * <code>optional uint64 maxfee_kb = 4;</code>
     */
    public boolean hasMaxfeeKb() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 maxfee_kb = 4;</code>
     */
    public long getMaxfeeKb() {
      return maxfeeKb_;
    }

    public static final int ADDRESS_TYPE_P2SH_FIELD_NUMBER = 5;
    private int addressTypeP2Sh_;
    /**
     * <code>optional uint32 address_type_p2sh = 5 [default = 5];</code>
     */
    public boolean hasAddressTypeP2Sh() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 address_type_p2sh = 5 [default = 5];</code>
     */
    public int getAddressTypeP2Sh() {
      return addressTypeP2Sh_;
    }

    public static final int SIGNED_MESSAGE_HEADER_FIELD_NUMBER = 8;
    private volatile java.lang.Object signedMessageHeader_;
    /**
     * <code>optional string signed_message_header = 8;</code>
     */
    public boolean hasSignedMessageHeader() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string signed_message_header = 8;</code>
     */
    public java.lang.String getSignedMessageHeader() {
      java.lang.Object ref = signedMessageHeader_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          signedMessageHeader_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string signed_message_header = 8;</code>
     */
    public com.google.protobuf.ByteString
        getSignedMessageHeaderBytes() {
      java.lang.Object ref = signedMessageHeader_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        signedMessageHeader_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int XPUB_MAGIC_FIELD_NUMBER = 9;
    private int xpubMagic_;
    /**
     * <pre>
     * default=0x0488b21e
     * </pre>
     *
     * <code>optional uint32 xpub_magic = 9 [default = 76067358];</code>
     */
    public boolean hasXpubMagic() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * default=0x0488b21e
     * </pre>
     *
     * <code>optional uint32 xpub_magic = 9 [default = 76067358];</code>
     */
    public int getXpubMagic() {
      return xpubMagic_;
    }

    public static final int XPRV_MAGIC_FIELD_NUMBER = 10;
    private int xprvMagic_;
    /**
     * <pre>
     * default=0x0488ade4
     * </pre>
     *
     * <code>optional uint32 xprv_magic = 10 [default = 76066276];</code>
     */
    public boolean hasXprvMagic() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * default=0x0488ade4
     * </pre>
     *
     * <code>optional uint32 xprv_magic = 10 [default = 76066276];</code>
     */
    public int getXprvMagic() {
      return xprvMagic_;
    }

    public static final int SEGWIT_FIELD_NUMBER = 11;
    private boolean segwit_;
    /**
     * <code>optional bool segwit = 11;</code>
     */
    public boolean hasSegwit() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool segwit = 11;</code>
     */
    public boolean getSegwit() {
      return segwit_;
    }

    public static final int FORKID_FIELD_NUMBER = 12;
    private int forkid_;
    /**
     * <code>optional uint32 forkid = 12;</code>
     */
    public boolean hasForkid() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 forkid = 12;</code>
     */
    public int getForkid() {
      return forkid_;
    }

    public static final int FORCE_BIP143_FIELD_NUMBER = 13;
    private boolean forceBip143_;
    /**
     * <code>optional bool force_bip143 = 13;</code>
     */
    public boolean hasForceBip143() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool force_bip143 = 13;</code>
     */
    public boolean getForceBip143() {
      return forceBip143_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, coinName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, coinShortcut_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, addressType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, maxfeeKb_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, addressTypeP2Sh_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, signedMessageHeader_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(9, xpubMagic_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(10, xprvMagic_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(11, segwit_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(12, forkid_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(13, forceBip143_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, coinName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, coinShortcut_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, addressType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, maxfeeKb_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, addressTypeP2Sh_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, signedMessageHeader_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, xpubMagic_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, xprvMagic_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, segwit_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, forkid_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, forceBip143_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType) obj;

      boolean result = true;
      result = result && (hasCoinName() == other.hasCoinName());
      if (hasCoinName()) {
        result = result && getCoinName()
            .equals(other.getCoinName());
      }
      result = result && (hasCoinShortcut() == other.hasCoinShortcut());
      if (hasCoinShortcut()) {
        result = result && getCoinShortcut()
            .equals(other.getCoinShortcut());
      }
      result = result && (hasAddressType() == other.hasAddressType());
      if (hasAddressType()) {
        result = result && (getAddressType()
            == other.getAddressType());
      }
      result = result && (hasMaxfeeKb() == other.hasMaxfeeKb());
      if (hasMaxfeeKb()) {
        result = result && (getMaxfeeKb()
            == other.getMaxfeeKb());
      }
      result = result && (hasAddressTypeP2Sh() == other.hasAddressTypeP2Sh());
      if (hasAddressTypeP2Sh()) {
        result = result && (getAddressTypeP2Sh()
            == other.getAddressTypeP2Sh());
      }
      result = result && (hasSignedMessageHeader() == other.hasSignedMessageHeader());
      if (hasSignedMessageHeader()) {
        result = result && getSignedMessageHeader()
            .equals(other.getSignedMessageHeader());
      }
      result = result && (hasXpubMagic() == other.hasXpubMagic());
      if (hasXpubMagic()) {
        result = result && (getXpubMagic()
            == other.getXpubMagic());
      }
      result = result && (hasXprvMagic() == other.hasXprvMagic());
      if (hasXprvMagic()) {
        result = result && (getXprvMagic()
            == other.getXprvMagic());
      }
      result = result && (hasSegwit() == other.hasSegwit());
      if (hasSegwit()) {
        result = result && (getSegwit()
            == other.getSegwit());
      }
      result = result && (hasForkid() == other.hasForkid());
      if (hasForkid()) {
        result = result && (getForkid()
            == other.getForkid());
      }
      result = result && (hasForceBip143() == other.hasForceBip143());
      if (hasForceBip143()) {
        result = result && (getForceBip143()
            == other.getForceBip143());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasCoinName()) {
        hash = (37 * hash) + COIN_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getCoinName().hashCode();
      }
      if (hasCoinShortcut()) {
        hash = (37 * hash) + COIN_SHORTCUT_FIELD_NUMBER;
        hash = (53 * hash) + getCoinShortcut().hashCode();
      }
      if (hasAddressType()) {
        hash = (37 * hash) + ADDRESS_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getAddressType();
      }
      if (hasMaxfeeKb()) {
        hash = (37 * hash) + MAXFEE_KB_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMaxfeeKb());
      }
      if (hasAddressTypeP2Sh()) {
        hash = (37 * hash) + ADDRESS_TYPE_P2SH_FIELD_NUMBER;
        hash = (53 * hash) + getAddressTypeP2Sh();
      }
      if (hasSignedMessageHeader()) {
        hash = (37 * hash) + SIGNED_MESSAGE_HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getSignedMessageHeader().hashCode();
      }
      if (hasXpubMagic()) {
        hash = (37 * hash) + XPUB_MAGIC_FIELD_NUMBER;
        hash = (53 * hash) + getXpubMagic();
      }
      if (hasXprvMagic()) {
        hash = (37 * hash) + XPRV_MAGIC_FIELD_NUMBER;
        hash = (53 * hash) + getXprvMagic();
      }
      if (hasSegwit()) {
        hash = (37 * hash) + SEGWIT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSegwit());
      }
      if (hasForkid()) {
        hash = (37 * hash) + FORKID_FIELD_NUMBER;
        hash = (53 * hash) + getForkid();
      }
      if (hasForceBip143()) {
        hash = (37 * hash) + FORCE_BIP143_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getForceBip143());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing Coin
     * &#64;used_in Features
     * </pre>
     *
     * Protobuf type {@code CoinType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CoinType)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_CoinType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_CoinType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        coinName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        coinShortcut_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        addressType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        maxfeeKb_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        addressTypeP2Sh_ = 5;
        bitField0_ = (bitField0_ & ~0x00000010);
        signedMessageHeader_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        xpubMagic_ = 76067358;
        bitField0_ = (bitField0_ & ~0x00000040);
        xprvMagic_ = 76066276;
        bitField0_ = (bitField0_ & ~0x00000080);
        segwit_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        forkid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        forceBip143_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_CoinType_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.coinName_ = coinName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.coinShortcut_ = coinShortcut_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.addressType_ = addressType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.maxfeeKb_ = maxfeeKb_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.addressTypeP2Sh_ = addressTypeP2Sh_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.signedMessageHeader_ = signedMessageHeader_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.xpubMagic_ = xpubMagic_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.xprvMagic_ = xprvMagic_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.segwit_ = segwit_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.forkid_ = forkid_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.forceBip143_ = forceBip143_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType.getDefaultInstance()) return this;
        if (other.hasCoinName()) {
          bitField0_ |= 0x00000001;
          coinName_ = other.coinName_;
          onChanged();
        }
        if (other.hasCoinShortcut()) {
          bitField0_ |= 0x00000002;
          coinShortcut_ = other.coinShortcut_;
          onChanged();
        }
        if (other.hasAddressType()) {
          setAddressType(other.getAddressType());
        }
        if (other.hasMaxfeeKb()) {
          setMaxfeeKb(other.getMaxfeeKb());
        }
        if (other.hasAddressTypeP2Sh()) {
          setAddressTypeP2Sh(other.getAddressTypeP2Sh());
        }
        if (other.hasSignedMessageHeader()) {
          bitField0_ |= 0x00000020;
          signedMessageHeader_ = other.signedMessageHeader_;
          onChanged();
        }
        if (other.hasXpubMagic()) {
          setXpubMagic(other.getXpubMagic());
        }
        if (other.hasXprvMagic()) {
          setXprvMagic(other.getXprvMagic());
        }
        if (other.hasSegwit()) {
          setSegwit(other.getSegwit());
        }
        if (other.hasForkid()) {
          setForkid(other.getForkid());
        }
        if (other.hasForceBip143()) {
          setForceBip143(other.getForceBip143());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object coinName_ = "";
      /**
       * <code>optional string coin_name = 1;</code>
       */
      public boolean hasCoinName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string coin_name = 1;</code>
       */
      public java.lang.String getCoinName() {
        java.lang.Object ref = coinName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            coinName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string coin_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCoinNameBytes() {
        java.lang.Object ref = coinName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          coinName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string coin_name = 1;</code>
       */
      public Builder setCoinName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        coinName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string coin_name = 1;</code>
       */
      public Builder clearCoinName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        coinName_ = getDefaultInstance().getCoinName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string coin_name = 1;</code>
       */
      public Builder setCoinNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        coinName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object coinShortcut_ = "";
      /**
       * <code>optional string coin_shortcut = 2;</code>
       */
      public boolean hasCoinShortcut() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string coin_shortcut = 2;</code>
       */
      public java.lang.String getCoinShortcut() {
        java.lang.Object ref = coinShortcut_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            coinShortcut_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string coin_shortcut = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCoinShortcutBytes() {
        java.lang.Object ref = coinShortcut_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          coinShortcut_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string coin_shortcut = 2;</code>
       */
      public Builder setCoinShortcut(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        coinShortcut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string coin_shortcut = 2;</code>
       */
      public Builder clearCoinShortcut() {
        bitField0_ = (bitField0_ & ~0x00000002);
        coinShortcut_ = getDefaultInstance().getCoinShortcut();
        onChanged();
        return this;
      }
      /**
       * <code>optional string coin_shortcut = 2;</code>
       */
      public Builder setCoinShortcutBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        coinShortcut_ = value;
        onChanged();
        return this;
      }

      private int addressType_ ;
      /**
       * <code>optional uint32 address_type = 3 [default = 0];</code>
       */
      public boolean hasAddressType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 address_type = 3 [default = 0];</code>
       */
      public int getAddressType() {
        return addressType_;
      }
      /**
       * <code>optional uint32 address_type = 3 [default = 0];</code>
       */
      public Builder setAddressType(int value) {
        bitField0_ |= 0x00000004;
        addressType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 address_type = 3 [default = 0];</code>
       */
      public Builder clearAddressType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        addressType_ = 0;
        onChanged();
        return this;
      }

      private long maxfeeKb_ ;
      /**
       * <code>optional uint64 maxfee_kb = 4;</code>
       */
      public boolean hasMaxfeeKb() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 maxfee_kb = 4;</code>
       */
      public long getMaxfeeKb() {
        return maxfeeKb_;
      }
      /**
       * <code>optional uint64 maxfee_kb = 4;</code>
       */
      public Builder setMaxfeeKb(long value) {
        bitField0_ |= 0x00000008;
        maxfeeKb_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 maxfee_kb = 4;</code>
       */
      public Builder clearMaxfeeKb() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxfeeKb_ = 0L;
        onChanged();
        return this;
      }

      private int addressTypeP2Sh_ = 5;
      /**
       * <code>optional uint32 address_type_p2sh = 5 [default = 5];</code>
       */
      public boolean hasAddressTypeP2Sh() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 address_type_p2sh = 5 [default = 5];</code>
       */
      public int getAddressTypeP2Sh() {
        return addressTypeP2Sh_;
      }
      /**
       * <code>optional uint32 address_type_p2sh = 5 [default = 5];</code>
       */
      public Builder setAddressTypeP2Sh(int value) {
        bitField0_ |= 0x00000010;
        addressTypeP2Sh_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 address_type_p2sh = 5 [default = 5];</code>
       */
      public Builder clearAddressTypeP2Sh() {
        bitField0_ = (bitField0_ & ~0x00000010);
        addressTypeP2Sh_ = 5;
        onChanged();
        return this;
      }

      private java.lang.Object signedMessageHeader_ = "";
      /**
       * <code>optional string signed_message_header = 8;</code>
       */
      public boolean hasSignedMessageHeader() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string signed_message_header = 8;</code>
       */
      public java.lang.String getSignedMessageHeader() {
        java.lang.Object ref = signedMessageHeader_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            signedMessageHeader_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string signed_message_header = 8;</code>
       */
      public com.google.protobuf.ByteString
          getSignedMessageHeaderBytes() {
        java.lang.Object ref = signedMessageHeader_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          signedMessageHeader_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string signed_message_header = 8;</code>
       */
      public Builder setSignedMessageHeader(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        signedMessageHeader_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string signed_message_header = 8;</code>
       */
      public Builder clearSignedMessageHeader() {
        bitField0_ = (bitField0_ & ~0x00000020);
        signedMessageHeader_ = getDefaultInstance().getSignedMessageHeader();
        onChanged();
        return this;
      }
      /**
       * <code>optional string signed_message_header = 8;</code>
       */
      public Builder setSignedMessageHeaderBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        signedMessageHeader_ = value;
        onChanged();
        return this;
      }

      private int xpubMagic_ = 76067358;
      /**
       * <pre>
       * default=0x0488b21e
       * </pre>
       *
       * <code>optional uint32 xpub_magic = 9 [default = 76067358];</code>
       */
      public boolean hasXpubMagic() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * default=0x0488b21e
       * </pre>
       *
       * <code>optional uint32 xpub_magic = 9 [default = 76067358];</code>
       */
      public int getXpubMagic() {
        return xpubMagic_;
      }
      /**
       * <pre>
       * default=0x0488b21e
       * </pre>
       *
       * <code>optional uint32 xpub_magic = 9 [default = 76067358];</code>
       */
      public Builder setXpubMagic(int value) {
        bitField0_ |= 0x00000040;
        xpubMagic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * default=0x0488b21e
       * </pre>
       *
       * <code>optional uint32 xpub_magic = 9 [default = 76067358];</code>
       */
      public Builder clearXpubMagic() {
        bitField0_ = (bitField0_ & ~0x00000040);
        xpubMagic_ = 76067358;
        onChanged();
        return this;
      }

      private int xprvMagic_ = 76066276;
      /**
       * <pre>
       * default=0x0488ade4
       * </pre>
       *
       * <code>optional uint32 xprv_magic = 10 [default = 76066276];</code>
       */
      public boolean hasXprvMagic() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * default=0x0488ade4
       * </pre>
       *
       * <code>optional uint32 xprv_magic = 10 [default = 76066276];</code>
       */
      public int getXprvMagic() {
        return xprvMagic_;
      }
      /**
       * <pre>
       * default=0x0488ade4
       * </pre>
       *
       * <code>optional uint32 xprv_magic = 10 [default = 76066276];</code>
       */
      public Builder setXprvMagic(int value) {
        bitField0_ |= 0x00000080;
        xprvMagic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * default=0x0488ade4
       * </pre>
       *
       * <code>optional uint32 xprv_magic = 10 [default = 76066276];</code>
       */
      public Builder clearXprvMagic() {
        bitField0_ = (bitField0_ & ~0x00000080);
        xprvMagic_ = 76066276;
        onChanged();
        return this;
      }

      private boolean segwit_ ;
      /**
       * <code>optional bool segwit = 11;</code>
       */
      public boolean hasSegwit() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool segwit = 11;</code>
       */
      public boolean getSegwit() {
        return segwit_;
      }
      /**
       * <code>optional bool segwit = 11;</code>
       */
      public Builder setSegwit(boolean value) {
        bitField0_ |= 0x00000100;
        segwit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool segwit = 11;</code>
       */
      public Builder clearSegwit() {
        bitField0_ = (bitField0_ & ~0x00000100);
        segwit_ = false;
        onChanged();
        return this;
      }

      private int forkid_ ;
      /**
       * <code>optional uint32 forkid = 12;</code>
       */
      public boolean hasForkid() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 forkid = 12;</code>
       */
      public int getForkid() {
        return forkid_;
      }
      /**
       * <code>optional uint32 forkid = 12;</code>
       */
      public Builder setForkid(int value) {
        bitField0_ |= 0x00000200;
        forkid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 forkid = 12;</code>
       */
      public Builder clearForkid() {
        bitField0_ = (bitField0_ & ~0x00000200);
        forkid_ = 0;
        onChanged();
        return this;
      }

      private boolean forceBip143_ ;
      /**
       * <code>optional bool force_bip143 = 13;</code>
       */
      public boolean hasForceBip143() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool force_bip143 = 13;</code>
       */
      public boolean getForceBip143() {
        return forceBip143_;
      }
      /**
       * <code>optional bool force_bip143 = 13;</code>
       */
      public Builder setForceBip143(boolean value) {
        bitField0_ |= 0x00000400;
        forceBip143_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool force_bip143 = 13;</code>
       */
      public Builder clearForceBip143() {
        bitField0_ = (bitField0_ & ~0x00000400);
        forceBip143_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CoinType)
    }

    // @@protoc_insertion_point(class_scope:CoinType)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CoinType>
        PARSER = new com.google.protobuf.AbstractParser<CoinType>() {
      public CoinType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CoinType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CoinType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CoinType> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.CoinType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultisigRedeemScriptTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MultisigRedeemScriptType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * pubkeys from multisig address (sorted lexicographically)
     * </pre>
     *
     * <code>repeated .HDNodePathType pubkeys = 1;</code>
     */
    java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType> 
        getPubkeysList();
    /**
     * <pre>
     * pubkeys from multisig address (sorted lexicographically)
     * </pre>
     *
     * <code>repeated .HDNodePathType pubkeys = 1;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType getPubkeys(int index);
    /**
     * <pre>
     * pubkeys from multisig address (sorted lexicographically)
     * </pre>
     *
     * <code>repeated .HDNodePathType pubkeys = 1;</code>
     */
    int getPubkeysCount();
    /**
     * <pre>
     * pubkeys from multisig address (sorted lexicographically)
     * </pre>
     *
     * <code>repeated .HDNodePathType pubkeys = 1;</code>
     */
    java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathTypeOrBuilder> 
        getPubkeysOrBuilderList();
    /**
     * <pre>
     * pubkeys from multisig address (sorted lexicographically)
     * </pre>
     *
     * <code>repeated .HDNodePathType pubkeys = 1;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathTypeOrBuilder getPubkeysOrBuilder(
        int index);

    /**
     * <pre>
     * existing signatures for partially signed input
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getSignaturesList();
    /**
     * <pre>
     * existing signatures for partially signed input
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    int getSignaturesCount();
    /**
     * <pre>
     * existing signatures for partially signed input
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    com.google.protobuf.ByteString getSignatures(int index);

    /**
     * <pre>
     * "m" from n, how many valid signatures is necessary for spending
     * </pre>
     *
     * <code>optional uint32 m = 3;</code>
     */
    boolean hasM();
    /**
     * <pre>
     * "m" from n, how many valid signatures is necessary for spending
     * </pre>
     *
     * <code>optional uint32 m = 3;</code>
     */
    int getM();
  }
  /**
   * <pre>
   **
   * Type of redeem script used in input
   * &#64;used_in TxInputType
   * </pre>
   *
   * Protobuf type {@code MultisigRedeemScriptType}
   */
  public  static final class MultisigRedeemScriptType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MultisigRedeemScriptType)
      MultisigRedeemScriptTypeOrBuilder {
    // Use MultisigRedeemScriptType.newBuilder() to construct.
    private MultisigRedeemScriptType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultisigRedeemScriptType() {
      pubkeys_ = java.util.Collections.emptyList();
      signatures_ = java.util.Collections.emptyList();
      m_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultisigRedeemScriptType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                pubkeys_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType>();
                mutable_bitField0_ |= 0x00000001;
              }
              pubkeys_.add(
                  input.readMessage(com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                signatures_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000002;
              }
              signatures_.add(input.readBytes());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              m_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          pubkeys_ = java.util.Collections.unmodifiableList(pubkeys_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          signatures_ = java.util.Collections.unmodifiableList(signatures_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_MultisigRedeemScriptType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_MultisigRedeemScriptType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder.class);
    }

    private int bitField0_;
    public static final int PUBKEYS_FIELD_NUMBER = 1;
    private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType> pubkeys_;
    /**
     * <pre>
     * pubkeys from multisig address (sorted lexicographically)
     * </pre>
     *
     * <code>repeated .HDNodePathType pubkeys = 1;</code>
     */
    public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType> getPubkeysList() {
      return pubkeys_;
    }
    /**
     * <pre>
     * pubkeys from multisig address (sorted lexicographically)
     * </pre>
     *
     * <code>repeated .HDNodePathType pubkeys = 1;</code>
     */
    public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathTypeOrBuilder> 
        getPubkeysOrBuilderList() {
      return pubkeys_;
    }
    /**
     * <pre>
     * pubkeys from multisig address (sorted lexicographically)
     * </pre>
     *
     * <code>repeated .HDNodePathType pubkeys = 1;</code>
     */
    public int getPubkeysCount() {
      return pubkeys_.size();
    }
    /**
     * <pre>
     * pubkeys from multisig address (sorted lexicographically)
     * </pre>
     *
     * <code>repeated .HDNodePathType pubkeys = 1;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType getPubkeys(int index) {
      return pubkeys_.get(index);
    }
    /**
     * <pre>
     * pubkeys from multisig address (sorted lexicographically)
     * </pre>
     *
     * <code>repeated .HDNodePathType pubkeys = 1;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathTypeOrBuilder getPubkeysOrBuilder(
        int index) {
      return pubkeys_.get(index);
    }

    public static final int SIGNATURES_FIELD_NUMBER = 2;
    private java.util.List<com.google.protobuf.ByteString> signatures_;
    /**
     * <pre>
     * existing signatures for partially signed input
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getSignaturesList() {
      return signatures_;
    }
    /**
     * <pre>
     * existing signatures for partially signed input
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    public int getSignaturesCount() {
      return signatures_.size();
    }
    /**
     * <pre>
     * existing signatures for partially signed input
     * </pre>
     *
     * <code>repeated bytes signatures = 2;</code>
     */
    public com.google.protobuf.ByteString getSignatures(int index) {
      return signatures_.get(index);
    }

    public static final int M_FIELD_NUMBER = 3;
    private int m_;
    /**
     * <pre>
     * "m" from n, how many valid signatures is necessary for spending
     * </pre>
     *
     * <code>optional uint32 m = 3;</code>
     */
    public boolean hasM() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * "m" from n, how many valid signatures is necessary for spending
     * </pre>
     *
     * <code>optional uint32 m = 3;</code>
     */
    public int getM() {
      return m_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getPubkeysCount(); i++) {
        if (!getPubkeys(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < pubkeys_.size(); i++) {
        output.writeMessage(1, pubkeys_.get(i));
      }
      for (int i = 0; i < signatures_.size(); i++) {
        output.writeBytes(2, signatures_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(3, m_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < pubkeys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, pubkeys_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < signatures_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(signatures_.get(i));
        }
        size += dataSize;
        size += 1 * getSignaturesList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, m_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType) obj;

      boolean result = true;
      result = result && getPubkeysList()
          .equals(other.getPubkeysList());
      result = result && getSignaturesList()
          .equals(other.getSignaturesList());
      result = result && (hasM() == other.hasM());
      if (hasM()) {
        result = result && (getM()
            == other.getM());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getPubkeysCount() > 0) {
        hash = (37 * hash) + PUBKEYS_FIELD_NUMBER;
        hash = (53 * hash) + getPubkeysList().hashCode();
      }
      if (getSignaturesCount() > 0) {
        hash = (37 * hash) + SIGNATURES_FIELD_NUMBER;
        hash = (53 * hash) + getSignaturesList().hashCode();
      }
      if (hasM()) {
        hash = (37 * hash) + M_FIELD_NUMBER;
        hash = (53 * hash) + getM();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Type of redeem script used in input
     * &#64;used_in TxInputType
     * </pre>
     *
     * Protobuf type {@code MultisigRedeemScriptType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MultisigRedeemScriptType)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_MultisigRedeemScriptType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_MultisigRedeemScriptType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPubkeysFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (pubkeysBuilder_ == null) {
          pubkeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pubkeysBuilder_.clear();
        }
        signatures_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        m_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_MultisigRedeemScriptType_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (pubkeysBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            pubkeys_ = java.util.Collections.unmodifiableList(pubkeys_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.pubkeys_ = pubkeys_;
        } else {
          result.pubkeys_ = pubkeysBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          signatures_ = java.util.Collections.unmodifiableList(signatures_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.signatures_ = signatures_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.m_ = m_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance()) return this;
        if (pubkeysBuilder_ == null) {
          if (!other.pubkeys_.isEmpty()) {
            if (pubkeys_.isEmpty()) {
              pubkeys_ = other.pubkeys_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePubkeysIsMutable();
              pubkeys_.addAll(other.pubkeys_);
            }
            onChanged();
          }
        } else {
          if (!other.pubkeys_.isEmpty()) {
            if (pubkeysBuilder_.isEmpty()) {
              pubkeysBuilder_.dispose();
              pubkeysBuilder_ = null;
              pubkeys_ = other.pubkeys_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pubkeysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPubkeysFieldBuilder() : null;
            } else {
              pubkeysBuilder_.addAllMessages(other.pubkeys_);
            }
          }
        }
        if (!other.signatures_.isEmpty()) {
          if (signatures_.isEmpty()) {
            signatures_ = other.signatures_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSignaturesIsMutable();
            signatures_.addAll(other.signatures_);
          }
          onChanged();
        }
        if (other.hasM()) {
          setM(other.getM());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getPubkeysCount(); i++) {
          if (!getPubkeys(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType> pubkeys_ =
        java.util.Collections.emptyList();
      private void ensurePubkeysIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          pubkeys_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType>(pubkeys_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathTypeOrBuilder> pubkeysBuilder_;

      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType> getPubkeysList() {
        if (pubkeysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pubkeys_);
        } else {
          return pubkeysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public int getPubkeysCount() {
        if (pubkeysBuilder_ == null) {
          return pubkeys_.size();
        } else {
          return pubkeysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType getPubkeys(int index) {
        if (pubkeysBuilder_ == null) {
          return pubkeys_.get(index);
        } else {
          return pubkeysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public Builder setPubkeys(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType value) {
        if (pubkeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePubkeysIsMutable();
          pubkeys_.set(index, value);
          onChanged();
        } else {
          pubkeysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public Builder setPubkeys(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder builderForValue) {
        if (pubkeysBuilder_ == null) {
          ensurePubkeysIsMutable();
          pubkeys_.set(index, builderForValue.build());
          onChanged();
        } else {
          pubkeysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public Builder addPubkeys(com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType value) {
        if (pubkeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePubkeysIsMutable();
          pubkeys_.add(value);
          onChanged();
        } else {
          pubkeysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public Builder addPubkeys(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType value) {
        if (pubkeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePubkeysIsMutable();
          pubkeys_.add(index, value);
          onChanged();
        } else {
          pubkeysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public Builder addPubkeys(
          com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder builderForValue) {
        if (pubkeysBuilder_ == null) {
          ensurePubkeysIsMutable();
          pubkeys_.add(builderForValue.build());
          onChanged();
        } else {
          pubkeysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public Builder addPubkeys(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder builderForValue) {
        if (pubkeysBuilder_ == null) {
          ensurePubkeysIsMutable();
          pubkeys_.add(index, builderForValue.build());
          onChanged();
        } else {
          pubkeysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public Builder addAllPubkeys(
          java.lang.Iterable<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType> values) {
        if (pubkeysBuilder_ == null) {
          ensurePubkeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pubkeys_);
          onChanged();
        } else {
          pubkeysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public Builder clearPubkeys() {
        if (pubkeysBuilder_ == null) {
          pubkeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pubkeysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public Builder removePubkeys(int index) {
        if (pubkeysBuilder_ == null) {
          ensurePubkeysIsMutable();
          pubkeys_.remove(index);
          onChanged();
        } else {
          pubkeysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder getPubkeysBuilder(
          int index) {
        return getPubkeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathTypeOrBuilder getPubkeysOrBuilder(
          int index) {
        if (pubkeysBuilder_ == null) {
          return pubkeys_.get(index);  } else {
          return pubkeysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathTypeOrBuilder> 
           getPubkeysOrBuilderList() {
        if (pubkeysBuilder_ != null) {
          return pubkeysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pubkeys_);
        }
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder addPubkeysBuilder() {
        return getPubkeysFieldBuilder().addBuilder(
            com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.getDefaultInstance());
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder addPubkeysBuilder(
          int index) {
        return getPubkeysFieldBuilder().addBuilder(
            index, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.getDefaultInstance());
      }
      /**
       * <pre>
       * pubkeys from multisig address (sorted lexicographically)
       * </pre>
       *
       * <code>repeated .HDNodePathType pubkeys = 1;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder> 
           getPubkeysBuilderList() {
        return getPubkeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathTypeOrBuilder> 
          getPubkeysFieldBuilder() {
        if (pubkeysBuilder_ == null) {
          pubkeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.HDNodePathTypeOrBuilder>(
                  pubkeys_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          pubkeys_ = null;
        }
        return pubkeysBuilder_;
      }

      private java.util.List<com.google.protobuf.ByteString> signatures_ = java.util.Collections.emptyList();
      private void ensureSignaturesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          signatures_ = new java.util.ArrayList<com.google.protobuf.ByteString>(signatures_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * existing signatures for partially signed input
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getSignaturesList() {
        return java.util.Collections.unmodifiableList(signatures_);
      }
      /**
       * <pre>
       * existing signatures for partially signed input
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public int getSignaturesCount() {
        return signatures_.size();
      }
      /**
       * <pre>
       * existing signatures for partially signed input
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public com.google.protobuf.ByteString getSignatures(int index) {
        return signatures_.get(index);
      }
      /**
       * <pre>
       * existing signatures for partially signed input
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public Builder setSignatures(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSignaturesIsMutable();
        signatures_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * existing signatures for partially signed input
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public Builder addSignatures(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSignaturesIsMutable();
        signatures_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * existing signatures for partially signed input
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public Builder addAllSignatures(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureSignaturesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, signatures_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * existing signatures for partially signed input
       * </pre>
       *
       * <code>repeated bytes signatures = 2;</code>
       */
      public Builder clearSignatures() {
        signatures_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int m_ ;
      /**
       * <pre>
       * "m" from n, how many valid signatures is necessary for spending
       * </pre>
       *
       * <code>optional uint32 m = 3;</code>
       */
      public boolean hasM() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * "m" from n, how many valid signatures is necessary for spending
       * </pre>
       *
       * <code>optional uint32 m = 3;</code>
       */
      public int getM() {
        return m_;
      }
      /**
       * <pre>
       * "m" from n, how many valid signatures is necessary for spending
       * </pre>
       *
       * <code>optional uint32 m = 3;</code>
       */
      public Builder setM(int value) {
        bitField0_ |= 0x00000004;
        m_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "m" from n, how many valid signatures is necessary for spending
       * </pre>
       *
       * <code>optional uint32 m = 3;</code>
       */
      public Builder clearM() {
        bitField0_ = (bitField0_ & ~0x00000004);
        m_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MultisigRedeemScriptType)
    }

    // @@protoc_insertion_point(class_scope:MultisigRedeemScriptType)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<MultisigRedeemScriptType>
        PARSER = new com.google.protobuf.AbstractParser<MultisigRedeemScriptType>() {
      public MultisigRedeemScriptType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MultisigRedeemScriptType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultisigRedeemScriptType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultisigRedeemScriptType> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TxInputTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TxInputType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    java.util.List<java.lang.Integer> getAddressNList();
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    int getAddressNCount();
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    int getAddressN(int index);

    /**
     * <pre>
     * hash of previous transaction output to spend by this input
     * </pre>
     *
     * <code>required bytes prev_hash = 2;</code>
     */
    boolean hasPrevHash();
    /**
     * <pre>
     * hash of previous transaction output to spend by this input
     * </pre>
     *
     * <code>required bytes prev_hash = 2;</code>
     */
    com.google.protobuf.ByteString getPrevHash();

    /**
     * <pre>
     * index of previous output to spend
     * </pre>
     *
     * <code>required uint32 prev_index = 3;</code>
     */
    boolean hasPrevIndex();
    /**
     * <pre>
     * index of previous output to spend
     * </pre>
     *
     * <code>required uint32 prev_index = 3;</code>
     */
    int getPrevIndex();

    /**
     * <pre>
     * script signature, unset for tx to sign
     * </pre>
     *
     * <code>optional bytes script_sig = 4;</code>
     */
    boolean hasScriptSig();
    /**
     * <pre>
     * script signature, unset for tx to sign
     * </pre>
     *
     * <code>optional bytes script_sig = 4;</code>
     */
    com.google.protobuf.ByteString getScriptSig();

    /**
     * <pre>
     * sequence (default=0xffffffff)
     * </pre>
     *
     * <code>optional uint32 sequence = 5 [default = 4294967295];</code>
     */
    boolean hasSequence();
    /**
     * <pre>
     * sequence (default=0xffffffff)
     * </pre>
     *
     * <code>optional uint32 sequence = 5 [default = 4294967295];</code>
     */
    int getSequence();

    /**
     * <pre>
     * defines template of input script
     * </pre>
     *
     * <code>optional .InputScriptType script_type = 6 [default = SPENDADDRESS];</code>
     */
    boolean hasScriptType();
    /**
     * <pre>
     * defines template of input script
     * </pre>
     *
     * <code>optional .InputScriptType script_type = 6 [default = SPENDADDRESS];</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType getScriptType();

    /**
     * <pre>
     * Filled if input is going to spend multisig tx
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
     */
    boolean hasMultisig();
    /**
     * <pre>
     * Filled if input is going to spend multisig tx
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType getMultisig();
    /**
     * <pre>
     * Filled if input is going to spend multisig tx
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder getMultisigOrBuilder();

    /**
     * <pre>
     * amount of previous transaction output (for segwit only)
     * </pre>
     *
     * <code>optional uint64 amount = 8;</code>
     */
    boolean hasAmount();
    /**
     * <pre>
     * amount of previous transaction output (for segwit only)
     * </pre>
     *
     * <code>optional uint64 amount = 8;</code>
     */
    long getAmount();

    /**
     * <code>optional uint32 decred_tree = 9;</code>
     */
    boolean hasDecredTree();
    /**
     * <code>optional uint32 decred_tree = 9;</code>
     */
    int getDecredTree();

    /**
     * <code>optional uint32 decred_script_version = 10;</code>
     */
    boolean hasDecredScriptVersion();
    /**
     * <code>optional uint32 decred_script_version = 10;</code>
     */
    int getDecredScriptVersion();
  }
  /**
   * <pre>
   **
   * Structure representing transaction input
   * &#64;used_in SimpleSignTx
   * &#64;used_in TransactionType
   * </pre>
   *
   * Protobuf type {@code TxInputType}
   */
  public  static final class TxInputType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TxInputType)
      TxInputTypeOrBuilder {
    // Use TxInputType.newBuilder() to construct.
    private TxInputType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TxInputType() {
      addressN_ = java.util.Collections.emptyList();
      prevHash_ = com.google.protobuf.ByteString.EMPTY;
      prevIndex_ = 0;
      scriptSig_ = com.google.protobuf.ByteString.EMPTY;
      sequence_ = -1;
      scriptType_ = 0;
      amount_ = 0L;
      decredTree_ = 0;
      decredScriptVersion_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TxInputType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                addressN_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              addressN_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                addressN_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                addressN_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              prevHash_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              prevIndex_ = input.readUInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000004;
              scriptSig_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              sequence_ = input.readUInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType value = com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                scriptType_ = rawValue;
              }
              break;
            }
            case 58: {
              com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = multisig_.toBuilder();
              }
              multisig_ = input.readMessage(com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(multisig_);
                multisig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              amount_ = input.readUInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              decredTree_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              decredScriptVersion_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          addressN_ = java.util.Collections.unmodifiableList(addressN_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxInputType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxInputType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder.class);
    }

    private int bitField0_;
    public static final int ADDRESS_N_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> addressN_;
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getAddressNList() {
      return addressN_;
    }
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    public int getAddressNCount() {
      return addressN_.size();
    }
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    public int getAddressN(int index) {
      return addressN_.get(index);
    }

    public static final int PREV_HASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString prevHash_;
    /**
     * <pre>
     * hash of previous transaction output to spend by this input
     * </pre>
     *
     * <code>required bytes prev_hash = 2;</code>
     */
    public boolean hasPrevHash() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * hash of previous transaction output to spend by this input
     * </pre>
     *
     * <code>required bytes prev_hash = 2;</code>
     */
    public com.google.protobuf.ByteString getPrevHash() {
      return prevHash_;
    }

    public static final int PREV_INDEX_FIELD_NUMBER = 3;
    private int prevIndex_;
    /**
     * <pre>
     * index of previous output to spend
     * </pre>
     *
     * <code>required uint32 prev_index = 3;</code>
     */
    public boolean hasPrevIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * index of previous output to spend
     * </pre>
     *
     * <code>required uint32 prev_index = 3;</code>
     */
    public int getPrevIndex() {
      return prevIndex_;
    }

    public static final int SCRIPT_SIG_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString scriptSig_;
    /**
     * <pre>
     * script signature, unset for tx to sign
     * </pre>
     *
     * <code>optional bytes script_sig = 4;</code>
     */
    public boolean hasScriptSig() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * script signature, unset for tx to sign
     * </pre>
     *
     * <code>optional bytes script_sig = 4;</code>
     */
    public com.google.protobuf.ByteString getScriptSig() {
      return scriptSig_;
    }

    public static final int SEQUENCE_FIELD_NUMBER = 5;
    private int sequence_;
    /**
     * <pre>
     * sequence (default=0xffffffff)
     * </pre>
     *
     * <code>optional uint32 sequence = 5 [default = 4294967295];</code>
     */
    public boolean hasSequence() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * sequence (default=0xffffffff)
     * </pre>
     *
     * <code>optional uint32 sequence = 5 [default = 4294967295];</code>
     */
    public int getSequence() {
      return sequence_;
    }

    public static final int SCRIPT_TYPE_FIELD_NUMBER = 6;
    private int scriptType_;
    /**
     * <pre>
     * defines template of input script
     * </pre>
     *
     * <code>optional .InputScriptType script_type = 6 [default = SPENDADDRESS];</code>
     */
    public boolean hasScriptType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * defines template of input script
     * </pre>
     *
     * <code>optional .InputScriptType script_type = 6 [default = SPENDADDRESS];</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType getScriptType() {
      com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType result = com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType.valueOf(scriptType_);
      return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType.SPENDADDRESS : result;
    }

    public static final int MULTISIG_FIELD_NUMBER = 7;
    private com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType multisig_;
    /**
     * <pre>
     * Filled if input is going to spend multisig tx
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
     */
    public boolean hasMultisig() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Filled if input is going to spend multisig tx
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType getMultisig() {
      return multisig_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance() : multisig_;
    }
    /**
     * <pre>
     * Filled if input is going to spend multisig tx
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder getMultisigOrBuilder() {
      return multisig_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance() : multisig_;
    }

    public static final int AMOUNT_FIELD_NUMBER = 8;
    private long amount_;
    /**
     * <pre>
     * amount of previous transaction output (for segwit only)
     * </pre>
     *
     * <code>optional uint64 amount = 8;</code>
     */
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * amount of previous transaction output (for segwit only)
     * </pre>
     *
     * <code>optional uint64 amount = 8;</code>
     */
    public long getAmount() {
      return amount_;
    }

    public static final int DECRED_TREE_FIELD_NUMBER = 9;
    private int decredTree_;
    /**
     * <code>optional uint32 decred_tree = 9;</code>
     */
    public boolean hasDecredTree() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 decred_tree = 9;</code>
     */
    public int getDecredTree() {
      return decredTree_;
    }

    public static final int DECRED_SCRIPT_VERSION_FIELD_NUMBER = 10;
    private int decredScriptVersion_;
    /**
     * <code>optional uint32 decred_script_version = 10;</code>
     */
    public boolean hasDecredScriptVersion() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 decred_script_version = 10;</code>
     */
    public int getDecredScriptVersion() {
      return decredScriptVersion_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPrevHash()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPrevIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasMultisig()) {
        if (!getMultisig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < addressN_.size(); i++) {
        output.writeUInt32(1, addressN_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, prevHash_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, prevIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, scriptSig_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, sequence_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(6, scriptType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, getMultisig());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(8, amount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(9, decredTree_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(10, decredScriptVersion_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < addressN_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(addressN_.get(i));
        }
        size += dataSize;
        size += 1 * getAddressNList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, prevHash_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, prevIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, scriptSig_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, sequence_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, scriptType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getMultisig());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, amount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, decredTree_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, decredScriptVersion_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType) obj;

      boolean result = true;
      result = result && getAddressNList()
          .equals(other.getAddressNList());
      result = result && (hasPrevHash() == other.hasPrevHash());
      if (hasPrevHash()) {
        result = result && getPrevHash()
            .equals(other.getPrevHash());
      }
      result = result && (hasPrevIndex() == other.hasPrevIndex());
      if (hasPrevIndex()) {
        result = result && (getPrevIndex()
            == other.getPrevIndex());
      }
      result = result && (hasScriptSig() == other.hasScriptSig());
      if (hasScriptSig()) {
        result = result && getScriptSig()
            .equals(other.getScriptSig());
      }
      result = result && (hasSequence() == other.hasSequence());
      if (hasSequence()) {
        result = result && (getSequence()
            == other.getSequence());
      }
      result = result && (hasScriptType() == other.hasScriptType());
      if (hasScriptType()) {
        result = result && scriptType_ == other.scriptType_;
      }
      result = result && (hasMultisig() == other.hasMultisig());
      if (hasMultisig()) {
        result = result && getMultisig()
            .equals(other.getMultisig());
      }
      result = result && (hasAmount() == other.hasAmount());
      if (hasAmount()) {
        result = result && (getAmount()
            == other.getAmount());
      }
      result = result && (hasDecredTree() == other.hasDecredTree());
      if (hasDecredTree()) {
        result = result && (getDecredTree()
            == other.getDecredTree());
      }
      result = result && (hasDecredScriptVersion() == other.hasDecredScriptVersion());
      if (hasDecredScriptVersion()) {
        result = result && (getDecredScriptVersion()
            == other.getDecredScriptVersion());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getAddressNCount() > 0) {
        hash = (37 * hash) + ADDRESS_N_FIELD_NUMBER;
        hash = (53 * hash) + getAddressNList().hashCode();
      }
      if (hasPrevHash()) {
        hash = (37 * hash) + PREV_HASH_FIELD_NUMBER;
        hash = (53 * hash) + getPrevHash().hashCode();
      }
      if (hasPrevIndex()) {
        hash = (37 * hash) + PREV_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getPrevIndex();
      }
      if (hasScriptSig()) {
        hash = (37 * hash) + SCRIPT_SIG_FIELD_NUMBER;
        hash = (53 * hash) + getScriptSig().hashCode();
      }
      if (hasSequence()) {
        hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
        hash = (53 * hash) + getSequence();
      }
      if (hasScriptType()) {
        hash = (37 * hash) + SCRIPT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + scriptType_;
      }
      if (hasMultisig()) {
        hash = (37 * hash) + MULTISIG_FIELD_NUMBER;
        hash = (53 * hash) + getMultisig().hashCode();
      }
      if (hasAmount()) {
        hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAmount());
      }
      if (hasDecredTree()) {
        hash = (37 * hash) + DECRED_TREE_FIELD_NUMBER;
        hash = (53 * hash) + getDecredTree();
      }
      if (hasDecredScriptVersion()) {
        hash = (37 * hash) + DECRED_SCRIPT_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getDecredScriptVersion();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing transaction input
     * &#64;used_in SimpleSignTx
     * &#64;used_in TransactionType
     * </pre>
     *
     * Protobuf type {@code TxInputType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TxInputType)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxInputType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxInputType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMultisigFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        addressN_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        prevHash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        prevIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        scriptSig_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        sequence_ = -1;
        bitField0_ = (bitField0_ & ~0x00000010);
        scriptType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (multisigBuilder_ == null) {
          multisig_ = null;
        } else {
          multisigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        amount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        decredTree_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        decredScriptVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxInputType_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          addressN_ = java.util.Collections.unmodifiableList(addressN_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.addressN_ = addressN_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.prevHash_ = prevHash_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.prevIndex_ = prevIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.scriptSig_ = scriptSig_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sequence_ = sequence_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.scriptType_ = scriptType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        if (multisigBuilder_ == null) {
          result.multisig_ = multisig_;
        } else {
          result.multisig_ = multisigBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.amount_ = amount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.decredTree_ = decredTree_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.decredScriptVersion_ = decredScriptVersion_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.getDefaultInstance()) return this;
        if (!other.addressN_.isEmpty()) {
          if (addressN_.isEmpty()) {
            addressN_ = other.addressN_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAddressNIsMutable();
            addressN_.addAll(other.addressN_);
          }
          onChanged();
        }
        if (other.hasPrevHash()) {
          setPrevHash(other.getPrevHash());
        }
        if (other.hasPrevIndex()) {
          setPrevIndex(other.getPrevIndex());
        }
        if (other.hasScriptSig()) {
          setScriptSig(other.getScriptSig());
        }
        if (other.hasSequence()) {
          setSequence(other.getSequence());
        }
        if (other.hasScriptType()) {
          setScriptType(other.getScriptType());
        }
        if (other.hasMultisig()) {
          mergeMultisig(other.getMultisig());
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        if (other.hasDecredTree()) {
          setDecredTree(other.getDecredTree());
        }
        if (other.hasDecredScriptVersion()) {
          setDecredScriptVersion(other.getDecredScriptVersion());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPrevHash()) {
          return false;
        }
        if (!hasPrevIndex()) {
          return false;
        }
        if (hasMultisig()) {
          if (!getMultisig().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> addressN_ = java.util.Collections.emptyList();
      private void ensureAddressNIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          addressN_ = new java.util.ArrayList<java.lang.Integer>(addressN_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getAddressNList() {
        return java.util.Collections.unmodifiableList(addressN_);
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public int getAddressNCount() {
        return addressN_.size();
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public int getAddressN(int index) {
        return addressN_.get(index);
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public Builder setAddressN(
          int index, int value) {
        ensureAddressNIsMutable();
        addressN_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public Builder addAddressN(int value) {
        ensureAddressNIsMutable();
        addressN_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public Builder addAllAddressN(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAddressNIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, addressN_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public Builder clearAddressN() {
        addressN_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString prevHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * hash of previous transaction output to spend by this input
       * </pre>
       *
       * <code>required bytes prev_hash = 2;</code>
       */
      public boolean hasPrevHash() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * hash of previous transaction output to spend by this input
       * </pre>
       *
       * <code>required bytes prev_hash = 2;</code>
       */
      public com.google.protobuf.ByteString getPrevHash() {
        return prevHash_;
      }
      /**
       * <pre>
       * hash of previous transaction output to spend by this input
       * </pre>
       *
       * <code>required bytes prev_hash = 2;</code>
       */
      public Builder setPrevHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        prevHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hash of previous transaction output to spend by this input
       * </pre>
       *
       * <code>required bytes prev_hash = 2;</code>
       */
      public Builder clearPrevHash() {
        bitField0_ = (bitField0_ & ~0x00000002);
        prevHash_ = getDefaultInstance().getPrevHash();
        onChanged();
        return this;
      }

      private int prevIndex_ ;
      /**
       * <pre>
       * index of previous output to spend
       * </pre>
       *
       * <code>required uint32 prev_index = 3;</code>
       */
      public boolean hasPrevIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * index of previous output to spend
       * </pre>
       *
       * <code>required uint32 prev_index = 3;</code>
       */
      public int getPrevIndex() {
        return prevIndex_;
      }
      /**
       * <pre>
       * index of previous output to spend
       * </pre>
       *
       * <code>required uint32 prev_index = 3;</code>
       */
      public Builder setPrevIndex(int value) {
        bitField0_ |= 0x00000004;
        prevIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * index of previous output to spend
       * </pre>
       *
       * <code>required uint32 prev_index = 3;</code>
       */
      public Builder clearPrevIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        prevIndex_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString scriptSig_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * script signature, unset for tx to sign
       * </pre>
       *
       * <code>optional bytes script_sig = 4;</code>
       */
      public boolean hasScriptSig() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * script signature, unset for tx to sign
       * </pre>
       *
       * <code>optional bytes script_sig = 4;</code>
       */
      public com.google.protobuf.ByteString getScriptSig() {
        return scriptSig_;
      }
      /**
       * <pre>
       * script signature, unset for tx to sign
       * </pre>
       *
       * <code>optional bytes script_sig = 4;</code>
       */
      public Builder setScriptSig(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        scriptSig_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * script signature, unset for tx to sign
       * </pre>
       *
       * <code>optional bytes script_sig = 4;</code>
       */
      public Builder clearScriptSig() {
        bitField0_ = (bitField0_ & ~0x00000008);
        scriptSig_ = getDefaultInstance().getScriptSig();
        onChanged();
        return this;
      }

      private int sequence_ = -1;
      /**
       * <pre>
       * sequence (default=0xffffffff)
       * </pre>
       *
       * <code>optional uint32 sequence = 5 [default = 4294967295];</code>
       */
      public boolean hasSequence() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * sequence (default=0xffffffff)
       * </pre>
       *
       * <code>optional uint32 sequence = 5 [default = 4294967295];</code>
       */
      public int getSequence() {
        return sequence_;
      }
      /**
       * <pre>
       * sequence (default=0xffffffff)
       * </pre>
       *
       * <code>optional uint32 sequence = 5 [default = 4294967295];</code>
       */
      public Builder setSequence(int value) {
        bitField0_ |= 0x00000010;
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * sequence (default=0xffffffff)
       * </pre>
       *
       * <code>optional uint32 sequence = 5 [default = 4294967295];</code>
       */
      public Builder clearSequence() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sequence_ = -1;
        onChanged();
        return this;
      }

      private int scriptType_ = 0;
      /**
       * <pre>
       * defines template of input script
       * </pre>
       *
       * <code>optional .InputScriptType script_type = 6 [default = SPENDADDRESS];</code>
       */
      public boolean hasScriptType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * defines template of input script
       * </pre>
       *
       * <code>optional .InputScriptType script_type = 6 [default = SPENDADDRESS];</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType getScriptType() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType result = com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType.valueOf(scriptType_);
        return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType.SPENDADDRESS : result;
      }
      /**
       * <pre>
       * defines template of input script
       * </pre>
       *
       * <code>optional .InputScriptType script_type = 6 [default = SPENDADDRESS];</code>
       */
      public Builder setScriptType(com.satoshilabs.trezor.lib.protobuf.TrezorType.InputScriptType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        scriptType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * defines template of input script
       * </pre>
       *
       * <code>optional .InputScriptType script_type = 6 [default = SPENDADDRESS];</code>
       */
      public Builder clearScriptType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        scriptType_ = 0;
        onChanged();
        return this;
      }

      private com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType multisig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder> multisigBuilder_;
      /**
       * <pre>
       * Filled if input is going to spend multisig tx
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
       */
      public boolean hasMultisig() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * Filled if input is going to spend multisig tx
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType getMultisig() {
        if (multisigBuilder_ == null) {
          return multisig_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance() : multisig_;
        } else {
          return multisigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Filled if input is going to spend multisig tx
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
       */
      public Builder setMultisig(com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType value) {
        if (multisigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          multisig_ = value;
          onChanged();
        } else {
          multisigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       * Filled if input is going to spend multisig tx
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
       */
      public Builder setMultisig(
          com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder builderForValue) {
        if (multisigBuilder_ == null) {
          multisig_ = builderForValue.build();
          onChanged();
        } else {
          multisigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       * Filled if input is going to spend multisig tx
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
       */
      public Builder mergeMultisig(com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType value) {
        if (multisigBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              multisig_ != null &&
              multisig_ != com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance()) {
            multisig_ =
              com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.newBuilder(multisig_).mergeFrom(value).buildPartial();
          } else {
            multisig_ = value;
          }
          onChanged();
        } else {
          multisigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       * Filled if input is going to spend multisig tx
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
       */
      public Builder clearMultisig() {
        if (multisigBuilder_ == null) {
          multisig_ = null;
          onChanged();
        } else {
          multisigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <pre>
       * Filled if input is going to spend multisig tx
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder getMultisigBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getMultisigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Filled if input is going to spend multisig tx
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder getMultisigOrBuilder() {
        if (multisigBuilder_ != null) {
          return multisigBuilder_.getMessageOrBuilder();
        } else {
          return multisig_ == null ?
              com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance() : multisig_;
        }
      }
      /**
       * <pre>
       * Filled if input is going to spend multisig tx
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder> 
          getMultisigFieldBuilder() {
        if (multisigBuilder_ == null) {
          multisigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder>(
                  getMultisig(),
                  getParentForChildren(),
                  isClean());
          multisig_ = null;
        }
        return multisigBuilder_;
      }

      private long amount_ ;
      /**
       * <pre>
       * amount of previous transaction output (for segwit only)
       * </pre>
       *
       * <code>optional uint64 amount = 8;</code>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * amount of previous transaction output (for segwit only)
       * </pre>
       *
       * <code>optional uint64 amount = 8;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * amount of previous transaction output (for segwit only)
       * </pre>
       *
       * <code>optional uint64 amount = 8;</code>
       */
      public Builder setAmount(long value) {
        bitField0_ |= 0x00000080;
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * amount of previous transaction output (for segwit only)
       * </pre>
       *
       * <code>optional uint64 amount = 8;</code>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        amount_ = 0L;
        onChanged();
        return this;
      }

      private int decredTree_ ;
      /**
       * <code>optional uint32 decred_tree = 9;</code>
       */
      public boolean hasDecredTree() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 decred_tree = 9;</code>
       */
      public int getDecredTree() {
        return decredTree_;
      }
      /**
       * <code>optional uint32 decred_tree = 9;</code>
       */
      public Builder setDecredTree(int value) {
        bitField0_ |= 0x00000100;
        decredTree_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 decred_tree = 9;</code>
       */
      public Builder clearDecredTree() {
        bitField0_ = (bitField0_ & ~0x00000100);
        decredTree_ = 0;
        onChanged();
        return this;
      }

      private int decredScriptVersion_ ;
      /**
       * <code>optional uint32 decred_script_version = 10;</code>
       */
      public boolean hasDecredScriptVersion() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 decred_script_version = 10;</code>
       */
      public int getDecredScriptVersion() {
        return decredScriptVersion_;
      }
      /**
       * <code>optional uint32 decred_script_version = 10;</code>
       */
      public Builder setDecredScriptVersion(int value) {
        bitField0_ |= 0x00000200;
        decredScriptVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 decred_script_version = 10;</code>
       */
      public Builder clearDecredScriptVersion() {
        bitField0_ = (bitField0_ & ~0x00000200);
        decredScriptVersion_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TxInputType)
    }

    // @@protoc_insertion_point(class_scope:TxInputType)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TxInputType>
        PARSER = new com.google.protobuf.AbstractParser<TxInputType>() {
      public TxInputType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TxInputType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TxInputType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TxInputType> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TxOutputTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TxOutputType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * target coin address in Base58 encoding
     * </pre>
     *
     * <code>optional string address = 1;</code>
     */
    boolean hasAddress();
    /**
     * <pre>
     * target coin address in Base58 encoding
     * </pre>
     *
     * <code>optional string address = 1;</code>
     */
    java.lang.String getAddress();
    /**
     * <pre>
     * target coin address in Base58 encoding
     * </pre>
     *
     * <code>optional string address = 1;</code>
     */
    com.google.protobuf.ByteString
        getAddressBytes();

    /**
     * <pre>
     * BIP-32 path to derive the key from master node; has higher priority than "address"
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    java.util.List<java.lang.Integer> getAddressNList();
    /**
     * <pre>
     * BIP-32 path to derive the key from master node; has higher priority than "address"
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    int getAddressNCount();
    /**
     * <pre>
     * BIP-32 path to derive the key from master node; has higher priority than "address"
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    int getAddressN(int index);

    /**
     * <pre>
     * amount to spend in satoshis
     * </pre>
     *
     * <code>required uint64 amount = 3;</code>
     */
    boolean hasAmount();
    /**
     * <pre>
     * amount to spend in satoshis
     * </pre>
     *
     * <code>required uint64 amount = 3;</code>
     */
    long getAmount();

    /**
     * <pre>
     * output script type
     * </pre>
     *
     * <code>required .OutputScriptType script_type = 4;</code>
     */
    boolean hasScriptType();
    /**
     * <pre>
     * output script type
     * </pre>
     *
     * <code>required .OutputScriptType script_type = 4;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType getScriptType();

    /**
     * <pre>
     * defines multisig address; script_type must be PAYTOMULTISIG
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
     */
    boolean hasMultisig();
    /**
     * <pre>
     * defines multisig address; script_type must be PAYTOMULTISIG
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType getMultisig();
    /**
     * <pre>
     * defines multisig address; script_type must be PAYTOMULTISIG
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder getMultisigOrBuilder();

    /**
     * <pre>
     * defines op_return data; script_type must be PAYTOOPRETURN, amount must be 0
     * </pre>
     *
     * <code>optional bytes op_return_data = 6;</code>
     */
    boolean hasOpReturnData();
    /**
     * <pre>
     * defines op_return data; script_type must be PAYTOOPRETURN, amount must be 0
     * </pre>
     *
     * <code>optional bytes op_return_data = 6;</code>
     */
    com.google.protobuf.ByteString getOpReturnData();

    /**
     * <code>optional uint32 decred_script_version = 7;</code>
     */
    boolean hasDecredScriptVersion();
    /**
     * <code>optional uint32 decred_script_version = 7;</code>
     */
    int getDecredScriptVersion();
  }
  /**
   * <pre>
   **
   * Structure representing transaction output
   * &#64;used_in SimpleSignTx
   * &#64;used_in TransactionType
   * </pre>
   *
   * Protobuf type {@code TxOutputType}
   */
  public  static final class TxOutputType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TxOutputType)
      TxOutputTypeOrBuilder {
    // Use TxOutputType.newBuilder() to construct.
    private TxOutputType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TxOutputType() {
      address_ = "";
      addressN_ = java.util.Collections.emptyList();
      amount_ = 0L;
      scriptType_ = 0;
      opReturnData_ = com.google.protobuf.ByteString.EMPTY;
      decredScriptVersion_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TxOutputType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              address_ = bs;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                addressN_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              addressN_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                addressN_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                addressN_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              amount_ = input.readUInt64();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType value = com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                scriptType_ = rawValue;
              }
              break;
            }
            case 42: {
              com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = multisig_.toBuilder();
              }
              multisig_ = input.readMessage(com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(multisig_);
                multisig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              opReturnData_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              decredScriptVersion_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          addressN_ = java.util.Collections.unmodifiableList(addressN_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxOutputType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxOutputType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder.class);
    }

    private int bitField0_;
    public static final int ADDRESS_FIELD_NUMBER = 1;
    private volatile java.lang.Object address_;
    /**
     * <pre>
     * target coin address in Base58 encoding
     * </pre>
     *
     * <code>optional string address = 1;</code>
     */
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * target coin address in Base58 encoding
     * </pre>
     *
     * <code>optional string address = 1;</code>
     */
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          address_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * target coin address in Base58 encoding
     * </pre>
     *
     * <code>optional string address = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDRESS_N_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> addressN_;
    /**
     * <pre>
     * BIP-32 path to derive the key from master node; has higher priority than "address"
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getAddressNList() {
      return addressN_;
    }
    /**
     * <pre>
     * BIP-32 path to derive the key from master node; has higher priority than "address"
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    public int getAddressNCount() {
      return addressN_.size();
    }
    /**
     * <pre>
     * BIP-32 path to derive the key from master node; has higher priority than "address"
     * </pre>
     *
     * <code>repeated uint32 address_n = 2;</code>
     */
    public int getAddressN(int index) {
      return addressN_.get(index);
    }

    public static final int AMOUNT_FIELD_NUMBER = 3;
    private long amount_;
    /**
     * <pre>
     * amount to spend in satoshis
     * </pre>
     *
     * <code>required uint64 amount = 3;</code>
     */
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * amount to spend in satoshis
     * </pre>
     *
     * <code>required uint64 amount = 3;</code>
     */
    public long getAmount() {
      return amount_;
    }

    public static final int SCRIPT_TYPE_FIELD_NUMBER = 4;
    private int scriptType_;
    /**
     * <pre>
     * output script type
     * </pre>
     *
     * <code>required .OutputScriptType script_type = 4;</code>
     */
    public boolean hasScriptType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * output script type
     * </pre>
     *
     * <code>required .OutputScriptType script_type = 4;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType getScriptType() {
      com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType result = com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType.valueOf(scriptType_);
      return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType.PAYTOADDRESS : result;
    }

    public static final int MULTISIG_FIELD_NUMBER = 5;
    private com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType multisig_;
    /**
     * <pre>
     * defines multisig address; script_type must be PAYTOMULTISIG
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
     */
    public boolean hasMultisig() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * defines multisig address; script_type must be PAYTOMULTISIG
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType getMultisig() {
      return multisig_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance() : multisig_;
    }
    /**
     * <pre>
     * defines multisig address; script_type must be PAYTOMULTISIG
     * </pre>
     *
     * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder getMultisigOrBuilder() {
      return multisig_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance() : multisig_;
    }

    public static final int OP_RETURN_DATA_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString opReturnData_;
    /**
     * <pre>
     * defines op_return data; script_type must be PAYTOOPRETURN, amount must be 0
     * </pre>
     *
     * <code>optional bytes op_return_data = 6;</code>
     */
    public boolean hasOpReturnData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * defines op_return data; script_type must be PAYTOOPRETURN, amount must be 0
     * </pre>
     *
     * <code>optional bytes op_return_data = 6;</code>
     */
    public com.google.protobuf.ByteString getOpReturnData() {
      return opReturnData_;
    }

    public static final int DECRED_SCRIPT_VERSION_FIELD_NUMBER = 7;
    private int decredScriptVersion_;
    /**
     * <code>optional uint32 decred_script_version = 7;</code>
     */
    public boolean hasDecredScriptVersion() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 decred_script_version = 7;</code>
     */
    public int getDecredScriptVersion() {
      return decredScriptVersion_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasScriptType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasMultisig()) {
        if (!getMultisig().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, address_);
      }
      for (int i = 0; i < addressN_.size(); i++) {
        output.writeUInt32(2, addressN_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(3, amount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(4, scriptType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, getMultisig());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, opReturnData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(7, decredScriptVersion_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, address_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < addressN_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(addressN_.get(i));
        }
        size += dataSize;
        size += 1 * getAddressNList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, amount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, scriptType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMultisig());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, opReturnData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, decredScriptVersion_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType) obj;

      boolean result = true;
      result = result && (hasAddress() == other.hasAddress());
      if (hasAddress()) {
        result = result && getAddress()
            .equals(other.getAddress());
      }
      result = result && getAddressNList()
          .equals(other.getAddressNList());
      result = result && (hasAmount() == other.hasAmount());
      if (hasAmount()) {
        result = result && (getAmount()
            == other.getAmount());
      }
      result = result && (hasScriptType() == other.hasScriptType());
      if (hasScriptType()) {
        result = result && scriptType_ == other.scriptType_;
      }
      result = result && (hasMultisig() == other.hasMultisig());
      if (hasMultisig()) {
        result = result && getMultisig()
            .equals(other.getMultisig());
      }
      result = result && (hasOpReturnData() == other.hasOpReturnData());
      if (hasOpReturnData()) {
        result = result && getOpReturnData()
            .equals(other.getOpReturnData());
      }
      result = result && (hasDecredScriptVersion() == other.hasDecredScriptVersion());
      if (hasDecredScriptVersion()) {
        result = result && (getDecredScriptVersion()
            == other.getDecredScriptVersion());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasAddress()) {
        hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getAddress().hashCode();
      }
      if (getAddressNCount() > 0) {
        hash = (37 * hash) + ADDRESS_N_FIELD_NUMBER;
        hash = (53 * hash) + getAddressNList().hashCode();
      }
      if (hasAmount()) {
        hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAmount());
      }
      if (hasScriptType()) {
        hash = (37 * hash) + SCRIPT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + scriptType_;
      }
      if (hasMultisig()) {
        hash = (37 * hash) + MULTISIG_FIELD_NUMBER;
        hash = (53 * hash) + getMultisig().hashCode();
      }
      if (hasOpReturnData()) {
        hash = (37 * hash) + OP_RETURN_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getOpReturnData().hashCode();
      }
      if (hasDecredScriptVersion()) {
        hash = (37 * hash) + DECRED_SCRIPT_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getDecredScriptVersion();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing transaction output
     * &#64;used_in SimpleSignTx
     * &#64;used_in TransactionType
     * </pre>
     *
     * Protobuf type {@code TxOutputType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TxOutputType)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxOutputType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxOutputType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMultisigFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        address_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        addressN_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        amount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        scriptType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (multisigBuilder_ == null) {
          multisig_ = null;
        } else {
          multisigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        opReturnData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        decredScriptVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxOutputType_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.address_ = address_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          addressN_ = java.util.Collections.unmodifiableList(addressN_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.addressN_ = addressN_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.amount_ = amount_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.scriptType_ = scriptType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        if (multisigBuilder_ == null) {
          result.multisig_ = multisig_;
        } else {
          result.multisig_ = multisigBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.opReturnData_ = opReturnData_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.decredScriptVersion_ = decredScriptVersion_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.getDefaultInstance()) return this;
        if (other.hasAddress()) {
          bitField0_ |= 0x00000001;
          address_ = other.address_;
          onChanged();
        }
        if (!other.addressN_.isEmpty()) {
          if (addressN_.isEmpty()) {
            addressN_ = other.addressN_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAddressNIsMutable();
            addressN_.addAll(other.addressN_);
          }
          onChanged();
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        if (other.hasScriptType()) {
          setScriptType(other.getScriptType());
        }
        if (other.hasMultisig()) {
          mergeMultisig(other.getMultisig());
        }
        if (other.hasOpReturnData()) {
          setOpReturnData(other.getOpReturnData());
        }
        if (other.hasDecredScriptVersion()) {
          setDecredScriptVersion(other.getDecredScriptVersion());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAmount()) {
          return false;
        }
        if (!hasScriptType()) {
          return false;
        }
        if (hasMultisig()) {
          if (!getMultisig().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object address_ = "";
      /**
       * <pre>
       * target coin address in Base58 encoding
       * </pre>
       *
       * <code>optional string address = 1;</code>
       */
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * target coin address in Base58 encoding
       * </pre>
       *
       * <code>optional string address = 1;</code>
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            address_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * target coin address in Base58 encoding
       * </pre>
       *
       * <code>optional string address = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * target coin address in Base58 encoding
       * </pre>
       *
       * <code>optional string address = 1;</code>
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * target coin address in Base58 encoding
       * </pre>
       *
       * <code>optional string address = 1;</code>
       */
      public Builder clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * target coin address in Base58 encoding
       * </pre>
       *
       * <code>optional string address = 1;</code>
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        address_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> addressN_ = java.util.Collections.emptyList();
      private void ensureAddressNIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          addressN_ = new java.util.ArrayList<java.lang.Integer>(addressN_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node; has higher priority than "address"
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getAddressNList() {
        return java.util.Collections.unmodifiableList(addressN_);
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node; has higher priority than "address"
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public int getAddressNCount() {
        return addressN_.size();
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node; has higher priority than "address"
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public int getAddressN(int index) {
        return addressN_.get(index);
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node; has higher priority than "address"
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public Builder setAddressN(
          int index, int value) {
        ensureAddressNIsMutable();
        addressN_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node; has higher priority than "address"
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public Builder addAddressN(int value) {
        ensureAddressNIsMutable();
        addressN_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node; has higher priority than "address"
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public Builder addAllAddressN(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAddressNIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, addressN_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node; has higher priority than "address"
       * </pre>
       *
       * <code>repeated uint32 address_n = 2;</code>
       */
      public Builder clearAddressN() {
        addressN_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private long amount_ ;
      /**
       * <pre>
       * amount to spend in satoshis
       * </pre>
       *
       * <code>required uint64 amount = 3;</code>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * amount to spend in satoshis
       * </pre>
       *
       * <code>required uint64 amount = 3;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * amount to spend in satoshis
       * </pre>
       *
       * <code>required uint64 amount = 3;</code>
       */
      public Builder setAmount(long value) {
        bitField0_ |= 0x00000004;
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * amount to spend in satoshis
       * </pre>
       *
       * <code>required uint64 amount = 3;</code>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        amount_ = 0L;
        onChanged();
        return this;
      }

      private int scriptType_ = 0;
      /**
       * <pre>
       * output script type
       * </pre>
       *
       * <code>required .OutputScriptType script_type = 4;</code>
       */
      public boolean hasScriptType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * output script type
       * </pre>
       *
       * <code>required .OutputScriptType script_type = 4;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType getScriptType() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType result = com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType.valueOf(scriptType_);
        return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType.PAYTOADDRESS : result;
      }
      /**
       * <pre>
       * output script type
       * </pre>
       *
       * <code>required .OutputScriptType script_type = 4;</code>
       */
      public Builder setScriptType(com.satoshilabs.trezor.lib.protobuf.TrezorType.OutputScriptType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        scriptType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * output script type
       * </pre>
       *
       * <code>required .OutputScriptType script_type = 4;</code>
       */
      public Builder clearScriptType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        scriptType_ = 0;
        onChanged();
        return this;
      }

      private com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType multisig_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder> multisigBuilder_;
      /**
       * <pre>
       * defines multisig address; script_type must be PAYTOMULTISIG
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
       */
      public boolean hasMultisig() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * defines multisig address; script_type must be PAYTOMULTISIG
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType getMultisig() {
        if (multisigBuilder_ == null) {
          return multisig_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance() : multisig_;
        } else {
          return multisigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * defines multisig address; script_type must be PAYTOMULTISIG
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
       */
      public Builder setMultisig(com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType value) {
        if (multisigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          multisig_ = value;
          onChanged();
        } else {
          multisigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * defines multisig address; script_type must be PAYTOMULTISIG
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
       */
      public Builder setMultisig(
          com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder builderForValue) {
        if (multisigBuilder_ == null) {
          multisig_ = builderForValue.build();
          onChanged();
        } else {
          multisigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * defines multisig address; script_type must be PAYTOMULTISIG
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
       */
      public Builder mergeMultisig(com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType value) {
        if (multisigBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              multisig_ != null &&
              multisig_ != com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance()) {
            multisig_ =
              com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.newBuilder(multisig_).mergeFrom(value).buildPartial();
          } else {
            multisig_ = value;
          }
          onChanged();
        } else {
          multisigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * defines multisig address; script_type must be PAYTOMULTISIG
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
       */
      public Builder clearMultisig() {
        if (multisigBuilder_ == null) {
          multisig_ = null;
          onChanged();
        } else {
          multisigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <pre>
       * defines multisig address; script_type must be PAYTOMULTISIG
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder getMultisigBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getMultisigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * defines multisig address; script_type must be PAYTOMULTISIG
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder getMultisigOrBuilder() {
        if (multisigBuilder_ != null) {
          return multisigBuilder_.getMessageOrBuilder();
        } else {
          return multisig_ == null ?
              com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.getDefaultInstance() : multisig_;
        }
      }
      /**
       * <pre>
       * defines multisig address; script_type must be PAYTOMULTISIG
       * </pre>
       *
       * <code>optional .MultisigRedeemScriptType multisig = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder> 
          getMultisigFieldBuilder() {
        if (multisigBuilder_ == null) {
          multisigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.MultisigRedeemScriptTypeOrBuilder>(
                  getMultisig(),
                  getParentForChildren(),
                  isClean());
          multisig_ = null;
        }
        return multisigBuilder_;
      }

      private com.google.protobuf.ByteString opReturnData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * defines op_return data; script_type must be PAYTOOPRETURN, amount must be 0
       * </pre>
       *
       * <code>optional bytes op_return_data = 6;</code>
       */
      public boolean hasOpReturnData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * defines op_return data; script_type must be PAYTOOPRETURN, amount must be 0
       * </pre>
       *
       * <code>optional bytes op_return_data = 6;</code>
       */
      public com.google.protobuf.ByteString getOpReturnData() {
        return opReturnData_;
      }
      /**
       * <pre>
       * defines op_return data; script_type must be PAYTOOPRETURN, amount must be 0
       * </pre>
       *
       * <code>optional bytes op_return_data = 6;</code>
       */
      public Builder setOpReturnData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        opReturnData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * defines op_return data; script_type must be PAYTOOPRETURN, amount must be 0
       * </pre>
       *
       * <code>optional bytes op_return_data = 6;</code>
       */
      public Builder clearOpReturnData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        opReturnData_ = getDefaultInstance().getOpReturnData();
        onChanged();
        return this;
      }

      private int decredScriptVersion_ ;
      /**
       * <code>optional uint32 decred_script_version = 7;</code>
       */
      public boolean hasDecredScriptVersion() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 decred_script_version = 7;</code>
       */
      public int getDecredScriptVersion() {
        return decredScriptVersion_;
      }
      /**
       * <code>optional uint32 decred_script_version = 7;</code>
       */
      public Builder setDecredScriptVersion(int value) {
        bitField0_ |= 0x00000040;
        decredScriptVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 decred_script_version = 7;</code>
       */
      public Builder clearDecredScriptVersion() {
        bitField0_ = (bitField0_ & ~0x00000040);
        decredScriptVersion_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TxOutputType)
    }

    // @@protoc_insertion_point(class_scope:TxOutputType)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TxOutputType>
        PARSER = new com.google.protobuf.AbstractParser<TxOutputType>() {
      public TxOutputType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TxOutputType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TxOutputType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TxOutputType> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TxOutputBinTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TxOutputBinType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 amount = 1;</code>
     */
    boolean hasAmount();
    /**
     * <code>required uint64 amount = 1;</code>
     */
    long getAmount();

    /**
     * <code>required bytes script_pubkey = 2;</code>
     */
    boolean hasScriptPubkey();
    /**
     * <code>required bytes script_pubkey = 2;</code>
     */
    com.google.protobuf.ByteString getScriptPubkey();

    /**
     * <code>optional uint32 decred_script_version = 3;</code>
     */
    boolean hasDecredScriptVersion();
    /**
     * <code>optional uint32 decred_script_version = 3;</code>
     */
    int getDecredScriptVersion();
  }
  /**
   * <pre>
   **
   * Structure representing compiled transaction output
   * &#64;used_in TransactionType
   * </pre>
   *
   * Protobuf type {@code TxOutputBinType}
   */
  public  static final class TxOutputBinType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TxOutputBinType)
      TxOutputBinTypeOrBuilder {
    // Use TxOutputBinType.newBuilder() to construct.
    private TxOutputBinType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TxOutputBinType() {
      amount_ = 0L;
      scriptPubkey_ = com.google.protobuf.ByteString.EMPTY;
      decredScriptVersion_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TxOutputBinType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              amount_ = input.readUInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              scriptPubkey_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              decredScriptVersion_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxOutputBinType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxOutputBinType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder.class);
    }

    private int bitField0_;
    public static final int AMOUNT_FIELD_NUMBER = 1;
    private long amount_;
    /**
     * <code>required uint64 amount = 1;</code>
     */
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 amount = 1;</code>
     */
    public long getAmount() {
      return amount_;
    }

    public static final int SCRIPT_PUBKEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString scriptPubkey_;
    /**
     * <code>required bytes script_pubkey = 2;</code>
     */
    public boolean hasScriptPubkey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes script_pubkey = 2;</code>
     */
    public com.google.protobuf.ByteString getScriptPubkey() {
      return scriptPubkey_;
    }

    public static final int DECRED_SCRIPT_VERSION_FIELD_NUMBER = 3;
    private int decredScriptVersion_;
    /**
     * <code>optional uint32 decred_script_version = 3;</code>
     */
    public boolean hasDecredScriptVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 decred_script_version = 3;</code>
     */
    public int getDecredScriptVersion() {
      return decredScriptVersion_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAmount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasScriptPubkey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, amount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, scriptPubkey_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, decredScriptVersion_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, amount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, scriptPubkey_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, decredScriptVersion_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType) obj;

      boolean result = true;
      result = result && (hasAmount() == other.hasAmount());
      if (hasAmount()) {
        result = result && (getAmount()
            == other.getAmount());
      }
      result = result && (hasScriptPubkey() == other.hasScriptPubkey());
      if (hasScriptPubkey()) {
        result = result && getScriptPubkey()
            .equals(other.getScriptPubkey());
      }
      result = result && (hasDecredScriptVersion() == other.hasDecredScriptVersion());
      if (hasDecredScriptVersion()) {
        result = result && (getDecredScriptVersion()
            == other.getDecredScriptVersion());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasAmount()) {
        hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAmount());
      }
      if (hasScriptPubkey()) {
        hash = (37 * hash) + SCRIPT_PUBKEY_FIELD_NUMBER;
        hash = (53 * hash) + getScriptPubkey().hashCode();
      }
      if (hasDecredScriptVersion()) {
        hash = (37 * hash) + DECRED_SCRIPT_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getDecredScriptVersion();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing compiled transaction output
     * &#64;used_in TransactionType
     * </pre>
     *
     * Protobuf type {@code TxOutputBinType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TxOutputBinType)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxOutputBinType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxOutputBinType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        amount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        scriptPubkey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        decredScriptVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxOutputBinType_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.amount_ = amount_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.scriptPubkey_ = scriptPubkey_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.decredScriptVersion_ = decredScriptVersion_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.getDefaultInstance()) return this;
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        if (other.hasScriptPubkey()) {
          setScriptPubkey(other.getScriptPubkey());
        }
        if (other.hasDecredScriptVersion()) {
          setDecredScriptVersion(other.getDecredScriptVersion());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAmount()) {
          return false;
        }
        if (!hasScriptPubkey()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long amount_ ;
      /**
       * <code>required uint64 amount = 1;</code>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 amount = 1;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <code>required uint64 amount = 1;</code>
       */
      public Builder setAmount(long value) {
        bitField0_ |= 0x00000001;
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 amount = 1;</code>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        amount_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString scriptPubkey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes script_pubkey = 2;</code>
       */
      public boolean hasScriptPubkey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes script_pubkey = 2;</code>
       */
      public com.google.protobuf.ByteString getScriptPubkey() {
        return scriptPubkey_;
      }
      /**
       * <code>required bytes script_pubkey = 2;</code>
       */
      public Builder setScriptPubkey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        scriptPubkey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes script_pubkey = 2;</code>
       */
      public Builder clearScriptPubkey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        scriptPubkey_ = getDefaultInstance().getScriptPubkey();
        onChanged();
        return this;
      }

      private int decredScriptVersion_ ;
      /**
       * <code>optional uint32 decred_script_version = 3;</code>
       */
      public boolean hasDecredScriptVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 decred_script_version = 3;</code>
       */
      public int getDecredScriptVersion() {
        return decredScriptVersion_;
      }
      /**
       * <code>optional uint32 decred_script_version = 3;</code>
       */
      public Builder setDecredScriptVersion(int value) {
        bitField0_ |= 0x00000004;
        decredScriptVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 decred_script_version = 3;</code>
       */
      public Builder clearDecredScriptVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        decredScriptVersion_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TxOutputBinType)
    }

    // @@protoc_insertion_point(class_scope:TxOutputBinType)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TxOutputBinType>
        PARSER = new com.google.protobuf.AbstractParser<TxOutputBinType>() {
      public TxOutputBinType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TxOutputBinType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TxOutputBinType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TxOutputBinType> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransactionTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TransactionType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <code>optional uint32 version = 1;</code>
     */
    int getVersion();

    /**
     * <code>repeated .TxInputType inputs = 2;</code>
     */
    java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType> 
        getInputsList();
    /**
     * <code>repeated .TxInputType inputs = 2;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType getInputs(int index);
    /**
     * <code>repeated .TxInputType inputs = 2;</code>
     */
    int getInputsCount();
    /**
     * <code>repeated .TxInputType inputs = 2;</code>
     */
    java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputTypeOrBuilder> 
        getInputsOrBuilderList();
    /**
     * <code>repeated .TxInputType inputs = 2;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputTypeOrBuilder getInputsOrBuilder(
        int index);

    /**
     * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
     */
    java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType> 
        getBinOutputsList();
    /**
     * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType getBinOutputs(int index);
    /**
     * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
     */
    int getBinOutputsCount();
    /**
     * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
     */
    java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinTypeOrBuilder> 
        getBinOutputsOrBuilderList();
    /**
     * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinTypeOrBuilder getBinOutputsOrBuilder(
        int index);

    /**
     * <code>repeated .TxOutputType outputs = 5;</code>
     */
    java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType> 
        getOutputsList();
    /**
     * <code>repeated .TxOutputType outputs = 5;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType getOutputs(int index);
    /**
     * <code>repeated .TxOutputType outputs = 5;</code>
     */
    int getOutputsCount();
    /**
     * <code>repeated .TxOutputType outputs = 5;</code>
     */
    java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputTypeOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <code>repeated .TxOutputType outputs = 5;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputTypeOrBuilder getOutputsOrBuilder(
        int index);

    /**
     * <code>optional uint32 lock_time = 4;</code>
     */
    boolean hasLockTime();
    /**
     * <code>optional uint32 lock_time = 4;</code>
     */
    int getLockTime();

    /**
     * <code>optional uint32 inputs_cnt = 6;</code>
     */
    boolean hasInputsCnt();
    /**
     * <code>optional uint32 inputs_cnt = 6;</code>
     */
    int getInputsCnt();

    /**
     * <code>optional uint32 outputs_cnt = 7;</code>
     */
    boolean hasOutputsCnt();
    /**
     * <code>optional uint32 outputs_cnt = 7;</code>
     */
    int getOutputsCnt();

    /**
     * <code>optional bytes extra_data = 8;</code>
     */
    boolean hasExtraData();
    /**
     * <code>optional bytes extra_data = 8;</code>
     */
    com.google.protobuf.ByteString getExtraData();

    /**
     * <code>optional uint32 extra_data_len = 9;</code>
     */
    boolean hasExtraDataLen();
    /**
     * <code>optional uint32 extra_data_len = 9;</code>
     */
    int getExtraDataLen();

    /**
     * <code>optional uint32 decred_expiry = 10;</code>
     */
    boolean hasDecredExpiry();
    /**
     * <code>optional uint32 decred_expiry = 10;</code>
     */
    int getDecredExpiry();
  }
  /**
   * <pre>
   **
   * Structure representing transaction
   * &#64;used_in SimpleSignTx
   * </pre>
   *
   * Protobuf type {@code TransactionType}
   */
  public  static final class TransactionType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TransactionType)
      TransactionTypeOrBuilder {
    // Use TransactionType.newBuilder() to construct.
    private TransactionType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransactionType() {
      version_ = 0;
      inputs_ = java.util.Collections.emptyList();
      binOutputs_ = java.util.Collections.emptyList();
      outputs_ = java.util.Collections.emptyList();
      lockTime_ = 0;
      inputsCnt_ = 0;
      outputsCnt_ = 0;
      extraData_ = com.google.protobuf.ByteString.EMPTY;
      extraDataLen_ = 0;
      decredExpiry_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransactionType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                inputs_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType>();
                mutable_bitField0_ |= 0x00000002;
              }
              inputs_.add(
                  input.readMessage(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                binOutputs_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType>();
                mutable_bitField0_ |= 0x00000004;
              }
              binOutputs_.add(
                  input.readMessage(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              lockTime_ = input.readUInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                outputs_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType>();
                mutable_bitField0_ |= 0x00000008;
              }
              outputs_.add(
                  input.readMessage(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000004;
              inputsCnt_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              outputsCnt_ = input.readUInt32();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000010;
              extraData_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              extraDataLen_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              decredExpiry_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          inputs_ = java.util.Collections.unmodifiableList(inputs_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          binOutputs_ = java.util.Collections.unmodifiableList(binOutputs_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          outputs_ = java.util.Collections.unmodifiableList(outputs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TransactionType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TransactionType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType.Builder.class);
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>optional uint32 version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 version = 1;</code>
     */
    public int getVersion() {
      return version_;
    }

    public static final int INPUTS_FIELD_NUMBER = 2;
    private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType> inputs_;
    /**
     * <code>repeated .TxInputType inputs = 2;</code>
     */
    public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType> getInputsList() {
      return inputs_;
    }
    /**
     * <code>repeated .TxInputType inputs = 2;</code>
     */
    public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputTypeOrBuilder> 
        getInputsOrBuilderList() {
      return inputs_;
    }
    /**
     * <code>repeated .TxInputType inputs = 2;</code>
     */
    public int getInputsCount() {
      return inputs_.size();
    }
    /**
     * <code>repeated .TxInputType inputs = 2;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType getInputs(int index) {
      return inputs_.get(index);
    }
    /**
     * <code>repeated .TxInputType inputs = 2;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputTypeOrBuilder getInputsOrBuilder(
        int index) {
      return inputs_.get(index);
    }

    public static final int BIN_OUTPUTS_FIELD_NUMBER = 3;
    private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType> binOutputs_;
    /**
     * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
     */
    public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType> getBinOutputsList() {
      return binOutputs_;
    }
    /**
     * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
     */
    public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinTypeOrBuilder> 
        getBinOutputsOrBuilderList() {
      return binOutputs_;
    }
    /**
     * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
     */
    public int getBinOutputsCount() {
      return binOutputs_.size();
    }
    /**
     * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType getBinOutputs(int index) {
      return binOutputs_.get(index);
    }
    /**
     * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinTypeOrBuilder getBinOutputsOrBuilder(
        int index) {
      return binOutputs_.get(index);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 5;
    private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType> outputs_;
    /**
     * <code>repeated .TxOutputType outputs = 5;</code>
     */
    public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType> getOutputsList() {
      return outputs_;
    }
    /**
     * <code>repeated .TxOutputType outputs = 5;</code>
     */
    public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputTypeOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <code>repeated .TxOutputType outputs = 5;</code>
     */
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <code>repeated .TxOutputType outputs = 5;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <code>repeated .TxOutputType outputs = 5;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputTypeOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    public static final int LOCK_TIME_FIELD_NUMBER = 4;
    private int lockTime_;
    /**
     * <code>optional uint32 lock_time = 4;</code>
     */
    public boolean hasLockTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 lock_time = 4;</code>
     */
    public int getLockTime() {
      return lockTime_;
    }

    public static final int INPUTS_CNT_FIELD_NUMBER = 6;
    private int inputsCnt_;
    /**
     * <code>optional uint32 inputs_cnt = 6;</code>
     */
    public boolean hasInputsCnt() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 inputs_cnt = 6;</code>
     */
    public int getInputsCnt() {
      return inputsCnt_;
    }

    public static final int OUTPUTS_CNT_FIELD_NUMBER = 7;
    private int outputsCnt_;
    /**
     * <code>optional uint32 outputs_cnt = 7;</code>
     */
    public boolean hasOutputsCnt() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 outputs_cnt = 7;</code>
     */
    public int getOutputsCnt() {
      return outputsCnt_;
    }

    public static final int EXTRA_DATA_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString extraData_;
    /**
     * <code>optional bytes extra_data = 8;</code>
     */
    public boolean hasExtraData() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes extra_data = 8;</code>
     */
    public com.google.protobuf.ByteString getExtraData() {
      return extraData_;
    }

    public static final int EXTRA_DATA_LEN_FIELD_NUMBER = 9;
    private int extraDataLen_;
    /**
     * <code>optional uint32 extra_data_len = 9;</code>
     */
    public boolean hasExtraDataLen() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 extra_data_len = 9;</code>
     */
    public int getExtraDataLen() {
      return extraDataLen_;
    }

    public static final int DECRED_EXPIRY_FIELD_NUMBER = 10;
    private int decredExpiry_;
    /**
     * <code>optional uint32 decred_expiry = 10;</code>
     */
    public boolean hasDecredExpiry() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 decred_expiry = 10;</code>
     */
    public int getDecredExpiry() {
      return decredExpiry_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getInputsCount(); i++) {
        if (!getInputs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBinOutputsCount(); i++) {
        if (!getBinOutputs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOutputsCount(); i++) {
        if (!getOutputs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, version_);
      }
      for (int i = 0; i < inputs_.size(); i++) {
        output.writeMessage(2, inputs_.get(i));
      }
      for (int i = 0; i < binOutputs_.size(); i++) {
        output.writeMessage(3, binOutputs_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(4, lockTime_);
      }
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(5, outputs_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(6, inputsCnt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(7, outputsCnt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(8, extraData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(9, extraDataLen_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(10, decredExpiry_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      for (int i = 0; i < inputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, inputs_.get(i));
      }
      for (int i = 0; i < binOutputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, binOutputs_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, lockTime_);
      }
      for (int i = 0; i < outputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, outputs_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, inputsCnt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, outputsCnt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, extraData_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, extraDataLen_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, decredExpiry_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType) obj;

      boolean result = true;
      result = result && (hasVersion() == other.hasVersion());
      if (hasVersion()) {
        result = result && (getVersion()
            == other.getVersion());
      }
      result = result && getInputsList()
          .equals(other.getInputsList());
      result = result && getBinOutputsList()
          .equals(other.getBinOutputsList());
      result = result && getOutputsList()
          .equals(other.getOutputsList());
      result = result && (hasLockTime() == other.hasLockTime());
      if (hasLockTime()) {
        result = result && (getLockTime()
            == other.getLockTime());
      }
      result = result && (hasInputsCnt() == other.hasInputsCnt());
      if (hasInputsCnt()) {
        result = result && (getInputsCnt()
            == other.getInputsCnt());
      }
      result = result && (hasOutputsCnt() == other.hasOutputsCnt());
      if (hasOutputsCnt()) {
        result = result && (getOutputsCnt()
            == other.getOutputsCnt());
      }
      result = result && (hasExtraData() == other.hasExtraData());
      if (hasExtraData()) {
        result = result && getExtraData()
            .equals(other.getExtraData());
      }
      result = result && (hasExtraDataLen() == other.hasExtraDataLen());
      if (hasExtraDataLen()) {
        result = result && (getExtraDataLen()
            == other.getExtraDataLen());
      }
      result = result && (hasDecredExpiry() == other.hasDecredExpiry());
      if (hasDecredExpiry()) {
        result = result && (getDecredExpiry()
            == other.getDecredExpiry());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasVersion()) {
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion();
      }
      if (getInputsCount() > 0) {
        hash = (37 * hash) + INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getInputsList().hashCode();
      }
      if (getBinOutputsCount() > 0) {
        hash = (37 * hash) + BIN_OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getBinOutputsList().hashCode();
      }
      if (getOutputsCount() > 0) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputsList().hashCode();
      }
      if (hasLockTime()) {
        hash = (37 * hash) + LOCK_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getLockTime();
      }
      if (hasInputsCnt()) {
        hash = (37 * hash) + INPUTS_CNT_FIELD_NUMBER;
        hash = (53 * hash) + getInputsCnt();
      }
      if (hasOutputsCnt()) {
        hash = (37 * hash) + OUTPUTS_CNT_FIELD_NUMBER;
        hash = (53 * hash) + getOutputsCnt();
      }
      if (hasExtraData()) {
        hash = (37 * hash) + EXTRA_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getExtraData().hashCode();
      }
      if (hasExtraDataLen()) {
        hash = (37 * hash) + EXTRA_DATA_LEN_FIELD_NUMBER;
        hash = (53 * hash) + getExtraDataLen();
      }
      if (hasDecredExpiry()) {
        hash = (37 * hash) + DECRED_EXPIRY_FIELD_NUMBER;
        hash = (53 * hash) + getDecredExpiry();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing transaction
     * &#64;used_in SimpleSignTx
     * </pre>
     *
     * Protobuf type {@code TransactionType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TransactionType)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TransactionType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TransactionType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInputsFieldBuilder();
          getBinOutputsFieldBuilder();
          getOutputsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          inputsBuilder_.clear();
        }
        if (binOutputsBuilder_ == null) {
          binOutputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          binOutputsBuilder_.clear();
        }
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          outputsBuilder_.clear();
        }
        lockTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        inputsCnt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        outputsCnt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        extraData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        extraDataLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        decredExpiry_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TransactionType_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (inputsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            inputs_ = java.util.Collections.unmodifiableList(inputs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.inputs_ = inputs_;
        } else {
          result.inputs_ = inputsBuilder_.build();
        }
        if (binOutputsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            binOutputs_ = java.util.Collections.unmodifiableList(binOutputs_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.binOutputs_ = binOutputs_;
        } else {
          result.binOutputs_ = binOutputsBuilder_.build();
        }
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lockTime_ = lockTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.inputsCnt_ = inputsCnt_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.outputsCnt_ = outputsCnt_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.extraData_ = extraData_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.extraDataLen_ = extraDataLen_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.decredExpiry_ = decredExpiry_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (inputsBuilder_ == null) {
          if (!other.inputs_.isEmpty()) {
            if (inputs_.isEmpty()) {
              inputs_ = other.inputs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureInputsIsMutable();
              inputs_.addAll(other.inputs_);
            }
            onChanged();
          }
        } else {
          if (!other.inputs_.isEmpty()) {
            if (inputsBuilder_.isEmpty()) {
              inputsBuilder_.dispose();
              inputsBuilder_ = null;
              inputs_ = other.inputs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              inputsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInputsFieldBuilder() : null;
            } else {
              inputsBuilder_.addAllMessages(other.inputs_);
            }
          }
        }
        if (binOutputsBuilder_ == null) {
          if (!other.binOutputs_.isEmpty()) {
            if (binOutputs_.isEmpty()) {
              binOutputs_ = other.binOutputs_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureBinOutputsIsMutable();
              binOutputs_.addAll(other.binOutputs_);
            }
            onChanged();
          }
        } else {
          if (!other.binOutputs_.isEmpty()) {
            if (binOutputsBuilder_.isEmpty()) {
              binOutputsBuilder_.dispose();
              binOutputsBuilder_ = null;
              binOutputs_ = other.binOutputs_;
              bitField0_ = (bitField0_ & ~0x00000004);
              binOutputsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBinOutputsFieldBuilder() : null;
            } else {
              binOutputsBuilder_.addAllMessages(other.binOutputs_);
            }
          }
        }
        if (outputsBuilder_ == null) {
          if (!other.outputs_.isEmpty()) {
            if (outputs_.isEmpty()) {
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureOutputsIsMutable();
              outputs_.addAll(other.outputs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputs_.isEmpty()) {
            if (outputsBuilder_.isEmpty()) {
              outputsBuilder_.dispose();
              outputsBuilder_ = null;
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000008);
              outputsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOutputsFieldBuilder() : null;
            } else {
              outputsBuilder_.addAllMessages(other.outputs_);
            }
          }
        }
        if (other.hasLockTime()) {
          setLockTime(other.getLockTime());
        }
        if (other.hasInputsCnt()) {
          setInputsCnt(other.getInputsCnt());
        }
        if (other.hasOutputsCnt()) {
          setOutputsCnt(other.getOutputsCnt());
        }
        if (other.hasExtraData()) {
          setExtraData(other.getExtraData());
        }
        if (other.hasExtraDataLen()) {
          setExtraDataLen(other.getExtraDataLen());
        }
        if (other.hasDecredExpiry()) {
          setDecredExpiry(other.getDecredExpiry());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getInputsCount(); i++) {
          if (!getInputs(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getBinOutputsCount(); i++) {
          if (!getBinOutputs(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getOutputsCount(); i++) {
          if (!getOutputs(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int version_ ;
      /**
       * <code>optional uint32 version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 version = 1;</code>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional uint32 version = 1;</code>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 version = 1;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType> inputs_ =
        java.util.Collections.emptyList();
      private void ensureInputsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          inputs_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType>(inputs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputTypeOrBuilder> inputsBuilder_;

      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType> getInputsList() {
        if (inputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(inputs_);
        } else {
          return inputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public int getInputsCount() {
        if (inputsBuilder_ == null) {
          return inputs_.size();
        } else {
          return inputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType getInputs(int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);
        } else {
          return inputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public Builder setInputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.set(index, value);
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public Builder setInputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public Builder addInputs(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public Builder addInputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType value) {
        if (inputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInputsIsMutable();
          inputs_.add(index, value);
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public Builder addInputs(
          com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public Builder addInputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder builderForValue) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          inputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public Builder addAllInputs(
          java.lang.Iterable<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType> values) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, inputs_);
          onChanged();
        } else {
          inputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public Builder clearInputs() {
        if (inputsBuilder_ == null) {
          inputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          inputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public Builder removeInputs(int index) {
        if (inputsBuilder_ == null) {
          ensureInputsIsMutable();
          inputs_.remove(index);
          onChanged();
        } else {
          inputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder getInputsBuilder(
          int index) {
        return getInputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputTypeOrBuilder getInputsOrBuilder(
          int index) {
        if (inputsBuilder_ == null) {
          return inputs_.get(index);  } else {
          return inputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputTypeOrBuilder> 
           getInputsOrBuilderList() {
        if (inputsBuilder_ != null) {
          return inputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(inputs_);
        }
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder addInputsBuilder() {
        return getInputsFieldBuilder().addBuilder(
            com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.getDefaultInstance());
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder addInputsBuilder(
          int index) {
        return getInputsFieldBuilder().addBuilder(
            index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.getDefaultInstance());
      }
      /**
       * <code>repeated .TxInputType inputs = 2;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder> 
           getInputsBuilderList() {
        return getInputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputTypeOrBuilder> 
          getInputsFieldBuilder() {
        if (inputsBuilder_ == null) {
          inputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxInputTypeOrBuilder>(
                  inputs_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          inputs_ = null;
        }
        return inputsBuilder_;
      }

      private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType> binOutputs_ =
        java.util.Collections.emptyList();
      private void ensureBinOutputsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          binOutputs_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType>(binOutputs_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinTypeOrBuilder> binOutputsBuilder_;

      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType> getBinOutputsList() {
        if (binOutputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(binOutputs_);
        } else {
          return binOutputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public int getBinOutputsCount() {
        if (binOutputsBuilder_ == null) {
          return binOutputs_.size();
        } else {
          return binOutputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType getBinOutputs(int index) {
        if (binOutputsBuilder_ == null) {
          return binOutputs_.get(index);
        } else {
          return binOutputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public Builder setBinOutputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType value) {
        if (binOutputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBinOutputsIsMutable();
          binOutputs_.set(index, value);
          onChanged();
        } else {
          binOutputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public Builder setBinOutputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder builderForValue) {
        if (binOutputsBuilder_ == null) {
          ensureBinOutputsIsMutable();
          binOutputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          binOutputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public Builder addBinOutputs(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType value) {
        if (binOutputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBinOutputsIsMutable();
          binOutputs_.add(value);
          onChanged();
        } else {
          binOutputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public Builder addBinOutputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType value) {
        if (binOutputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBinOutputsIsMutable();
          binOutputs_.add(index, value);
          onChanged();
        } else {
          binOutputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public Builder addBinOutputs(
          com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder builderForValue) {
        if (binOutputsBuilder_ == null) {
          ensureBinOutputsIsMutable();
          binOutputs_.add(builderForValue.build());
          onChanged();
        } else {
          binOutputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public Builder addBinOutputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder builderForValue) {
        if (binOutputsBuilder_ == null) {
          ensureBinOutputsIsMutable();
          binOutputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          binOutputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public Builder addAllBinOutputs(
          java.lang.Iterable<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType> values) {
        if (binOutputsBuilder_ == null) {
          ensureBinOutputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, binOutputs_);
          onChanged();
        } else {
          binOutputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public Builder clearBinOutputs() {
        if (binOutputsBuilder_ == null) {
          binOutputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          binOutputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public Builder removeBinOutputs(int index) {
        if (binOutputsBuilder_ == null) {
          ensureBinOutputsIsMutable();
          binOutputs_.remove(index);
          onChanged();
        } else {
          binOutputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder getBinOutputsBuilder(
          int index) {
        return getBinOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinTypeOrBuilder getBinOutputsOrBuilder(
          int index) {
        if (binOutputsBuilder_ == null) {
          return binOutputs_.get(index);  } else {
          return binOutputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinTypeOrBuilder> 
           getBinOutputsOrBuilderList() {
        if (binOutputsBuilder_ != null) {
          return binOutputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(binOutputs_);
        }
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder addBinOutputsBuilder() {
        return getBinOutputsFieldBuilder().addBuilder(
            com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.getDefaultInstance());
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder addBinOutputsBuilder(
          int index) {
        return getBinOutputsFieldBuilder().addBuilder(
            index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.getDefaultInstance());
      }
      /**
       * <code>repeated .TxOutputBinType bin_outputs = 3;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder> 
           getBinOutputsBuilderList() {
        return getBinOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinTypeOrBuilder> 
          getBinOutputsFieldBuilder() {
        if (binOutputsBuilder_ == null) {
          binOutputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputBinTypeOrBuilder>(
                  binOutputs_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          binOutputs_ = null;
        }
        return binOutputsBuilder_;
      }

      private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          outputs_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType>(outputs_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputTypeOrBuilder> outputsBuilder_;

      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public Builder setOutputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public Builder setOutputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public Builder addOutputs(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public Builder addOutputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public Builder addOutputs(
          com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public Builder addOutputs(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputTypeOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputTypeOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.getDefaultInstance());
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.getDefaultInstance());
      }
      /**
       * <code>repeated .TxOutputType outputs = 5;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputTypeOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputType.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxOutputTypeOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }

      private int lockTime_ ;
      /**
       * <code>optional uint32 lock_time = 4;</code>
       */
      public boolean hasLockTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 lock_time = 4;</code>
       */
      public int getLockTime() {
        return lockTime_;
      }
      /**
       * <code>optional uint32 lock_time = 4;</code>
       */
      public Builder setLockTime(int value) {
        bitField0_ |= 0x00000010;
        lockTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lock_time = 4;</code>
       */
      public Builder clearLockTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lockTime_ = 0;
        onChanged();
        return this;
      }

      private int inputsCnt_ ;
      /**
       * <code>optional uint32 inputs_cnt = 6;</code>
       */
      public boolean hasInputsCnt() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 inputs_cnt = 6;</code>
       */
      public int getInputsCnt() {
        return inputsCnt_;
      }
      /**
       * <code>optional uint32 inputs_cnt = 6;</code>
       */
      public Builder setInputsCnt(int value) {
        bitField0_ |= 0x00000020;
        inputsCnt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 inputs_cnt = 6;</code>
       */
      public Builder clearInputsCnt() {
        bitField0_ = (bitField0_ & ~0x00000020);
        inputsCnt_ = 0;
        onChanged();
        return this;
      }

      private int outputsCnt_ ;
      /**
       * <code>optional uint32 outputs_cnt = 7;</code>
       */
      public boolean hasOutputsCnt() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 outputs_cnt = 7;</code>
       */
      public int getOutputsCnt() {
        return outputsCnt_;
      }
      /**
       * <code>optional uint32 outputs_cnt = 7;</code>
       */
      public Builder setOutputsCnt(int value) {
        bitField0_ |= 0x00000040;
        outputsCnt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 outputs_cnt = 7;</code>
       */
      public Builder clearOutputsCnt() {
        bitField0_ = (bitField0_ & ~0x00000040);
        outputsCnt_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString extraData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes extra_data = 8;</code>
       */
      public boolean hasExtraData() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bytes extra_data = 8;</code>
       */
      public com.google.protobuf.ByteString getExtraData() {
        return extraData_;
      }
      /**
       * <code>optional bytes extra_data = 8;</code>
       */
      public Builder setExtraData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        extraData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes extra_data = 8;</code>
       */
      public Builder clearExtraData() {
        bitField0_ = (bitField0_ & ~0x00000080);
        extraData_ = getDefaultInstance().getExtraData();
        onChanged();
        return this;
      }

      private int extraDataLen_ ;
      /**
       * <code>optional uint32 extra_data_len = 9;</code>
       */
      public boolean hasExtraDataLen() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 extra_data_len = 9;</code>
       */
      public int getExtraDataLen() {
        return extraDataLen_;
      }
      /**
       * <code>optional uint32 extra_data_len = 9;</code>
       */
      public Builder setExtraDataLen(int value) {
        bitField0_ |= 0x00000100;
        extraDataLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 extra_data_len = 9;</code>
       */
      public Builder clearExtraDataLen() {
        bitField0_ = (bitField0_ & ~0x00000100);
        extraDataLen_ = 0;
        onChanged();
        return this;
      }

      private int decredExpiry_ ;
      /**
       * <code>optional uint32 decred_expiry = 10;</code>
       */
      public boolean hasDecredExpiry() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 decred_expiry = 10;</code>
       */
      public int getDecredExpiry() {
        return decredExpiry_;
      }
      /**
       * <code>optional uint32 decred_expiry = 10;</code>
       */
      public Builder setDecredExpiry(int value) {
        bitField0_ |= 0x00000200;
        decredExpiry_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 decred_expiry = 10;</code>
       */
      public Builder clearDecredExpiry() {
        bitField0_ = (bitField0_ & ~0x00000200);
        decredExpiry_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TransactionType)
    }

    // @@protoc_insertion_point(class_scope:TransactionType)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TransactionType>
        PARSER = new com.google.protobuf.AbstractParser<TransactionType>() {
      public TransactionType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TransactionType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransactionType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransactionType> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TransactionType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TxRequestDetailsTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TxRequestDetailsType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * device expects TxAck message from the computer
     * </pre>
     *
     * <code>optional uint32 request_index = 1;</code>
     */
    boolean hasRequestIndex();
    /**
     * <pre>
     * device expects TxAck message from the computer
     * </pre>
     *
     * <code>optional uint32 request_index = 1;</code>
     */
    int getRequestIndex();

    /**
     * <pre>
     * tx_hash of requested transaction
     * </pre>
     *
     * <code>optional bytes tx_hash = 2;</code>
     */
    boolean hasTxHash();
    /**
     * <pre>
     * tx_hash of requested transaction
     * </pre>
     *
     * <code>optional bytes tx_hash = 2;</code>
     */
    com.google.protobuf.ByteString getTxHash();

    /**
     * <pre>
     * length of requested extra data
     * </pre>
     *
     * <code>optional uint32 extra_data_len = 3;</code>
     */
    boolean hasExtraDataLen();
    /**
     * <pre>
     * length of requested extra data
     * </pre>
     *
     * <code>optional uint32 extra_data_len = 3;</code>
     */
    int getExtraDataLen();

    /**
     * <pre>
     * offset of requested extra data
     * </pre>
     *
     * <code>optional uint32 extra_data_offset = 4;</code>
     */
    boolean hasExtraDataOffset();
    /**
     * <pre>
     * offset of requested extra data
     * </pre>
     *
     * <code>optional uint32 extra_data_offset = 4;</code>
     */
    int getExtraDataOffset();
  }
  /**
   * <pre>
   **
   * Structure representing request details
   * &#64;used_in TxRequest
   * </pre>
   *
   * Protobuf type {@code TxRequestDetailsType}
   */
  public  static final class TxRequestDetailsType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TxRequestDetailsType)
      TxRequestDetailsTypeOrBuilder {
    // Use TxRequestDetailsType.newBuilder() to construct.
    private TxRequestDetailsType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TxRequestDetailsType() {
      requestIndex_ = 0;
      txHash_ = com.google.protobuf.ByteString.EMPTY;
      extraDataLen_ = 0;
      extraDataOffset_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TxRequestDetailsType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              requestIndex_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              txHash_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              extraDataLen_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              extraDataOffset_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxRequestDetailsType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxRequestDetailsType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType.Builder.class);
    }

    private int bitField0_;
    public static final int REQUEST_INDEX_FIELD_NUMBER = 1;
    private int requestIndex_;
    /**
     * <pre>
     * device expects TxAck message from the computer
     * </pre>
     *
     * <code>optional uint32 request_index = 1;</code>
     */
    public boolean hasRequestIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * device expects TxAck message from the computer
     * </pre>
     *
     * <code>optional uint32 request_index = 1;</code>
     */
    public int getRequestIndex() {
      return requestIndex_;
    }

    public static final int TX_HASH_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString txHash_;
    /**
     * <pre>
     * tx_hash of requested transaction
     * </pre>
     *
     * <code>optional bytes tx_hash = 2;</code>
     */
    public boolean hasTxHash() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * tx_hash of requested transaction
     * </pre>
     *
     * <code>optional bytes tx_hash = 2;</code>
     */
    public com.google.protobuf.ByteString getTxHash() {
      return txHash_;
    }

    public static final int EXTRA_DATA_LEN_FIELD_NUMBER = 3;
    private int extraDataLen_;
    /**
     * <pre>
     * length of requested extra data
     * </pre>
     *
     * <code>optional uint32 extra_data_len = 3;</code>
     */
    public boolean hasExtraDataLen() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * length of requested extra data
     * </pre>
     *
     * <code>optional uint32 extra_data_len = 3;</code>
     */
    public int getExtraDataLen() {
      return extraDataLen_;
    }

    public static final int EXTRA_DATA_OFFSET_FIELD_NUMBER = 4;
    private int extraDataOffset_;
    /**
     * <pre>
     * offset of requested extra data
     * </pre>
     *
     * <code>optional uint32 extra_data_offset = 4;</code>
     */
    public boolean hasExtraDataOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * offset of requested extra data
     * </pre>
     *
     * <code>optional uint32 extra_data_offset = 4;</code>
     */
    public int getExtraDataOffset() {
      return extraDataOffset_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, requestIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, txHash_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, extraDataLen_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, extraDataOffset_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, requestIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, txHash_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, extraDataLen_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, extraDataOffset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType) obj;

      boolean result = true;
      result = result && (hasRequestIndex() == other.hasRequestIndex());
      if (hasRequestIndex()) {
        result = result && (getRequestIndex()
            == other.getRequestIndex());
      }
      result = result && (hasTxHash() == other.hasTxHash());
      if (hasTxHash()) {
        result = result && getTxHash()
            .equals(other.getTxHash());
      }
      result = result && (hasExtraDataLen() == other.hasExtraDataLen());
      if (hasExtraDataLen()) {
        result = result && (getExtraDataLen()
            == other.getExtraDataLen());
      }
      result = result && (hasExtraDataOffset() == other.hasExtraDataOffset());
      if (hasExtraDataOffset()) {
        result = result && (getExtraDataOffset()
            == other.getExtraDataOffset());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasRequestIndex()) {
        hash = (37 * hash) + REQUEST_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getRequestIndex();
      }
      if (hasTxHash()) {
        hash = (37 * hash) + TX_HASH_FIELD_NUMBER;
        hash = (53 * hash) + getTxHash().hashCode();
      }
      if (hasExtraDataLen()) {
        hash = (37 * hash) + EXTRA_DATA_LEN_FIELD_NUMBER;
        hash = (53 * hash) + getExtraDataLen();
      }
      if (hasExtraDataOffset()) {
        hash = (37 * hash) + EXTRA_DATA_OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getExtraDataOffset();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing request details
     * &#64;used_in TxRequest
     * </pre>
     *
     * Protobuf type {@code TxRequestDetailsType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TxRequestDetailsType)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxRequestDetailsType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxRequestDetailsType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        requestIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        txHash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        extraDataLen_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        extraDataOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxRequestDetailsType_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.requestIndex_ = requestIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.txHash_ = txHash_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.extraDataLen_ = extraDataLen_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.extraDataOffset_ = extraDataOffset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType.getDefaultInstance()) return this;
        if (other.hasRequestIndex()) {
          setRequestIndex(other.getRequestIndex());
        }
        if (other.hasTxHash()) {
          setTxHash(other.getTxHash());
        }
        if (other.hasExtraDataLen()) {
          setExtraDataLen(other.getExtraDataLen());
        }
        if (other.hasExtraDataOffset()) {
          setExtraDataOffset(other.getExtraDataOffset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int requestIndex_ ;
      /**
       * <pre>
       * device expects TxAck message from the computer
       * </pre>
       *
       * <code>optional uint32 request_index = 1;</code>
       */
      public boolean hasRequestIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * device expects TxAck message from the computer
       * </pre>
       *
       * <code>optional uint32 request_index = 1;</code>
       */
      public int getRequestIndex() {
        return requestIndex_;
      }
      /**
       * <pre>
       * device expects TxAck message from the computer
       * </pre>
       *
       * <code>optional uint32 request_index = 1;</code>
       */
      public Builder setRequestIndex(int value) {
        bitField0_ |= 0x00000001;
        requestIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * device expects TxAck message from the computer
       * </pre>
       *
       * <code>optional uint32 request_index = 1;</code>
       */
      public Builder clearRequestIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requestIndex_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString txHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * tx_hash of requested transaction
       * </pre>
       *
       * <code>optional bytes tx_hash = 2;</code>
       */
      public boolean hasTxHash() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * tx_hash of requested transaction
       * </pre>
       *
       * <code>optional bytes tx_hash = 2;</code>
       */
      public com.google.protobuf.ByteString getTxHash() {
        return txHash_;
      }
      /**
       * <pre>
       * tx_hash of requested transaction
       * </pre>
       *
       * <code>optional bytes tx_hash = 2;</code>
       */
      public Builder setTxHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        txHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tx_hash of requested transaction
       * </pre>
       *
       * <code>optional bytes tx_hash = 2;</code>
       */
      public Builder clearTxHash() {
        bitField0_ = (bitField0_ & ~0x00000002);
        txHash_ = getDefaultInstance().getTxHash();
        onChanged();
        return this;
      }

      private int extraDataLen_ ;
      /**
       * <pre>
       * length of requested extra data
       * </pre>
       *
       * <code>optional uint32 extra_data_len = 3;</code>
       */
      public boolean hasExtraDataLen() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * length of requested extra data
       * </pre>
       *
       * <code>optional uint32 extra_data_len = 3;</code>
       */
      public int getExtraDataLen() {
        return extraDataLen_;
      }
      /**
       * <pre>
       * length of requested extra data
       * </pre>
       *
       * <code>optional uint32 extra_data_len = 3;</code>
       */
      public Builder setExtraDataLen(int value) {
        bitField0_ |= 0x00000004;
        extraDataLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * length of requested extra data
       * </pre>
       *
       * <code>optional uint32 extra_data_len = 3;</code>
       */
      public Builder clearExtraDataLen() {
        bitField0_ = (bitField0_ & ~0x00000004);
        extraDataLen_ = 0;
        onChanged();
        return this;
      }

      private int extraDataOffset_ ;
      /**
       * <pre>
       * offset of requested extra data
       * </pre>
       *
       * <code>optional uint32 extra_data_offset = 4;</code>
       */
      public boolean hasExtraDataOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * offset of requested extra data
       * </pre>
       *
       * <code>optional uint32 extra_data_offset = 4;</code>
       */
      public int getExtraDataOffset() {
        return extraDataOffset_;
      }
      /**
       * <pre>
       * offset of requested extra data
       * </pre>
       *
       * <code>optional uint32 extra_data_offset = 4;</code>
       */
      public Builder setExtraDataOffset(int value) {
        bitField0_ |= 0x00000008;
        extraDataOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * offset of requested extra data
       * </pre>
       *
       * <code>optional uint32 extra_data_offset = 4;</code>
       */
      public Builder clearExtraDataOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        extraDataOffset_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TxRequestDetailsType)
    }

    // @@protoc_insertion_point(class_scope:TxRequestDetailsType)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TxRequestDetailsType>
        PARSER = new com.google.protobuf.AbstractParser<TxRequestDetailsType>() {
      public TxRequestDetailsType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TxRequestDetailsType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TxRequestDetailsType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TxRequestDetailsType> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestDetailsType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TxRequestSerializedTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TxRequestSerializedType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 'signature' field contains signed input of this index
     * </pre>
     *
     * <code>optional uint32 signature_index = 1;</code>
     */
    boolean hasSignatureIndex();
    /**
     * <pre>
     * 'signature' field contains signed input of this index
     * </pre>
     *
     * <code>optional uint32 signature_index = 1;</code>
     */
    int getSignatureIndex();

    /**
     * <pre>
     * signature of the signature_index input
     * </pre>
     *
     * <code>optional bytes signature = 2;</code>
     */
    boolean hasSignature();
    /**
     * <pre>
     * signature of the signature_index input
     * </pre>
     *
     * <code>optional bytes signature = 2;</code>
     */
    com.google.protobuf.ByteString getSignature();

    /**
     * <pre>
     * part of serialized and signed transaction
     * </pre>
     *
     * <code>optional bytes serialized_tx = 3;</code>
     */
    boolean hasSerializedTx();
    /**
     * <pre>
     * part of serialized and signed transaction
     * </pre>
     *
     * <code>optional bytes serialized_tx = 3;</code>
     */
    com.google.protobuf.ByteString getSerializedTx();
  }
  /**
   * <pre>
   **
   * Structure representing serialized data
   * &#64;used_in TxRequest
   * </pre>
   *
   * Protobuf type {@code TxRequestSerializedType}
   */
  public  static final class TxRequestSerializedType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TxRequestSerializedType)
      TxRequestSerializedTypeOrBuilder {
    // Use TxRequestSerializedType.newBuilder() to construct.
    private TxRequestSerializedType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TxRequestSerializedType() {
      signatureIndex_ = 0;
      signature_ = com.google.protobuf.ByteString.EMPTY;
      serializedTx_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TxRequestSerializedType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              signatureIndex_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              signature_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              serializedTx_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxRequestSerializedType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxRequestSerializedType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType.Builder.class);
    }

    private int bitField0_;
    public static final int SIGNATURE_INDEX_FIELD_NUMBER = 1;
    private int signatureIndex_;
    /**
     * <pre>
     * 'signature' field contains signed input of this index
     * </pre>
     *
     * <code>optional uint32 signature_index = 1;</code>
     */
    public boolean hasSignatureIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * 'signature' field contains signed input of this index
     * </pre>
     *
     * <code>optional uint32 signature_index = 1;</code>
     */
    public int getSignatureIndex() {
      return signatureIndex_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * signature of the signature_index input
     * </pre>
     *
     * <code>optional bytes signature = 2;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * signature of the signature_index input
     * </pre>
     *
     * <code>optional bytes signature = 2;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    public static final int SERIALIZED_TX_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString serializedTx_;
    /**
     * <pre>
     * part of serialized and signed transaction
     * </pre>
     *
     * <code>optional bytes serialized_tx = 3;</code>
     */
    public boolean hasSerializedTx() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * part of serialized and signed transaction
     * </pre>
     *
     * <code>optional bytes serialized_tx = 3;</code>
     */
    public com.google.protobuf.ByteString getSerializedTx() {
      return serializedTx_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, signatureIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, signature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, serializedTx_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, signatureIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, signature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, serializedTx_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType) obj;

      boolean result = true;
      result = result && (hasSignatureIndex() == other.hasSignatureIndex());
      if (hasSignatureIndex()) {
        result = result && (getSignatureIndex()
            == other.getSignatureIndex());
      }
      result = result && (hasSignature() == other.hasSignature());
      if (hasSignature()) {
        result = result && getSignature()
            .equals(other.getSignature());
      }
      result = result && (hasSerializedTx() == other.hasSerializedTx());
      if (hasSerializedTx()) {
        result = result && getSerializedTx()
            .equals(other.getSerializedTx());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasSignatureIndex()) {
        hash = (37 * hash) + SIGNATURE_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getSignatureIndex();
      }
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      if (hasSerializedTx()) {
        hash = (37 * hash) + SERIALIZED_TX_FIELD_NUMBER;
        hash = (53 * hash) + getSerializedTx().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing serialized data
     * &#64;used_in TxRequest
     * </pre>
     *
     * Protobuf type {@code TxRequestSerializedType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TxRequestSerializedType)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxRequestSerializedType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxRequestSerializedType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        signatureIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        serializedTx_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_TxRequestSerializedType_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.signatureIndex_ = signatureIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.signature_ = signature_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serializedTx_ = serializedTx_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType.getDefaultInstance()) return this;
        if (other.hasSignatureIndex()) {
          setSignatureIndex(other.getSignatureIndex());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        if (other.hasSerializedTx()) {
          setSerializedTx(other.getSerializedTx());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int signatureIndex_ ;
      /**
       * <pre>
       * 'signature' field contains signed input of this index
       * </pre>
       *
       * <code>optional uint32 signature_index = 1;</code>
       */
      public boolean hasSignatureIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * 'signature' field contains signed input of this index
       * </pre>
       *
       * <code>optional uint32 signature_index = 1;</code>
       */
      public int getSignatureIndex() {
        return signatureIndex_;
      }
      /**
       * <pre>
       * 'signature' field contains signed input of this index
       * </pre>
       *
       * <code>optional uint32 signature_index = 1;</code>
       */
      public Builder setSignatureIndex(int value) {
        bitField0_ |= 0x00000001;
        signatureIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 'signature' field contains signed input of this index
       * </pre>
       *
       * <code>optional uint32 signature_index = 1;</code>
       */
      public Builder clearSignatureIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        signatureIndex_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * signature of the signature_index input
       * </pre>
       *
       * <code>optional bytes signature = 2;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * signature of the signature_index input
       * </pre>
       *
       * <code>optional bytes signature = 2;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       * signature of the signature_index input
       * </pre>
       *
       * <code>optional bytes signature = 2;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signature of the signature_index input
       * </pre>
       *
       * <code>optional bytes signature = 2;</code>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000002);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString serializedTx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * part of serialized and signed transaction
       * </pre>
       *
       * <code>optional bytes serialized_tx = 3;</code>
       */
      public boolean hasSerializedTx() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * part of serialized and signed transaction
       * </pre>
       *
       * <code>optional bytes serialized_tx = 3;</code>
       */
      public com.google.protobuf.ByteString getSerializedTx() {
        return serializedTx_;
      }
      /**
       * <pre>
       * part of serialized and signed transaction
       * </pre>
       *
       * <code>optional bytes serialized_tx = 3;</code>
       */
      public Builder setSerializedTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        serializedTx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * part of serialized and signed transaction
       * </pre>
       *
       * <code>optional bytes serialized_tx = 3;</code>
       */
      public Builder clearSerializedTx() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serializedTx_ = getDefaultInstance().getSerializedTx();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TxRequestSerializedType)
    }

    // @@protoc_insertion_point(class_scope:TxRequestSerializedType)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TxRequestSerializedType>
        PARSER = new com.google.protobuf.AbstractParser<TxRequestSerializedType>() {
      public TxRequestSerializedType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TxRequestSerializedType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TxRequestSerializedType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TxRequestSerializedType> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.TxRequestSerializedType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IdentityTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IdentityType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     */
    boolean hasProto();
    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     */
    java.lang.String getProto();
    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     */
    com.google.protobuf.ByteString
        getProtoBytes();

    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     */
    boolean hasUser();
    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     */
    java.lang.String getUser();
    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     */
    com.google.protobuf.ByteString
        getUserBytes();

    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     */
    boolean hasHost();
    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     */
    java.lang.String getHost();
    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     */
    com.google.protobuf.ByteString
        getHostBytes();

    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     */
    boolean hasPort();
    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     */
    java.lang.String getPort();
    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     */
    com.google.protobuf.ByteString
        getPortBytes();

    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     */
    boolean hasPath();
    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     */
    java.lang.String getPath();
    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * identity index
     * </pre>
     *
     * <code>optional uint32 index = 6 [default = 0];</code>
     */
    boolean hasIndex();
    /**
     * <pre>
     * identity index
     * </pre>
     *
     * <code>optional uint32 index = 6 [default = 0];</code>
     */
    int getIndex();
  }
  /**
   * <pre>
   **
   * Structure representing identity data
   * &#64;used_in IdentityType
   * </pre>
   *
   * Protobuf type {@code IdentityType}
   */
  public  static final class IdentityType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IdentityType)
      IdentityTypeOrBuilder {
    // Use IdentityType.newBuilder() to construct.
    private IdentityType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IdentityType() {
      proto_ = "";
      user_ = "";
      host_ = "";
      port_ = "";
      path_ = "";
      index_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IdentityType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              proto_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              user_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              host_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              port_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              path_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              index_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_IdentityType_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_IdentityType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType.Builder.class);
    }

    private int bitField0_;
    public static final int PROTO_FIELD_NUMBER = 1;
    private volatile java.lang.Object proto_;
    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     */
    public boolean hasProto() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     */
    public java.lang.String getProto() {
      java.lang.Object ref = proto_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          proto_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * proto part of URI
     * </pre>
     *
     * <code>optional string proto = 1;</code>
     */
    public com.google.protobuf.ByteString
        getProtoBytes() {
      java.lang.Object ref = proto_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        proto_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int USER_FIELD_NUMBER = 2;
    private volatile java.lang.Object user_;
    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     */
    public boolean hasUser() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     */
    public java.lang.String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          user_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * user part of URI
     * </pre>
     *
     * <code>optional string user = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOST_FIELD_NUMBER = 3;
    private volatile java.lang.Object host_;
    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     */
    public boolean hasHost() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          host_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * host part of URI
     * </pre>
     *
     * <code>optional string host = 3;</code>
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 4;
    private volatile java.lang.Object port_;
    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     */
    public java.lang.String getPort() {
      java.lang.Object ref = port_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          port_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * port part of URI
     * </pre>
     *
     * <code>optional string port = 4;</code>
     */
    public com.google.protobuf.ByteString
        getPortBytes() {
      java.lang.Object ref = port_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        port_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PATH_FIELD_NUMBER = 5;
    private volatile java.lang.Object path_;
    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     */
    public boolean hasPath() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     */
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          path_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * path part of URI
     * </pre>
     *
     * <code>optional string path = 5;</code>
     */
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_FIELD_NUMBER = 6;
    private int index_;
    /**
     * <pre>
     * identity index
     * </pre>
     *
     * <code>optional uint32 index = 6 [default = 0];</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * identity index
     * </pre>
     *
     * <code>optional uint32 index = 6 [default = 0];</code>
     */
    public int getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, proto_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, user_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, host_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, port_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, path_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, index_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, proto_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, user_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, host_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, port_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, path_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, index_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType) obj;

      boolean result = true;
      result = result && (hasProto() == other.hasProto());
      if (hasProto()) {
        result = result && getProto()
            .equals(other.getProto());
      }
      result = result && (hasUser() == other.hasUser());
      if (hasUser()) {
        result = result && getUser()
            .equals(other.getUser());
      }
      result = result && (hasHost() == other.hasHost());
      if (hasHost()) {
        result = result && getHost()
            .equals(other.getHost());
      }
      result = result && (hasPort() == other.hasPort());
      if (hasPort()) {
        result = result && getPort()
            .equals(other.getPort());
      }
      result = result && (hasPath() == other.hasPath());
      if (hasPath()) {
        result = result && getPath()
            .equals(other.getPath());
      }
      result = result && (hasIndex() == other.hasIndex());
      if (hasIndex()) {
        result = result && (getIndex()
            == other.getIndex());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasProto()) {
        hash = (37 * hash) + PROTO_FIELD_NUMBER;
        hash = (53 * hash) + getProto().hashCode();
      }
      if (hasUser()) {
        hash = (37 * hash) + USER_FIELD_NUMBER;
        hash = (53 * hash) + getUser().hashCode();
      }
      if (hasHost()) {
        hash = (37 * hash) + HOST_FIELD_NUMBER;
        hash = (53 * hash) + getHost().hashCode();
      }
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort().hashCode();
      }
      if (hasPath()) {
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPath().hashCode();
      }
      if (hasIndex()) {
        hash = (37 * hash) + INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getIndex();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing identity data
     * &#64;used_in IdentityType
     * </pre>
     *
     * Protobuf type {@code IdentityType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IdentityType)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_IdentityType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_IdentityType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        proto_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        user_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        host_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        path_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_IdentityType_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.proto_ = proto_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.user_ = user_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.host_ = host_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.path_ = path_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.index_ = index_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType.getDefaultInstance()) return this;
        if (other.hasProto()) {
          bitField0_ |= 0x00000001;
          proto_ = other.proto_;
          onChanged();
        }
        if (other.hasUser()) {
          bitField0_ |= 0x00000002;
          user_ = other.user_;
          onChanged();
        }
        if (other.hasHost()) {
          bitField0_ |= 0x00000004;
          host_ = other.host_;
          onChanged();
        }
        if (other.hasPort()) {
          bitField0_ |= 0x00000008;
          port_ = other.port_;
          onChanged();
        }
        if (other.hasPath()) {
          bitField0_ |= 0x00000010;
          path_ = other.path_;
          onChanged();
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object proto_ = "";
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       */
      public boolean hasProto() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       */
      public java.lang.String getProto() {
        java.lang.Object ref = proto_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            proto_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       */
      public com.google.protobuf.ByteString
          getProtoBytes() {
        java.lang.Object ref = proto_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          proto_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       */
      public Builder setProto(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        proto_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       */
      public Builder clearProto() {
        bitField0_ = (bitField0_ & ~0x00000001);
        proto_ = getDefaultInstance().getProto();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * proto part of URI
       * </pre>
       *
       * <code>optional string proto = 1;</code>
       */
      public Builder setProtoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        proto_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object user_ = "";
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       */
      public boolean hasUser() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       */
      public java.lang.String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            user_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUserBytes() {
        java.lang.Object ref = user_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          user_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       */
      public Builder setUser(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        user_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       */
      public Builder clearUser() {
        bitField0_ = (bitField0_ & ~0x00000002);
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * user part of URI
       * </pre>
       *
       * <code>optional string user = 2;</code>
       */
      public Builder setUserBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        user_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object host_ = "";
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            host_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       */
      public Builder clearHost() {
        bitField0_ = (bitField0_ & ~0x00000004);
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * host part of URI
       * </pre>
       *
       * <code>optional string host = 3;</code>
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        host_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object port_ = "";
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       */
      public java.lang.String getPort() {
        java.lang.Object ref = port_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            port_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       */
      public com.google.protobuf.ByteString
          getPortBytes() {
        java.lang.Object ref = port_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          port_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       */
      public Builder setPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = getDefaultInstance().getPort();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port part of URI
       * </pre>
       *
       * <code>optional string port = 4;</code>
       */
      public Builder setPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        port_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       */
      public boolean hasPath() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            path_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       */
      public Builder clearPath() {
        bitField0_ = (bitField0_ & ~0x00000010);
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path part of URI
       * </pre>
       *
       * <code>optional string path = 5;</code>
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        path_ = value;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <pre>
       * identity index
       * </pre>
       *
       * <code>optional uint32 index = 6 [default = 0];</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * identity index
       * </pre>
       *
       * <code>optional uint32 index = 6 [default = 0];</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <pre>
       * identity index
       * </pre>
       *
       * <code>optional uint32 index = 6 [default = 0];</code>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000020;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * identity index
       * </pre>
       *
       * <code>optional uint32 index = 6 [default = 0];</code>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        index_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:IdentityType)
    }

    // @@protoc_insertion_point(class_scope:IdentityType)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<IdentityType>
        PARSER = new com.google.protobuf.AbstractParser<IdentityType>() {
      public IdentityType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new IdentityType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IdentityType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IdentityType> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.IdentityType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NEMTransactionCommonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NEMTransactionCommon)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    java.util.List<java.lang.Integer> getAddressNList();
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    int getAddressNCount();
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    int getAddressN(int index);

    /**
     * <pre>
     * Network ID (0x68 = Mainnet, 0x98 = Testnet, 0x60 = Mijin)
     * </pre>
     *
     * <code>optional uint32 network = 2;</code>
     */
    boolean hasNetwork();
    /**
     * <pre>
     * Network ID (0x68 = Mainnet, 0x98 = Testnet, 0x60 = Mijin)
     * </pre>
     *
     * <code>optional uint32 network = 2;</code>
     */
    int getNetwork();

    /**
     * <pre>
     * Number of seconds elapsed since the creation of the nemesis block
     * </pre>
     *
     * <code>optional uint32 timestamp = 3;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * Number of seconds elapsed since the creation of the nemesis block
     * </pre>
     *
     * <code>optional uint32 timestamp = 3;</code>
     */
    int getTimestamp();

    /**
     * <pre>
     * Fee for the transaction
     * </pre>
     *
     * <code>optional uint64 fee = 4;</code>
     */
    boolean hasFee();
    /**
     * <pre>
     * Fee for the transaction
     * </pre>
     *
     * <code>optional uint64 fee = 4;</code>
     */
    long getFee();

    /**
     * <pre>
     * Deadline of the transaction
     * </pre>
     *
     * <code>optional uint32 deadline = 5;</code>
     */
    boolean hasDeadline();
    /**
     * <pre>
     * Deadline of the transaction
     * </pre>
     *
     * <code>optional uint32 deadline = 5;</code>
     */
    int getDeadline();

    /**
     * <pre>
     * Public key of the account (for multisig transactions)
     * </pre>
     *
     * <code>optional bytes signer = 6;</code>
     */
    boolean hasSigner();
    /**
     * <pre>
     * Public key of the account (for multisig transactions)
     * </pre>
     *
     * <code>optional bytes signer = 6;</code>
     */
    com.google.protobuf.ByteString getSigner();
  }
  /**
   * <pre>
   **
   * Structure representing the common part for NEM transactions
   * &#64;used_in NEMSignTx
   * </pre>
   *
   * Protobuf type {@code NEMTransactionCommon}
   */
  public  static final class NEMTransactionCommon extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NEMTransactionCommon)
      NEMTransactionCommonOrBuilder {
    // Use NEMTransactionCommon.newBuilder() to construct.
    private NEMTransactionCommon(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NEMTransactionCommon() {
      addressN_ = java.util.Collections.emptyList();
      network_ = 0;
      timestamp_ = 0;
      fee_ = 0L;
      deadline_ = 0;
      signer_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NEMTransactionCommon(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                addressN_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              addressN_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                addressN_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                addressN_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              network_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              fee_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              deadline_ = input.readUInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              signer_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          addressN_ = java.util.Collections.unmodifiableList(addressN_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMTransactionCommon_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMTransactionCommon_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon.Builder.class);
    }

    private int bitField0_;
    public static final int ADDRESS_N_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> addressN_;
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getAddressNList() {
      return addressN_;
    }
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    public int getAddressNCount() {
      return addressN_.size();
    }
    /**
     * <pre>
     * BIP-32 path to derive the key from master node
     * </pre>
     *
     * <code>repeated uint32 address_n = 1;</code>
     */
    public int getAddressN(int index) {
      return addressN_.get(index);
    }

    public static final int NETWORK_FIELD_NUMBER = 2;
    private int network_;
    /**
     * <pre>
     * Network ID (0x68 = Mainnet, 0x98 = Testnet, 0x60 = Mijin)
     * </pre>
     *
     * <code>optional uint32 network = 2;</code>
     */
    public boolean hasNetwork() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Network ID (0x68 = Mainnet, 0x98 = Testnet, 0x60 = Mijin)
     * </pre>
     *
     * <code>optional uint32 network = 2;</code>
     */
    public int getNetwork() {
      return network_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private int timestamp_;
    /**
     * <pre>
     * Number of seconds elapsed since the creation of the nemesis block
     * </pre>
     *
     * <code>optional uint32 timestamp = 3;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Number of seconds elapsed since the creation of the nemesis block
     * </pre>
     *
     * <code>optional uint32 timestamp = 3;</code>
     */
    public int getTimestamp() {
      return timestamp_;
    }

    public static final int FEE_FIELD_NUMBER = 4;
    private long fee_;
    /**
     * <pre>
     * Fee for the transaction
     * </pre>
     *
     * <code>optional uint64 fee = 4;</code>
     */
    public boolean hasFee() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Fee for the transaction
     * </pre>
     *
     * <code>optional uint64 fee = 4;</code>
     */
    public long getFee() {
      return fee_;
    }

    public static final int DEADLINE_FIELD_NUMBER = 5;
    private int deadline_;
    /**
     * <pre>
     * Deadline of the transaction
     * </pre>
     *
     * <code>optional uint32 deadline = 5;</code>
     */
    public boolean hasDeadline() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Deadline of the transaction
     * </pre>
     *
     * <code>optional uint32 deadline = 5;</code>
     */
    public int getDeadline() {
      return deadline_;
    }

    public static final int SIGNER_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString signer_;
    /**
     * <pre>
     * Public key of the account (for multisig transactions)
     * </pre>
     *
     * <code>optional bytes signer = 6;</code>
     */
    public boolean hasSigner() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Public key of the account (for multisig transactions)
     * </pre>
     *
     * <code>optional bytes signer = 6;</code>
     */
    public com.google.protobuf.ByteString getSigner() {
      return signer_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < addressN_.size(); i++) {
        output.writeUInt32(1, addressN_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, network_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(4, fee_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, deadline_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, signer_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < addressN_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(addressN_.get(i));
        }
        size += dataSize;
        size += 1 * getAddressNList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, network_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, fee_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, deadline_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, signer_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon) obj;

      boolean result = true;
      result = result && getAddressNList()
          .equals(other.getAddressNList());
      result = result && (hasNetwork() == other.hasNetwork());
      if (hasNetwork()) {
        result = result && (getNetwork()
            == other.getNetwork());
      }
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && (getTimestamp()
            == other.getTimestamp());
      }
      result = result && (hasFee() == other.hasFee());
      if (hasFee()) {
        result = result && (getFee()
            == other.getFee());
      }
      result = result && (hasDeadline() == other.hasDeadline());
      if (hasDeadline()) {
        result = result && (getDeadline()
            == other.getDeadline());
      }
      result = result && (hasSigner() == other.hasSigner());
      if (hasSigner()) {
        result = result && getSigner()
            .equals(other.getSigner());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getAddressNCount() > 0) {
        hash = (37 * hash) + ADDRESS_N_FIELD_NUMBER;
        hash = (53 * hash) + getAddressNList().hashCode();
      }
      if (hasNetwork()) {
        hash = (37 * hash) + NETWORK_FIELD_NUMBER;
        hash = (53 * hash) + getNetwork();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp();
      }
      if (hasFee()) {
        hash = (37 * hash) + FEE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFee());
      }
      if (hasDeadline()) {
        hash = (37 * hash) + DEADLINE_FIELD_NUMBER;
        hash = (53 * hash) + getDeadline();
      }
      if (hasSigner()) {
        hash = (37 * hash) + SIGNER_FIELD_NUMBER;
        hash = (53 * hash) + getSigner().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing the common part for NEM transactions
     * &#64;used_in NEMSignTx
     * </pre>
     *
     * Protobuf type {@code NEMTransactionCommon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NEMTransactionCommon)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommonOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMTransactionCommon_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMTransactionCommon_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        addressN_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        network_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        fee_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        deadline_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        signer_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMTransactionCommon_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          addressN_ = java.util.Collections.unmodifiableList(addressN_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.addressN_ = addressN_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.network_ = network_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fee_ = fee_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.deadline_ = deadline_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.signer_ = signer_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon.getDefaultInstance()) return this;
        if (!other.addressN_.isEmpty()) {
          if (addressN_.isEmpty()) {
            addressN_ = other.addressN_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAddressNIsMutable();
            addressN_.addAll(other.addressN_);
          }
          onChanged();
        }
        if (other.hasNetwork()) {
          setNetwork(other.getNetwork());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasFee()) {
          setFee(other.getFee());
        }
        if (other.hasDeadline()) {
          setDeadline(other.getDeadline());
        }
        if (other.hasSigner()) {
          setSigner(other.getSigner());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> addressN_ = java.util.Collections.emptyList();
      private void ensureAddressNIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          addressN_ = new java.util.ArrayList<java.lang.Integer>(addressN_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getAddressNList() {
        return java.util.Collections.unmodifiableList(addressN_);
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public int getAddressNCount() {
        return addressN_.size();
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public int getAddressN(int index) {
        return addressN_.get(index);
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public Builder setAddressN(
          int index, int value) {
        ensureAddressNIsMutable();
        addressN_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public Builder addAddressN(int value) {
        ensureAddressNIsMutable();
        addressN_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public Builder addAllAddressN(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAddressNIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, addressN_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * BIP-32 path to derive the key from master node
       * </pre>
       *
       * <code>repeated uint32 address_n = 1;</code>
       */
      public Builder clearAddressN() {
        addressN_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int network_ ;
      /**
       * <pre>
       * Network ID (0x68 = Mainnet, 0x98 = Testnet, 0x60 = Mijin)
       * </pre>
       *
       * <code>optional uint32 network = 2;</code>
       */
      public boolean hasNetwork() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Network ID (0x68 = Mainnet, 0x98 = Testnet, 0x60 = Mijin)
       * </pre>
       *
       * <code>optional uint32 network = 2;</code>
       */
      public int getNetwork() {
        return network_;
      }
      /**
       * <pre>
       * Network ID (0x68 = Mainnet, 0x98 = Testnet, 0x60 = Mijin)
       * </pre>
       *
       * <code>optional uint32 network = 2;</code>
       */
      public Builder setNetwork(int value) {
        bitField0_ |= 0x00000002;
        network_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Network ID (0x68 = Mainnet, 0x98 = Testnet, 0x60 = Mijin)
       * </pre>
       *
       * <code>optional uint32 network = 2;</code>
       */
      public Builder clearNetwork() {
        bitField0_ = (bitField0_ & ~0x00000002);
        network_ = 0;
        onChanged();
        return this;
      }

      private int timestamp_ ;
      /**
       * <pre>
       * Number of seconds elapsed since the creation of the nemesis block
       * </pre>
       *
       * <code>optional uint32 timestamp = 3;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Number of seconds elapsed since the creation of the nemesis block
       * </pre>
       *
       * <code>optional uint32 timestamp = 3;</code>
       */
      public int getTimestamp() {
        return timestamp_;
      }
      /**
       * <pre>
       * Number of seconds elapsed since the creation of the nemesis block
       * </pre>
       *
       * <code>optional uint32 timestamp = 3;</code>
       */
      public Builder setTimestamp(int value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of seconds elapsed since the creation of the nemesis block
       * </pre>
       *
       * <code>optional uint32 timestamp = 3;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0;
        onChanged();
        return this;
      }

      private long fee_ ;
      /**
       * <pre>
       * Fee for the transaction
       * </pre>
       *
       * <code>optional uint64 fee = 4;</code>
       */
      public boolean hasFee() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Fee for the transaction
       * </pre>
       *
       * <code>optional uint64 fee = 4;</code>
       */
      public long getFee() {
        return fee_;
      }
      /**
       * <pre>
       * Fee for the transaction
       * </pre>
       *
       * <code>optional uint64 fee = 4;</code>
       */
      public Builder setFee(long value) {
        bitField0_ |= 0x00000008;
        fee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fee for the transaction
       * </pre>
       *
       * <code>optional uint64 fee = 4;</code>
       */
      public Builder clearFee() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fee_ = 0L;
        onChanged();
        return this;
      }

      private int deadline_ ;
      /**
       * <pre>
       * Deadline of the transaction
       * </pre>
       *
       * <code>optional uint32 deadline = 5;</code>
       */
      public boolean hasDeadline() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Deadline of the transaction
       * </pre>
       *
       * <code>optional uint32 deadline = 5;</code>
       */
      public int getDeadline() {
        return deadline_;
      }
      /**
       * <pre>
       * Deadline of the transaction
       * </pre>
       *
       * <code>optional uint32 deadline = 5;</code>
       */
      public Builder setDeadline(int value) {
        bitField0_ |= 0x00000010;
        deadline_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Deadline of the transaction
       * </pre>
       *
       * <code>optional uint32 deadline = 5;</code>
       */
      public Builder clearDeadline() {
        bitField0_ = (bitField0_ & ~0x00000010);
        deadline_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signer_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Public key of the account (for multisig transactions)
       * </pre>
       *
       * <code>optional bytes signer = 6;</code>
       */
      public boolean hasSigner() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Public key of the account (for multisig transactions)
       * </pre>
       *
       * <code>optional bytes signer = 6;</code>
       */
      public com.google.protobuf.ByteString getSigner() {
        return signer_;
      }
      /**
       * <pre>
       * Public key of the account (for multisig transactions)
       * </pre>
       *
       * <code>optional bytes signer = 6;</code>
       */
      public Builder setSigner(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        signer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Public key of the account (for multisig transactions)
       * </pre>
       *
       * <code>optional bytes signer = 6;</code>
       */
      public Builder clearSigner() {
        bitField0_ = (bitField0_ & ~0x00000020);
        signer_ = getDefaultInstance().getSigner();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NEMTransactionCommon)
    }

    // @@protoc_insertion_point(class_scope:NEMTransactionCommon)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NEMTransactionCommon>
        PARSER = new com.google.protobuf.AbstractParser<NEMTransactionCommon>() {
      public NEMTransactionCommon parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NEMTransactionCommon(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NEMTransactionCommon> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NEMTransactionCommon> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransactionCommon getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NEMTransferOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NEMTransfer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Address of the recipient
     * </pre>
     *
     * <code>optional string recipient = 1;</code>
     */
    boolean hasRecipient();
    /**
     * <pre>
     * Address of the recipient
     * </pre>
     *
     * <code>optional string recipient = 1;</code>
     */
    java.lang.String getRecipient();
    /**
     * <pre>
     * Address of the recipient
     * </pre>
     *
     * <code>optional string recipient = 1;</code>
     */
    com.google.protobuf.ByteString
        getRecipientBytes();

    /**
     * <pre>
     * Amount of micro NEM that is transferred
     * </pre>
     *
     * <code>optional uint64 amount = 2;</code>
     */
    boolean hasAmount();
    /**
     * <pre>
     * Amount of micro NEM that is transferred
     * </pre>
     *
     * <code>optional uint64 amount = 2;</code>
     */
    long getAmount();

    /**
     * <pre>
     * Actual message data (unencrypted)
     * </pre>
     *
     * <code>optional bytes payload = 3;</code>
     */
    boolean hasPayload();
    /**
     * <pre>
     * Actual message data (unencrypted)
     * </pre>
     *
     * <code>optional bytes payload = 3;</code>
     */
    com.google.protobuf.ByteString getPayload();

    /**
     * <pre>
     * Public key of the recipient (for encrypted payloads)
     * </pre>
     *
     * <code>optional bytes public_key = 4;</code>
     */
    boolean hasPublicKey();
    /**
     * <pre>
     * Public key of the recipient (for encrypted payloads)
     * </pre>
     *
     * <code>optional bytes public_key = 4;</code>
     */
    com.google.protobuf.ByteString getPublicKey();

    /**
     * <pre>
     * Attached mosaics
     * </pre>
     *
     * <code>repeated .NEMMosaic mosaics = 5;</code>
     */
    java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic> 
        getMosaicsList();
    /**
     * <pre>
     * Attached mosaics
     * </pre>
     *
     * <code>repeated .NEMMosaic mosaics = 5;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic getMosaics(int index);
    /**
     * <pre>
     * Attached mosaics
     * </pre>
     *
     * <code>repeated .NEMMosaic mosaics = 5;</code>
     */
    int getMosaicsCount();
    /**
     * <pre>
     * Attached mosaics
     * </pre>
     *
     * <code>repeated .NEMMosaic mosaics = 5;</code>
     */
    java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicOrBuilder> 
        getMosaicsOrBuilderList();
    /**
     * <pre>
     * Attached mosaics
     * </pre>
     *
     * <code>repeated .NEMMosaic mosaics = 5;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicOrBuilder getMosaicsOrBuilder(
        int index);
  }
  /**
   * <pre>
   **
   * Structure representing the transfer transaction part for NEM transactions
   * &#64;used_in NEMSignTx
   * </pre>
   *
   * Protobuf type {@code NEMTransfer}
   */
  public  static final class NEMTransfer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NEMTransfer)
      NEMTransferOrBuilder {
    // Use NEMTransfer.newBuilder() to construct.
    private NEMTransfer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NEMTransfer() {
      recipient_ = "";
      amount_ = 0L;
      payload_ = com.google.protobuf.ByteString.EMPTY;
      publicKey_ = com.google.protobuf.ByteString.EMPTY;
      mosaics_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NEMTransfer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              recipient_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              amount_ = input.readUInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              payload_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              publicKey_ = input.readBytes();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                mosaics_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic>();
                mutable_bitField0_ |= 0x00000010;
              }
              mosaics_.add(
                  input.readMessage(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          mosaics_ = java.util.Collections.unmodifiableList(mosaics_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMTransfer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMTransfer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer.Builder.class);
    }

    private int bitField0_;
    public static final int RECIPIENT_FIELD_NUMBER = 1;
    private volatile java.lang.Object recipient_;
    /**
     * <pre>
     * Address of the recipient
     * </pre>
     *
     * <code>optional string recipient = 1;</code>
     */
    public boolean hasRecipient() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Address of the recipient
     * </pre>
     *
     * <code>optional string recipient = 1;</code>
     */
    public java.lang.String getRecipient() {
      java.lang.Object ref = recipient_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          recipient_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Address of the recipient
     * </pre>
     *
     * <code>optional string recipient = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRecipientBytes() {
      java.lang.Object ref = recipient_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        recipient_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AMOUNT_FIELD_NUMBER = 2;
    private long amount_;
    /**
     * <pre>
     * Amount of micro NEM that is transferred
     * </pre>
     *
     * <code>optional uint64 amount = 2;</code>
     */
    public boolean hasAmount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Amount of micro NEM that is transferred
     * </pre>
     *
     * <code>optional uint64 amount = 2;</code>
     */
    public long getAmount() {
      return amount_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString payload_;
    /**
     * <pre>
     * Actual message data (unencrypted)
     * </pre>
     *
     * <code>optional bytes payload = 3;</code>
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Actual message data (unencrypted)
     * </pre>
     *
     * <code>optional bytes payload = 3;</code>
     */
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    public static final int PUBLIC_KEY_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString publicKey_;
    /**
     * <pre>
     * Public key of the recipient (for encrypted payloads)
     * </pre>
     *
     * <code>optional bytes public_key = 4;</code>
     */
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Public key of the recipient (for encrypted payloads)
     * </pre>
     *
     * <code>optional bytes public_key = 4;</code>
     */
    public com.google.protobuf.ByteString getPublicKey() {
      return publicKey_;
    }

    public static final int MOSAICS_FIELD_NUMBER = 5;
    private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic> mosaics_;
    /**
     * <pre>
     * Attached mosaics
     * </pre>
     *
     * <code>repeated .NEMMosaic mosaics = 5;</code>
     */
    public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic> getMosaicsList() {
      return mosaics_;
    }
    /**
     * <pre>
     * Attached mosaics
     * </pre>
     *
     * <code>repeated .NEMMosaic mosaics = 5;</code>
     */
    public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicOrBuilder> 
        getMosaicsOrBuilderList() {
      return mosaics_;
    }
    /**
     * <pre>
     * Attached mosaics
     * </pre>
     *
     * <code>repeated .NEMMosaic mosaics = 5;</code>
     */
    public int getMosaicsCount() {
      return mosaics_.size();
    }
    /**
     * <pre>
     * Attached mosaics
     * </pre>
     *
     * <code>repeated .NEMMosaic mosaics = 5;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic getMosaics(int index) {
      return mosaics_.get(index);
    }
    /**
     * <pre>
     * Attached mosaics
     * </pre>
     *
     * <code>repeated .NEMMosaic mosaics = 5;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicOrBuilder getMosaicsOrBuilder(
        int index) {
      return mosaics_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, recipient_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, amount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, payload_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, publicKey_);
      }
      for (int i = 0; i < mosaics_.size(); i++) {
        output.writeMessage(5, mosaics_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, recipient_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, amount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, payload_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, publicKey_);
      }
      for (int i = 0; i < mosaics_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, mosaics_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer) obj;

      boolean result = true;
      result = result && (hasRecipient() == other.hasRecipient());
      if (hasRecipient()) {
        result = result && getRecipient()
            .equals(other.getRecipient());
      }
      result = result && (hasAmount() == other.hasAmount());
      if (hasAmount()) {
        result = result && (getAmount()
            == other.getAmount());
      }
      result = result && (hasPayload() == other.hasPayload());
      if (hasPayload()) {
        result = result && getPayload()
            .equals(other.getPayload());
      }
      result = result && (hasPublicKey() == other.hasPublicKey());
      if (hasPublicKey()) {
        result = result && getPublicKey()
            .equals(other.getPublicKey());
      }
      result = result && getMosaicsList()
          .equals(other.getMosaicsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasRecipient()) {
        hash = (37 * hash) + RECIPIENT_FIELD_NUMBER;
        hash = (53 * hash) + getRecipient().hashCode();
      }
      if (hasAmount()) {
        hash = (37 * hash) + AMOUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAmount());
      }
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
      }
      if (hasPublicKey()) {
        hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKey().hashCode();
      }
      if (getMosaicsCount() > 0) {
        hash = (37 * hash) + MOSAICS_FIELD_NUMBER;
        hash = (53 * hash) + getMosaicsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing the transfer transaction part for NEM transactions
     * &#64;used_in NEMSignTx
     * </pre>
     *
     * Protobuf type {@code NEMTransfer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NEMTransfer)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransferOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMTransfer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMTransfer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMosaicsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        recipient_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        amount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        payload_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        publicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (mosaicsBuilder_ == null) {
          mosaics_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          mosaicsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMTransfer_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.recipient_ = recipient_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.amount_ = amount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.payload_ = payload_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.publicKey_ = publicKey_;
        if (mosaicsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            mosaics_ = java.util.Collections.unmodifiableList(mosaics_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.mosaics_ = mosaics_;
        } else {
          result.mosaics_ = mosaicsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer.getDefaultInstance()) return this;
        if (other.hasRecipient()) {
          bitField0_ |= 0x00000001;
          recipient_ = other.recipient_;
          onChanged();
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        if (mosaicsBuilder_ == null) {
          if (!other.mosaics_.isEmpty()) {
            if (mosaics_.isEmpty()) {
              mosaics_ = other.mosaics_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureMosaicsIsMutable();
              mosaics_.addAll(other.mosaics_);
            }
            onChanged();
          }
        } else {
          if (!other.mosaics_.isEmpty()) {
            if (mosaicsBuilder_.isEmpty()) {
              mosaicsBuilder_.dispose();
              mosaicsBuilder_ = null;
              mosaics_ = other.mosaics_;
              bitField0_ = (bitField0_ & ~0x00000010);
              mosaicsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMosaicsFieldBuilder() : null;
            } else {
              mosaicsBuilder_.addAllMessages(other.mosaics_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object recipient_ = "";
      /**
       * <pre>
       * Address of the recipient
       * </pre>
       *
       * <code>optional string recipient = 1;</code>
       */
      public boolean hasRecipient() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Address of the recipient
       * </pre>
       *
       * <code>optional string recipient = 1;</code>
       */
      public java.lang.String getRecipient() {
        java.lang.Object ref = recipient_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            recipient_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Address of the recipient
       * </pre>
       *
       * <code>optional string recipient = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRecipientBytes() {
        java.lang.Object ref = recipient_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          recipient_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Address of the recipient
       * </pre>
       *
       * <code>optional string recipient = 1;</code>
       */
      public Builder setRecipient(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        recipient_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Address of the recipient
       * </pre>
       *
       * <code>optional string recipient = 1;</code>
       */
      public Builder clearRecipient() {
        bitField0_ = (bitField0_ & ~0x00000001);
        recipient_ = getDefaultInstance().getRecipient();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Address of the recipient
       * </pre>
       *
       * <code>optional string recipient = 1;</code>
       */
      public Builder setRecipientBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        recipient_ = value;
        onChanged();
        return this;
      }

      private long amount_ ;
      /**
       * <pre>
       * Amount of micro NEM that is transferred
       * </pre>
       *
       * <code>optional uint64 amount = 2;</code>
       */
      public boolean hasAmount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Amount of micro NEM that is transferred
       * </pre>
       *
       * <code>optional uint64 amount = 2;</code>
       */
      public long getAmount() {
        return amount_;
      }
      /**
       * <pre>
       * Amount of micro NEM that is transferred
       * </pre>
       *
       * <code>optional uint64 amount = 2;</code>
       */
      public Builder setAmount(long value) {
        bitField0_ |= 0x00000002;
        amount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Amount of micro NEM that is transferred
       * </pre>
       *
       * <code>optional uint64 amount = 2;</code>
       */
      public Builder clearAmount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        amount_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Actual message data (unencrypted)
       * </pre>
       *
       * <code>optional bytes payload = 3;</code>
       */
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Actual message data (unencrypted)
       * </pre>
       *
       * <code>optional bytes payload = 3;</code>
       */
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <pre>
       * Actual message data (unencrypted)
       * </pre>
       *
       * <code>optional bytes payload = 3;</code>
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Actual message data (unencrypted)
       * </pre>
       *
       * <code>optional bytes payload = 3;</code>
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000004);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Public key of the recipient (for encrypted payloads)
       * </pre>
       *
       * <code>optional bytes public_key = 4;</code>
       */
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Public key of the recipient (for encrypted payloads)
       * </pre>
       *
       * <code>optional bytes public_key = 4;</code>
       */
      public com.google.protobuf.ByteString getPublicKey() {
        return publicKey_;
      }
      /**
       * <pre>
       * Public key of the recipient (for encrypted payloads)
       * </pre>
       *
       * <code>optional bytes public_key = 4;</code>
       */
      public Builder setPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        publicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Public key of the recipient (for encrypted payloads)
       * </pre>
       *
       * <code>optional bytes public_key = 4;</code>
       */
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000008);
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }

      private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic> mosaics_ =
        java.util.Collections.emptyList();
      private void ensureMosaicsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          mosaics_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic>(mosaics_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicOrBuilder> mosaicsBuilder_;

      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic> getMosaicsList() {
        if (mosaicsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mosaics_);
        } else {
          return mosaicsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public int getMosaicsCount() {
        if (mosaicsBuilder_ == null) {
          return mosaics_.size();
        } else {
          return mosaicsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic getMosaics(int index) {
        if (mosaicsBuilder_ == null) {
          return mosaics_.get(index);
        } else {
          return mosaicsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public Builder setMosaics(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic value) {
        if (mosaicsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMosaicsIsMutable();
          mosaics_.set(index, value);
          onChanged();
        } else {
          mosaicsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public Builder setMosaics(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder builderForValue) {
        if (mosaicsBuilder_ == null) {
          ensureMosaicsIsMutable();
          mosaics_.set(index, builderForValue.build());
          onChanged();
        } else {
          mosaicsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public Builder addMosaics(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic value) {
        if (mosaicsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMosaicsIsMutable();
          mosaics_.add(value);
          onChanged();
        } else {
          mosaicsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public Builder addMosaics(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic value) {
        if (mosaicsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMosaicsIsMutable();
          mosaics_.add(index, value);
          onChanged();
        } else {
          mosaicsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public Builder addMosaics(
          com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder builderForValue) {
        if (mosaicsBuilder_ == null) {
          ensureMosaicsIsMutable();
          mosaics_.add(builderForValue.build());
          onChanged();
        } else {
          mosaicsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public Builder addMosaics(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder builderForValue) {
        if (mosaicsBuilder_ == null) {
          ensureMosaicsIsMutable();
          mosaics_.add(index, builderForValue.build());
          onChanged();
        } else {
          mosaicsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public Builder addAllMosaics(
          java.lang.Iterable<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic> values) {
        if (mosaicsBuilder_ == null) {
          ensureMosaicsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mosaics_);
          onChanged();
        } else {
          mosaicsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public Builder clearMosaics() {
        if (mosaicsBuilder_ == null) {
          mosaics_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          mosaicsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public Builder removeMosaics(int index) {
        if (mosaicsBuilder_ == null) {
          ensureMosaicsIsMutable();
          mosaics_.remove(index);
          onChanged();
        } else {
          mosaicsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder getMosaicsBuilder(
          int index) {
        return getMosaicsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicOrBuilder getMosaicsOrBuilder(
          int index) {
        if (mosaicsBuilder_ == null) {
          return mosaics_.get(index);  } else {
          return mosaicsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicOrBuilder> 
           getMosaicsOrBuilderList() {
        if (mosaicsBuilder_ != null) {
          return mosaicsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mosaics_);
        }
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder addMosaicsBuilder() {
        return getMosaicsFieldBuilder().addBuilder(
            com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.getDefaultInstance());
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder addMosaicsBuilder(
          int index) {
        return getMosaicsFieldBuilder().addBuilder(
            index, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.getDefaultInstance());
      }
      /**
       * <pre>
       * Attached mosaics
       * </pre>
       *
       * <code>repeated .NEMMosaic mosaics = 5;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder> 
           getMosaicsBuilderList() {
        return getMosaicsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicOrBuilder> 
          getMosaicsFieldBuilder() {
        if (mosaicsBuilder_ == null) {
          mosaicsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicOrBuilder>(
                  mosaics_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          mosaics_ = null;
        }
        return mosaicsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NEMTransfer)
    }

    // @@protoc_insertion_point(class_scope:NEMTransfer)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NEMTransfer>
        PARSER = new com.google.protobuf.AbstractParser<NEMTransfer>() {
      public NEMTransfer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NEMTransfer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NEMTransfer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NEMTransfer> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMTransfer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NEMMosaicOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NEMMosaic)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    boolean hasNamespace();
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    java.lang.String getNamespace();
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    boolean hasMosaic();
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    java.lang.String getMosaic();
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    com.google.protobuf.ByteString
        getMosaicBytes();

    /**
     * <pre>
     * Mosaic quantity, always given in smallest units
     * </pre>
     *
     * <code>optional uint64 quantity = 3;</code>
     */
    boolean hasQuantity();
    /**
     * <pre>
     * Mosaic quantity, always given in smallest units
     * </pre>
     *
     * <code>optional uint64 quantity = 3;</code>
     */
    long getQuantity();
  }
  /**
   * <pre>
   **
   * Structure representing the mosaic attachment for NEM transfer transactions
   * &#64;used_in NEMTransfer
   * </pre>
   *
   * Protobuf type {@code NEMMosaic}
   */
  public  static final class NEMMosaic extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NEMMosaic)
      NEMMosaicOrBuilder {
    // Use NEMMosaic.newBuilder() to construct.
    private NEMMosaic(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NEMMosaic() {
      namespace_ = "";
      mosaic_ = "";
      quantity_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NEMMosaic(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              namespace_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              mosaic_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              quantity_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaic_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaic_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder.class);
    }

    private int bitField0_;
    public static final int NAMESPACE_FIELD_NUMBER = 1;
    private volatile java.lang.Object namespace_;
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    public boolean hasNamespace() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          namespace_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MOSAIC_FIELD_NUMBER = 2;
    private volatile java.lang.Object mosaic_;
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    public boolean hasMosaic() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    public java.lang.String getMosaic() {
      java.lang.Object ref = mosaic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mosaic_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMosaicBytes() {
      java.lang.Object ref = mosaic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mosaic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUANTITY_FIELD_NUMBER = 3;
    private long quantity_;
    /**
     * <pre>
     * Mosaic quantity, always given in smallest units
     * </pre>
     *
     * <code>optional uint64 quantity = 3;</code>
     */
    public boolean hasQuantity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Mosaic quantity, always given in smallest units
     * </pre>
     *
     * <code>optional uint64 quantity = 3;</code>
     */
    public long getQuantity() {
      return quantity_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, namespace_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, mosaic_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, quantity_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, namespace_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, mosaic_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, quantity_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic) obj;

      boolean result = true;
      result = result && (hasNamespace() == other.hasNamespace());
      if (hasNamespace()) {
        result = result && getNamespace()
            .equals(other.getNamespace());
      }
      result = result && (hasMosaic() == other.hasMosaic());
      if (hasMosaic()) {
        result = result && getMosaic()
            .equals(other.getMosaic());
      }
      result = result && (hasQuantity() == other.hasQuantity());
      if (hasQuantity()) {
        result = result && (getQuantity()
            == other.getQuantity());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasNamespace()) {
        hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
        hash = (53 * hash) + getNamespace().hashCode();
      }
      if (hasMosaic()) {
        hash = (37 * hash) + MOSAIC_FIELD_NUMBER;
        hash = (53 * hash) + getMosaic().hashCode();
      }
      if (hasQuantity()) {
        hash = (37 * hash) + QUANTITY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getQuantity());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing the mosaic attachment for NEM transfer transactions
     * &#64;used_in NEMTransfer
     * </pre>
     *
     * Protobuf type {@code NEMMosaic}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NEMMosaic)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaic_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaic_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        namespace_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        mosaic_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        quantity_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaic_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.namespace_ = namespace_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mosaic_ = mosaic_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.quantity_ = quantity_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic.getDefaultInstance()) return this;
        if (other.hasNamespace()) {
          bitField0_ |= 0x00000001;
          namespace_ = other.namespace_;
          onChanged();
        }
        if (other.hasMosaic()) {
          bitField0_ |= 0x00000002;
          mosaic_ = other.mosaic_;
          onChanged();
        }
        if (other.hasQuantity()) {
          setQuantity(other.getQuantity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object namespace_ = "";
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public boolean hasNamespace() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            namespace_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public Builder clearNamespace() {
        bitField0_ = (bitField0_ & ~0x00000001);
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namespace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mosaic_ = "";
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public boolean hasMosaic() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public java.lang.String getMosaic() {
        java.lang.Object ref = mosaic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mosaic_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMosaicBytes() {
        java.lang.Object ref = mosaic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mosaic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public Builder setMosaic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mosaic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public Builder clearMosaic() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mosaic_ = getDefaultInstance().getMosaic();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public Builder setMosaicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mosaic_ = value;
        onChanged();
        return this;
      }

      private long quantity_ ;
      /**
       * <pre>
       * Mosaic quantity, always given in smallest units
       * </pre>
       *
       * <code>optional uint64 quantity = 3;</code>
       */
      public boolean hasQuantity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Mosaic quantity, always given in smallest units
       * </pre>
       *
       * <code>optional uint64 quantity = 3;</code>
       */
      public long getQuantity() {
        return quantity_;
      }
      /**
       * <pre>
       * Mosaic quantity, always given in smallest units
       * </pre>
       *
       * <code>optional uint64 quantity = 3;</code>
       */
      public Builder setQuantity(long value) {
        bitField0_ |= 0x00000004;
        quantity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mosaic quantity, always given in smallest units
       * </pre>
       *
       * <code>optional uint64 quantity = 3;</code>
       */
      public Builder clearQuantity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        quantity_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NEMMosaic)
    }

    // @@protoc_insertion_point(class_scope:NEMMosaic)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NEMMosaic>
        PARSER = new com.google.protobuf.AbstractParser<NEMMosaic>() {
      public NEMMosaic parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NEMMosaic(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NEMMosaic> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NEMMosaic> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaic getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NEMProvisionNamespaceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NEMProvisionNamespace)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * New part concatenated to the parent
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    boolean hasNamespace();
    /**
     * <pre>
     * New part concatenated to the parent
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    java.lang.String getNamespace();
    /**
     * <pre>
     * New part concatenated to the parent
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <pre>
     * Parent namespace (for child namespaces)
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     */
    boolean hasParent();
    /**
     * <pre>
     * Parent namespace (for child namespaces)
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     */
    java.lang.String getParent();
    /**
     * <pre>
     * Parent namespace (for child namespaces)
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     */
    com.google.protobuf.ByteString
        getParentBytes();

    /**
     * <pre>
     * Rental fee sink address
     * </pre>
     *
     * <code>optional string sink = 3;</code>
     */
    boolean hasSink();
    /**
     * <pre>
     * Rental fee sink address
     * </pre>
     *
     * <code>optional string sink = 3;</code>
     */
    java.lang.String getSink();
    /**
     * <pre>
     * Rental fee sink address
     * </pre>
     *
     * <code>optional string sink = 3;</code>
     */
    com.google.protobuf.ByteString
        getSinkBytes();

    /**
     * <pre>
     * Rental fee
     * </pre>
     *
     * <code>optional uint64 fee = 4;</code>
     */
    boolean hasFee();
    /**
     * <pre>
     * Rental fee
     * </pre>
     *
     * <code>optional uint64 fee = 4;</code>
     */
    long getFee();
  }
  /**
   * <pre>
   **
   * Structure representing the provision namespace part for NEM transactions
   * &#64;used_in NEMSignTx
   * </pre>
   *
   * Protobuf type {@code NEMProvisionNamespace}
   */
  public  static final class NEMProvisionNamespace extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NEMProvisionNamespace)
      NEMProvisionNamespaceOrBuilder {
    // Use NEMProvisionNamespace.newBuilder() to construct.
    private NEMProvisionNamespace(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NEMProvisionNamespace() {
      namespace_ = "";
      parent_ = "";
      sink_ = "";
      fee_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NEMProvisionNamespace(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              namespace_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              parent_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              sink_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              fee_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMProvisionNamespace_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMProvisionNamespace_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace.Builder.class);
    }

    private int bitField0_;
    public static final int NAMESPACE_FIELD_NUMBER = 1;
    private volatile java.lang.Object namespace_;
    /**
     * <pre>
     * New part concatenated to the parent
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    public boolean hasNamespace() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * New part concatenated to the parent
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          namespace_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * New part concatenated to the parent
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARENT_FIELD_NUMBER = 2;
    private volatile java.lang.Object parent_;
    /**
     * <pre>
     * Parent namespace (for child namespaces)
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     */
    public boolean hasParent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Parent namespace (for child namespaces)
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     */
    public java.lang.String getParent() {
      java.lang.Object ref = parent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          parent_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Parent namespace (for child namespaces)
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     */
    public com.google.protobuf.ByteString
        getParentBytes() {
      java.lang.Object ref = parent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SINK_FIELD_NUMBER = 3;
    private volatile java.lang.Object sink_;
    /**
     * <pre>
     * Rental fee sink address
     * </pre>
     *
     * <code>optional string sink = 3;</code>
     */
    public boolean hasSink() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Rental fee sink address
     * </pre>
     *
     * <code>optional string sink = 3;</code>
     */
    public java.lang.String getSink() {
      java.lang.Object ref = sink_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sink_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Rental fee sink address
     * </pre>
     *
     * <code>optional string sink = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSinkBytes() {
      java.lang.Object ref = sink_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sink_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FEE_FIELD_NUMBER = 4;
    private long fee_;
    /**
     * <pre>
     * Rental fee
     * </pre>
     *
     * <code>optional uint64 fee = 4;</code>
     */
    public boolean hasFee() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Rental fee
     * </pre>
     *
     * <code>optional uint64 fee = 4;</code>
     */
    public long getFee() {
      return fee_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, namespace_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, parent_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sink_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, fee_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, namespace_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, parent_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sink_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, fee_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace) obj;

      boolean result = true;
      result = result && (hasNamespace() == other.hasNamespace());
      if (hasNamespace()) {
        result = result && getNamespace()
            .equals(other.getNamespace());
      }
      result = result && (hasParent() == other.hasParent());
      if (hasParent()) {
        result = result && getParent()
            .equals(other.getParent());
      }
      result = result && (hasSink() == other.hasSink());
      if (hasSink()) {
        result = result && getSink()
            .equals(other.getSink());
      }
      result = result && (hasFee() == other.hasFee());
      if (hasFee()) {
        result = result && (getFee()
            == other.getFee());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasNamespace()) {
        hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
        hash = (53 * hash) + getNamespace().hashCode();
      }
      if (hasParent()) {
        hash = (37 * hash) + PARENT_FIELD_NUMBER;
        hash = (53 * hash) + getParent().hashCode();
      }
      if (hasSink()) {
        hash = (37 * hash) + SINK_FIELD_NUMBER;
        hash = (53 * hash) + getSink().hashCode();
      }
      if (hasFee()) {
        hash = (37 * hash) + FEE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFee());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing the provision namespace part for NEM transactions
     * &#64;used_in NEMSignTx
     * </pre>
     *
     * Protobuf type {@code NEMProvisionNamespace}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NEMProvisionNamespace)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespaceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMProvisionNamespace_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMProvisionNamespace_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        namespace_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        parent_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        sink_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        fee_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMProvisionNamespace_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.namespace_ = namespace_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.parent_ = parent_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sink_ = sink_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fee_ = fee_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace.getDefaultInstance()) return this;
        if (other.hasNamespace()) {
          bitField0_ |= 0x00000001;
          namespace_ = other.namespace_;
          onChanged();
        }
        if (other.hasParent()) {
          bitField0_ |= 0x00000002;
          parent_ = other.parent_;
          onChanged();
        }
        if (other.hasSink()) {
          bitField0_ |= 0x00000004;
          sink_ = other.sink_;
          onChanged();
        }
        if (other.hasFee()) {
          setFee(other.getFee());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object namespace_ = "";
      /**
       * <pre>
       * New part concatenated to the parent
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public boolean hasNamespace() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * New part concatenated to the parent
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            namespace_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * New part concatenated to the parent
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * New part concatenated to the parent
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * New part concatenated to the parent
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public Builder clearNamespace() {
        bitField0_ = (bitField0_ & ~0x00000001);
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * New part concatenated to the parent
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namespace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object parent_ = "";
      /**
       * <pre>
       * Parent namespace (for child namespaces)
       * </pre>
       *
       * <code>optional string parent = 2;</code>
       */
      public boolean hasParent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Parent namespace (for child namespaces)
       * </pre>
       *
       * <code>optional string parent = 2;</code>
       */
      public java.lang.String getParent() {
        java.lang.Object ref = parent_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            parent_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Parent namespace (for child namespaces)
       * </pre>
       *
       * <code>optional string parent = 2;</code>
       */
      public com.google.protobuf.ByteString
          getParentBytes() {
        java.lang.Object ref = parent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Parent namespace (for child namespaces)
       * </pre>
       *
       * <code>optional string parent = 2;</code>
       */
      public Builder setParent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        parent_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Parent namespace (for child namespaces)
       * </pre>
       *
       * <code>optional string parent = 2;</code>
       */
      public Builder clearParent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        parent_ = getDefaultInstance().getParent();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Parent namespace (for child namespaces)
       * </pre>
       *
       * <code>optional string parent = 2;</code>
       */
      public Builder setParentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        parent_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sink_ = "";
      /**
       * <pre>
       * Rental fee sink address
       * </pre>
       *
       * <code>optional string sink = 3;</code>
       */
      public boolean hasSink() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Rental fee sink address
       * </pre>
       *
       * <code>optional string sink = 3;</code>
       */
      public java.lang.String getSink() {
        java.lang.Object ref = sink_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sink_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Rental fee sink address
       * </pre>
       *
       * <code>optional string sink = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSinkBytes() {
        java.lang.Object ref = sink_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sink_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Rental fee sink address
       * </pre>
       *
       * <code>optional string sink = 3;</code>
       */
      public Builder setSink(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sink_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Rental fee sink address
       * </pre>
       *
       * <code>optional string sink = 3;</code>
       */
      public Builder clearSink() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sink_ = getDefaultInstance().getSink();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Rental fee sink address
       * </pre>
       *
       * <code>optional string sink = 3;</code>
       */
      public Builder setSinkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sink_ = value;
        onChanged();
        return this;
      }

      private long fee_ ;
      /**
       * <pre>
       * Rental fee
       * </pre>
       *
       * <code>optional uint64 fee = 4;</code>
       */
      public boolean hasFee() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Rental fee
       * </pre>
       *
       * <code>optional uint64 fee = 4;</code>
       */
      public long getFee() {
        return fee_;
      }
      /**
       * <pre>
       * Rental fee
       * </pre>
       *
       * <code>optional uint64 fee = 4;</code>
       */
      public Builder setFee(long value) {
        bitField0_ |= 0x00000008;
        fee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Rental fee
       * </pre>
       *
       * <code>optional uint64 fee = 4;</code>
       */
      public Builder clearFee() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fee_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NEMProvisionNamespace)
    }

    // @@protoc_insertion_point(class_scope:NEMProvisionNamespace)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NEMProvisionNamespace>
        PARSER = new com.google.protobuf.AbstractParser<NEMProvisionNamespace>() {
      public NEMProvisionNamespace parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NEMProvisionNamespace(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NEMProvisionNamespace> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NEMProvisionNamespace> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMProvisionNamespace getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NEMMosaicCreationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NEMMosaicCreation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Mosaic definition
     * </pre>
     *
     * <code>optional .NEMMosaicDefinition definition = 1;</code>
     */
    boolean hasDefinition();
    /**
     * <pre>
     * Mosaic definition
     * </pre>
     *
     * <code>optional .NEMMosaicDefinition definition = 1;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition getDefinition();
    /**
     * <pre>
     * Mosaic definition
     * </pre>
     *
     * <code>optional .NEMMosaicDefinition definition = 1;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinitionOrBuilder getDefinitionOrBuilder();

    /**
     * <pre>
     * Creation fee sink address
     * </pre>
     *
     * <code>optional string sink = 2;</code>
     */
    boolean hasSink();
    /**
     * <pre>
     * Creation fee sink address
     * </pre>
     *
     * <code>optional string sink = 2;</code>
     */
    java.lang.String getSink();
    /**
     * <pre>
     * Creation fee sink address
     * </pre>
     *
     * <code>optional string sink = 2;</code>
     */
    com.google.protobuf.ByteString
        getSinkBytes();

    /**
     * <pre>
     * Creation fee
     * </pre>
     *
     * <code>optional uint64 fee = 3;</code>
     */
    boolean hasFee();
    /**
     * <pre>
     * Creation fee
     * </pre>
     *
     * <code>optional uint64 fee = 3;</code>
     */
    long getFee();
  }
  /**
   * <pre>
   **
   * Structure representing the mosaic definition creation part for NEM transactions
   * &#64;used_in NEMSignTx
   * </pre>
   *
   * Protobuf type {@code NEMMosaicCreation}
   */
  public  static final class NEMMosaicCreation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NEMMosaicCreation)
      NEMMosaicCreationOrBuilder {
    // Use NEMMosaicCreation.newBuilder() to construct.
    private NEMMosaicCreation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NEMMosaicCreation() {
      sink_ = "";
      fee_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NEMMosaicCreation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = definition_.toBuilder();
              }
              definition_ = input.readMessage(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(definition_);
                definition_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              sink_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fee_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicCreation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicCreation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation.Builder.class);
    }

    private int bitField0_;
    public static final int DEFINITION_FIELD_NUMBER = 1;
    private com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition definition_;
    /**
     * <pre>
     * Mosaic definition
     * </pre>
     *
     * <code>optional .NEMMosaicDefinition definition = 1;</code>
     */
    public boolean hasDefinition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Mosaic definition
     * </pre>
     *
     * <code>optional .NEMMosaicDefinition definition = 1;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition getDefinition() {
      return definition_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.getDefaultInstance() : definition_;
    }
    /**
     * <pre>
     * Mosaic definition
     * </pre>
     *
     * <code>optional .NEMMosaicDefinition definition = 1;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinitionOrBuilder getDefinitionOrBuilder() {
      return definition_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.getDefaultInstance() : definition_;
    }

    public static final int SINK_FIELD_NUMBER = 2;
    private volatile java.lang.Object sink_;
    /**
     * <pre>
     * Creation fee sink address
     * </pre>
     *
     * <code>optional string sink = 2;</code>
     */
    public boolean hasSink() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Creation fee sink address
     * </pre>
     *
     * <code>optional string sink = 2;</code>
     */
    public java.lang.String getSink() {
      java.lang.Object ref = sink_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sink_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Creation fee sink address
     * </pre>
     *
     * <code>optional string sink = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSinkBytes() {
      java.lang.Object ref = sink_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sink_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FEE_FIELD_NUMBER = 3;
    private long fee_;
    /**
     * <pre>
     * Creation fee
     * </pre>
     *
     * <code>optional uint64 fee = 3;</code>
     */
    public boolean hasFee() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Creation fee
     * </pre>
     *
     * <code>optional uint64 fee = 3;</code>
     */
    public long getFee() {
      return fee_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getDefinition());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sink_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, fee_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDefinition());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sink_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, fee_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation) obj;

      boolean result = true;
      result = result && (hasDefinition() == other.hasDefinition());
      if (hasDefinition()) {
        result = result && getDefinition()
            .equals(other.getDefinition());
      }
      result = result && (hasSink() == other.hasSink());
      if (hasSink()) {
        result = result && getSink()
            .equals(other.getSink());
      }
      result = result && (hasFee() == other.hasFee());
      if (hasFee()) {
        result = result && (getFee()
            == other.getFee());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasDefinition()) {
        hash = (37 * hash) + DEFINITION_FIELD_NUMBER;
        hash = (53 * hash) + getDefinition().hashCode();
      }
      if (hasSink()) {
        hash = (37 * hash) + SINK_FIELD_NUMBER;
        hash = (53 * hash) + getSink().hashCode();
      }
      if (hasFee()) {
        hash = (37 * hash) + FEE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFee());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing the mosaic definition creation part for NEM transactions
     * &#64;used_in NEMSignTx
     * </pre>
     *
     * Protobuf type {@code NEMMosaicCreation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NEMMosaicCreation)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicCreation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicCreation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDefinitionFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (definitionBuilder_ == null) {
          definition_ = null;
        } else {
          definitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        sink_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        fee_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicCreation_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (definitionBuilder_ == null) {
          result.definition_ = definition_;
        } else {
          result.definition_ = definitionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sink_ = sink_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fee_ = fee_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation.getDefaultInstance()) return this;
        if (other.hasDefinition()) {
          mergeDefinition(other.getDefinition());
        }
        if (other.hasSink()) {
          bitField0_ |= 0x00000002;
          sink_ = other.sink_;
          onChanged();
        }
        if (other.hasFee()) {
          setFee(other.getFee());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition definition_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinitionOrBuilder> definitionBuilder_;
      /**
       * <pre>
       * Mosaic definition
       * </pre>
       *
       * <code>optional .NEMMosaicDefinition definition = 1;</code>
       */
      public boolean hasDefinition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Mosaic definition
       * </pre>
       *
       * <code>optional .NEMMosaicDefinition definition = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition getDefinition() {
        if (definitionBuilder_ == null) {
          return definition_ == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.getDefaultInstance() : definition_;
        } else {
          return definitionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Mosaic definition
       * </pre>
       *
       * <code>optional .NEMMosaicDefinition definition = 1;</code>
       */
      public Builder setDefinition(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition value) {
        if (definitionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          definition_ = value;
          onChanged();
        } else {
          definitionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Mosaic definition
       * </pre>
       *
       * <code>optional .NEMMosaicDefinition definition = 1;</code>
       */
      public Builder setDefinition(
          com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.Builder builderForValue) {
        if (definitionBuilder_ == null) {
          definition_ = builderForValue.build();
          onChanged();
        } else {
          definitionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Mosaic definition
       * </pre>
       *
       * <code>optional .NEMMosaicDefinition definition = 1;</code>
       */
      public Builder mergeDefinition(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition value) {
        if (definitionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              definition_ != null &&
              definition_ != com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.getDefaultInstance()) {
            definition_ =
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.newBuilder(definition_).mergeFrom(value).buildPartial();
          } else {
            definition_ = value;
          }
          onChanged();
        } else {
          definitionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Mosaic definition
       * </pre>
       *
       * <code>optional .NEMMosaicDefinition definition = 1;</code>
       */
      public Builder clearDefinition() {
        if (definitionBuilder_ == null) {
          definition_ = null;
          onChanged();
        } else {
          definitionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * Mosaic definition
       * </pre>
       *
       * <code>optional .NEMMosaicDefinition definition = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.Builder getDefinitionBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getDefinitionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Mosaic definition
       * </pre>
       *
       * <code>optional .NEMMosaicDefinition definition = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinitionOrBuilder getDefinitionOrBuilder() {
        if (definitionBuilder_ != null) {
          return definitionBuilder_.getMessageOrBuilder();
        } else {
          return definition_ == null ?
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.getDefaultInstance() : definition_;
        }
      }
      /**
       * <pre>
       * Mosaic definition
       * </pre>
       *
       * <code>optional .NEMMosaicDefinition definition = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinitionOrBuilder> 
          getDefinitionFieldBuilder() {
        if (definitionBuilder_ == null) {
          definitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinitionOrBuilder>(
                  getDefinition(),
                  getParentForChildren(),
                  isClean());
          definition_ = null;
        }
        return definitionBuilder_;
      }

      private java.lang.Object sink_ = "";
      /**
       * <pre>
       * Creation fee sink address
       * </pre>
       *
       * <code>optional string sink = 2;</code>
       */
      public boolean hasSink() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Creation fee sink address
       * </pre>
       *
       * <code>optional string sink = 2;</code>
       */
      public java.lang.String getSink() {
        java.lang.Object ref = sink_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sink_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Creation fee sink address
       * </pre>
       *
       * <code>optional string sink = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSinkBytes() {
        java.lang.Object ref = sink_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sink_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Creation fee sink address
       * </pre>
       *
       * <code>optional string sink = 2;</code>
       */
      public Builder setSink(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sink_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Creation fee sink address
       * </pre>
       *
       * <code>optional string sink = 2;</code>
       */
      public Builder clearSink() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sink_ = getDefaultInstance().getSink();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Creation fee sink address
       * </pre>
       *
       * <code>optional string sink = 2;</code>
       */
      public Builder setSinkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sink_ = value;
        onChanged();
        return this;
      }

      private long fee_ ;
      /**
       * <pre>
       * Creation fee
       * </pre>
       *
       * <code>optional uint64 fee = 3;</code>
       */
      public boolean hasFee() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Creation fee
       * </pre>
       *
       * <code>optional uint64 fee = 3;</code>
       */
      public long getFee() {
        return fee_;
      }
      /**
       * <pre>
       * Creation fee
       * </pre>
       *
       * <code>optional uint64 fee = 3;</code>
       */
      public Builder setFee(long value) {
        bitField0_ |= 0x00000004;
        fee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Creation fee
       * </pre>
       *
       * <code>optional uint64 fee = 3;</code>
       */
      public Builder clearFee() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fee_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NEMMosaicCreation)
    }

    // @@protoc_insertion_point(class_scope:NEMMosaicCreation)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NEMMosaicCreation>
        PARSER = new com.google.protobuf.AbstractParser<NEMMosaicCreation>() {
      public NEMMosaicCreation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NEMMosaicCreation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NEMMosaicCreation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NEMMosaicCreation> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicCreation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NEMMosaicDefinitionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NEMMosaicDefinition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * User-friendly name of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * User-friendly name of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * User-friendly name of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Ticker of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string ticker = 2;</code>
     */
    boolean hasTicker();
    /**
     * <pre>
     * Ticker of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string ticker = 2;</code>
     */
    java.lang.String getTicker();
    /**
     * <pre>
     * Ticker of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string ticker = 2;</code>
     */
    com.google.protobuf.ByteString
        getTickerBytes();

    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 3;</code>
     */
    boolean hasNamespace();
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 3;</code>
     */
    java.lang.String getNamespace();
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 3;</code>
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 4;</code>
     */
    boolean hasMosaic();
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 4;</code>
     */
    java.lang.String getMosaic();
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 4;</code>
     */
    com.google.protobuf.ByteString
        getMosaicBytes();

    /**
     * <pre>
     * Number of decimal places that a mosaic can be divided into
     * </pre>
     *
     * <code>optional uint32 divisibility = 5;</code>
     */
    boolean hasDivisibility();
    /**
     * <pre>
     * Number of decimal places that a mosaic can be divided into
     * </pre>
     *
     * <code>optional uint32 divisibility = 5;</code>
     */
    int getDivisibility();

    /**
     * <pre>
     * Levy type
     * </pre>
     *
     * <code>optional .NEMMosaicLevy levy = 6;</code>
     */
    boolean hasLevy();
    /**
     * <pre>
     * Levy type
     * </pre>
     *
     * <code>optional .NEMMosaicLevy levy = 6;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy getLevy();

    /**
     * <pre>
     * Levy fee (interpretation depends on levy type)
     * </pre>
     *
     * <code>optional uint64 fee = 7;</code>
     */
    boolean hasFee();
    /**
     * <pre>
     * Levy fee (interpretation depends on levy type)
     * </pre>
     *
     * <code>optional uint64 fee = 7;</code>
     */
    long getFee();

    /**
     * <pre>
     * Levy address
     * </pre>
     *
     * <code>optional string levy_address = 8;</code>
     */
    boolean hasLevyAddress();
    /**
     * <pre>
     * Levy address
     * </pre>
     *
     * <code>optional string levy_address = 8;</code>
     */
    java.lang.String getLevyAddress();
    /**
     * <pre>
     * Levy address
     * </pre>
     *
     * <code>optional string levy_address = 8;</code>
     */
    com.google.protobuf.ByteString
        getLevyAddressBytes();

    /**
     * <pre>
     * Fully qualified name of the namespace of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_namespace = 9;</code>
     */
    boolean hasLevyNamespace();
    /**
     * <pre>
     * Fully qualified name of the namespace of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_namespace = 9;</code>
     */
    java.lang.String getLevyNamespace();
    /**
     * <pre>
     * Fully qualified name of the namespace of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_namespace = 9;</code>
     */
    com.google.protobuf.ByteString
        getLevyNamespaceBytes();

    /**
     * <pre>
     * Name of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_mosaic = 10;</code>
     */
    boolean hasLevyMosaic();
    /**
     * <pre>
     * Name of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_mosaic = 10;</code>
     */
    java.lang.String getLevyMosaic();
    /**
     * <pre>
     * Name of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_mosaic = 10;</code>
     */
    com.google.protobuf.ByteString
        getLevyMosaicBytes();

    /**
     * <pre>
     * Initial supply to create, always given in entire units
     * </pre>
     *
     * <code>optional uint64 supply = 11;</code>
     */
    boolean hasSupply();
    /**
     * <pre>
     * Initial supply to create, always given in entire units
     * </pre>
     *
     * <code>optional uint64 supply = 11;</code>
     */
    long getSupply();

    /**
     * <pre>
     * Mutable supply
     * </pre>
     *
     * <code>optional bool mutable_supply = 12;</code>
     */
    boolean hasMutableSupply();
    /**
     * <pre>
     * Mutable supply
     * </pre>
     *
     * <code>optional bool mutable_supply = 12;</code>
     */
    boolean getMutableSupply();

    /**
     * <pre>
     * Mosaic allows transfers among accounts other than the creator
     * </pre>
     *
     * <code>optional bool transferable = 13;</code>
     */
    boolean hasTransferable();
    /**
     * <pre>
     * Mosaic allows transfers among accounts other than the creator
     * </pre>
     *
     * <code>optional bool transferable = 13;</code>
     */
    boolean getTransferable();

    /**
     * <pre>
     * Mosaic description
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    boolean hasDescription();
    /**
     * <pre>
     * Mosaic description
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Mosaic description
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <pre>
     * Networks that the mosaic is valid on (for whitelisted mosaics)
     * </pre>
     *
     * <code>repeated uint32 networks = 15;</code>
     */
    java.util.List<java.lang.Integer> getNetworksList();
    /**
     * <pre>
     * Networks that the mosaic is valid on (for whitelisted mosaics)
     * </pre>
     *
     * <code>repeated uint32 networks = 15;</code>
     */
    int getNetworksCount();
    /**
     * <pre>
     * Networks that the mosaic is valid on (for whitelisted mosaics)
     * </pre>
     *
     * <code>repeated uint32 networks = 15;</code>
     */
    int getNetworks(int index);
  }
  /**
   * <pre>
   **
   * Structure representing a mosaic definition
   * &#64;used_in NEMMosaicCreation
   * </pre>
   *
   * Protobuf type {@code NEMMosaicDefinition}
   */
  public  static final class NEMMosaicDefinition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NEMMosaicDefinition)
      NEMMosaicDefinitionOrBuilder {
    // Use NEMMosaicDefinition.newBuilder() to construct.
    private NEMMosaicDefinition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NEMMosaicDefinition() {
      name_ = "";
      ticker_ = "";
      namespace_ = "";
      mosaic_ = "";
      divisibility_ = 0;
      levy_ = 1;
      fee_ = 0L;
      levyAddress_ = "";
      levyNamespace_ = "";
      levyMosaic_ = "";
      supply_ = 0L;
      mutableSupply_ = false;
      transferable_ = false;
      description_ = "";
      networks_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NEMMosaicDefinition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              ticker_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              namespace_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              mosaic_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              divisibility_ = input.readUInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy value = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                levy_ = rawValue;
              }
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              fee_ = input.readUInt64();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              levyAddress_ = bs;
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              levyNamespace_ = bs;
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              levyMosaic_ = bs;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              supply_ = input.readUInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              mutableSupply_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              transferable_ = input.readBool();
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              description_ = bs;
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                networks_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              networks_.add(input.readUInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                networks_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                networks_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          networks_ = java.util.Collections.unmodifiableList(networks_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicDefinition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicDefinition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * User-friendly name of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * User-friendly name of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * User-friendly name of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TICKER_FIELD_NUMBER = 2;
    private volatile java.lang.Object ticker_;
    /**
     * <pre>
     * Ticker of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string ticker = 2;</code>
     */
    public boolean hasTicker() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Ticker of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string ticker = 2;</code>
     */
    public java.lang.String getTicker() {
      java.lang.Object ref = ticker_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ticker_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Ticker of the mosaic (for whitelisted mosaics)
     * </pre>
     *
     * <code>optional string ticker = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTickerBytes() {
      java.lang.Object ref = ticker_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ticker_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAMESPACE_FIELD_NUMBER = 3;
    private volatile java.lang.Object namespace_;
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 3;</code>
     */
    public boolean hasNamespace() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 3;</code>
     */
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          namespace_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MOSAIC_FIELD_NUMBER = 4;
    private volatile java.lang.Object mosaic_;
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 4;</code>
     */
    public boolean hasMosaic() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 4;</code>
     */
    public java.lang.String getMosaic() {
      java.lang.Object ref = mosaic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mosaic_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 4;</code>
     */
    public com.google.protobuf.ByteString
        getMosaicBytes() {
      java.lang.Object ref = mosaic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mosaic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIVISIBILITY_FIELD_NUMBER = 5;
    private int divisibility_;
    /**
     * <pre>
     * Number of decimal places that a mosaic can be divided into
     * </pre>
     *
     * <code>optional uint32 divisibility = 5;</code>
     */
    public boolean hasDivisibility() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Number of decimal places that a mosaic can be divided into
     * </pre>
     *
     * <code>optional uint32 divisibility = 5;</code>
     */
    public int getDivisibility() {
      return divisibility_;
    }

    public static final int LEVY_FIELD_NUMBER = 6;
    private int levy_;
    /**
     * <pre>
     * Levy type
     * </pre>
     *
     * <code>optional .NEMMosaicLevy levy = 6;</code>
     */
    public boolean hasLevy() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Levy type
     * </pre>
     *
     * <code>optional .NEMMosaicLevy levy = 6;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy getLevy() {
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy result = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy.valueOf(levy_);
      return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy.MosaicLevy_Absolute : result;
    }

    public static final int FEE_FIELD_NUMBER = 7;
    private long fee_;
    /**
     * <pre>
     * Levy fee (interpretation depends on levy type)
     * </pre>
     *
     * <code>optional uint64 fee = 7;</code>
     */
    public boolean hasFee() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <pre>
     * Levy fee (interpretation depends on levy type)
     * </pre>
     *
     * <code>optional uint64 fee = 7;</code>
     */
    public long getFee() {
      return fee_;
    }

    public static final int LEVY_ADDRESS_FIELD_NUMBER = 8;
    private volatile java.lang.Object levyAddress_;
    /**
     * <pre>
     * Levy address
     * </pre>
     *
     * <code>optional string levy_address = 8;</code>
     */
    public boolean hasLevyAddress() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <pre>
     * Levy address
     * </pre>
     *
     * <code>optional string levy_address = 8;</code>
     */
    public java.lang.String getLevyAddress() {
      java.lang.Object ref = levyAddress_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          levyAddress_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Levy address
     * </pre>
     *
     * <code>optional string levy_address = 8;</code>
     */
    public com.google.protobuf.ByteString
        getLevyAddressBytes() {
      java.lang.Object ref = levyAddress_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        levyAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEVY_NAMESPACE_FIELD_NUMBER = 9;
    private volatile java.lang.Object levyNamespace_;
    /**
     * <pre>
     * Fully qualified name of the namespace of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_namespace = 9;</code>
     */
    public boolean hasLevyNamespace() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <pre>
     * Fully qualified name of the namespace of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_namespace = 9;</code>
     */
    public java.lang.String getLevyNamespace() {
      java.lang.Object ref = levyNamespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          levyNamespace_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Fully qualified name of the namespace of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_namespace = 9;</code>
     */
    public com.google.protobuf.ByteString
        getLevyNamespaceBytes() {
      java.lang.Object ref = levyNamespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        levyNamespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEVY_MOSAIC_FIELD_NUMBER = 10;
    private volatile java.lang.Object levyMosaic_;
    /**
     * <pre>
     * Name of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_mosaic = 10;</code>
     */
    public boolean hasLevyMosaic() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <pre>
     * Name of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_mosaic = 10;</code>
     */
    public java.lang.String getLevyMosaic() {
      java.lang.Object ref = levyMosaic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          levyMosaic_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name of the levy mosaic
     * </pre>
     *
     * <code>optional string levy_mosaic = 10;</code>
     */
    public com.google.protobuf.ByteString
        getLevyMosaicBytes() {
      java.lang.Object ref = levyMosaic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        levyMosaic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUPPLY_FIELD_NUMBER = 11;
    private long supply_;
    /**
     * <pre>
     * Initial supply to create, always given in entire units
     * </pre>
     *
     * <code>optional uint64 supply = 11;</code>
     */
    public boolean hasSupply() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <pre>
     * Initial supply to create, always given in entire units
     * </pre>
     *
     * <code>optional uint64 supply = 11;</code>
     */
    public long getSupply() {
      return supply_;
    }

    public static final int MUTABLE_SUPPLY_FIELD_NUMBER = 12;
    private boolean mutableSupply_;
    /**
     * <pre>
     * Mutable supply
     * </pre>
     *
     * <code>optional bool mutable_supply = 12;</code>
     */
    public boolean hasMutableSupply() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <pre>
     * Mutable supply
     * </pre>
     *
     * <code>optional bool mutable_supply = 12;</code>
     */
    public boolean getMutableSupply() {
      return mutableSupply_;
    }

    public static final int TRANSFERABLE_FIELD_NUMBER = 13;
    private boolean transferable_;
    /**
     * <pre>
     * Mosaic allows transfers among accounts other than the creator
     * </pre>
     *
     * <code>optional bool transferable = 13;</code>
     */
    public boolean hasTransferable() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <pre>
     * Mosaic allows transfers among accounts other than the creator
     * </pre>
     *
     * <code>optional bool transferable = 13;</code>
     */
    public boolean getTransferable() {
      return transferable_;
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 14;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Mosaic description
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <pre>
     * Mosaic description
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Mosaic description
     * </pre>
     *
     * <code>optional string description = 14;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NETWORKS_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> networks_;
    /**
     * <pre>
     * Networks that the mosaic is valid on (for whitelisted mosaics)
     * </pre>
     *
     * <code>repeated uint32 networks = 15;</code>
     */
    public java.util.List<java.lang.Integer>
        getNetworksList() {
      return networks_;
    }
    /**
     * <pre>
     * Networks that the mosaic is valid on (for whitelisted mosaics)
     * </pre>
     *
     * <code>repeated uint32 networks = 15;</code>
     */
    public int getNetworksCount() {
      return networks_.size();
    }
    /**
     * <pre>
     * Networks that the mosaic is valid on (for whitelisted mosaics)
     * </pre>
     *
     * <code>repeated uint32 networks = 15;</code>
     */
    public int getNetworks(int index) {
      return networks_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, ticker_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, namespace_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, mosaic_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, divisibility_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, levy_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, fee_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, levyAddress_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, levyNamespace_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, levyMosaic_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt64(11, supply_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, mutableSupply_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, transferable_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, description_);
      }
      for (int i = 0; i < networks_.size(); i++) {
        output.writeUInt32(15, networks_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, ticker_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, namespace_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, mosaic_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, divisibility_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, levy_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, fee_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, levyAddress_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, levyNamespace_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, levyMosaic_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, supply_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, mutableSupply_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, transferable_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, description_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < networks_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(networks_.get(i));
        }
        size += dataSize;
        size += 1 * getNetworksList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasTicker() == other.hasTicker());
      if (hasTicker()) {
        result = result && getTicker()
            .equals(other.getTicker());
      }
      result = result && (hasNamespace() == other.hasNamespace());
      if (hasNamespace()) {
        result = result && getNamespace()
            .equals(other.getNamespace());
      }
      result = result && (hasMosaic() == other.hasMosaic());
      if (hasMosaic()) {
        result = result && getMosaic()
            .equals(other.getMosaic());
      }
      result = result && (hasDivisibility() == other.hasDivisibility());
      if (hasDivisibility()) {
        result = result && (getDivisibility()
            == other.getDivisibility());
      }
      result = result && (hasLevy() == other.hasLevy());
      if (hasLevy()) {
        result = result && levy_ == other.levy_;
      }
      result = result && (hasFee() == other.hasFee());
      if (hasFee()) {
        result = result && (getFee()
            == other.getFee());
      }
      result = result && (hasLevyAddress() == other.hasLevyAddress());
      if (hasLevyAddress()) {
        result = result && getLevyAddress()
            .equals(other.getLevyAddress());
      }
      result = result && (hasLevyNamespace() == other.hasLevyNamespace());
      if (hasLevyNamespace()) {
        result = result && getLevyNamespace()
            .equals(other.getLevyNamespace());
      }
      result = result && (hasLevyMosaic() == other.hasLevyMosaic());
      if (hasLevyMosaic()) {
        result = result && getLevyMosaic()
            .equals(other.getLevyMosaic());
      }
      result = result && (hasSupply() == other.hasSupply());
      if (hasSupply()) {
        result = result && (getSupply()
            == other.getSupply());
      }
      result = result && (hasMutableSupply() == other.hasMutableSupply());
      if (hasMutableSupply()) {
        result = result && (getMutableSupply()
            == other.getMutableSupply());
      }
      result = result && (hasTransferable() == other.hasTransferable());
      if (hasTransferable()) {
        result = result && (getTransferable()
            == other.getTransferable());
      }
      result = result && (hasDescription() == other.hasDescription());
      if (hasDescription()) {
        result = result && getDescription()
            .equals(other.getDescription());
      }
      result = result && getNetworksList()
          .equals(other.getNetworksList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasTicker()) {
        hash = (37 * hash) + TICKER_FIELD_NUMBER;
        hash = (53 * hash) + getTicker().hashCode();
      }
      if (hasNamespace()) {
        hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
        hash = (53 * hash) + getNamespace().hashCode();
      }
      if (hasMosaic()) {
        hash = (37 * hash) + MOSAIC_FIELD_NUMBER;
        hash = (53 * hash) + getMosaic().hashCode();
      }
      if (hasDivisibility()) {
        hash = (37 * hash) + DIVISIBILITY_FIELD_NUMBER;
        hash = (53 * hash) + getDivisibility();
      }
      if (hasLevy()) {
        hash = (37 * hash) + LEVY_FIELD_NUMBER;
        hash = (53 * hash) + levy_;
      }
      if (hasFee()) {
        hash = (37 * hash) + FEE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFee());
      }
      if (hasLevyAddress()) {
        hash = (37 * hash) + LEVY_ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getLevyAddress().hashCode();
      }
      if (hasLevyNamespace()) {
        hash = (37 * hash) + LEVY_NAMESPACE_FIELD_NUMBER;
        hash = (53 * hash) + getLevyNamespace().hashCode();
      }
      if (hasLevyMosaic()) {
        hash = (37 * hash) + LEVY_MOSAIC_FIELD_NUMBER;
        hash = (53 * hash) + getLevyMosaic().hashCode();
      }
      if (hasSupply()) {
        hash = (37 * hash) + SUPPLY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSupply());
      }
      if (hasMutableSupply()) {
        hash = (37 * hash) + MUTABLE_SUPPLY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getMutableSupply());
      }
      if (hasTransferable()) {
        hash = (37 * hash) + TRANSFERABLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTransferable());
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      if (getNetworksCount() > 0) {
        hash = (37 * hash) + NETWORKS_FIELD_NUMBER;
        hash = (53 * hash) + getNetworksList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing a mosaic definition
     * &#64;used_in NEMMosaicCreation
     * </pre>
     *
     * Protobuf type {@code NEMMosaicDefinition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NEMMosaicDefinition)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicDefinition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicDefinition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        ticker_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        namespace_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        mosaic_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        divisibility_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        levy_ = 1;
        bitField0_ = (bitField0_ & ~0x00000020);
        fee_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        levyAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        levyNamespace_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        levyMosaic_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        supply_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        mutableSupply_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        transferable_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        networks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicDefinition_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ticker_ = ticker_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.namespace_ = namespace_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mosaic_ = mosaic_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.divisibility_ = divisibility_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.levy_ = levy_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fee_ = fee_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.levyAddress_ = levyAddress_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.levyNamespace_ = levyNamespace_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.levyMosaic_ = levyMosaic_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.supply_ = supply_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.mutableSupply_ = mutableSupply_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.transferable_ = transferable_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.description_ = description_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          networks_ = java.util.Collections.unmodifiableList(networks_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.networks_ = networks_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasTicker()) {
          bitField0_ |= 0x00000002;
          ticker_ = other.ticker_;
          onChanged();
        }
        if (other.hasNamespace()) {
          bitField0_ |= 0x00000004;
          namespace_ = other.namespace_;
          onChanged();
        }
        if (other.hasMosaic()) {
          bitField0_ |= 0x00000008;
          mosaic_ = other.mosaic_;
          onChanged();
        }
        if (other.hasDivisibility()) {
          setDivisibility(other.getDivisibility());
        }
        if (other.hasLevy()) {
          setLevy(other.getLevy());
        }
        if (other.hasFee()) {
          setFee(other.getFee());
        }
        if (other.hasLevyAddress()) {
          bitField0_ |= 0x00000080;
          levyAddress_ = other.levyAddress_;
          onChanged();
        }
        if (other.hasLevyNamespace()) {
          bitField0_ |= 0x00000100;
          levyNamespace_ = other.levyNamespace_;
          onChanged();
        }
        if (other.hasLevyMosaic()) {
          bitField0_ |= 0x00000200;
          levyMosaic_ = other.levyMosaic_;
          onChanged();
        }
        if (other.hasSupply()) {
          setSupply(other.getSupply());
        }
        if (other.hasMutableSupply()) {
          setMutableSupply(other.getMutableSupply());
        }
        if (other.hasTransferable()) {
          setTransferable(other.getTransferable());
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00002000;
          description_ = other.description_;
          onChanged();
        }
        if (!other.networks_.isEmpty()) {
          if (networks_.isEmpty()) {
            networks_ = other.networks_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureNetworksIsMutable();
            networks_.addAll(other.networks_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * User-friendly name of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * User-friendly name of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * User-friendly name of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * User-friendly name of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User-friendly name of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User-friendly name of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ticker_ = "";
      /**
       * <pre>
       * Ticker of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string ticker = 2;</code>
       */
      public boolean hasTicker() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Ticker of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string ticker = 2;</code>
       */
      public java.lang.String getTicker() {
        java.lang.Object ref = ticker_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ticker_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Ticker of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string ticker = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTickerBytes() {
        java.lang.Object ref = ticker_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ticker_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Ticker of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string ticker = 2;</code>
       */
      public Builder setTicker(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ticker_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ticker of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string ticker = 2;</code>
       */
      public Builder clearTicker() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ticker_ = getDefaultInstance().getTicker();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ticker of the mosaic (for whitelisted mosaics)
       * </pre>
       *
       * <code>optional string ticker = 2;</code>
       */
      public Builder setTickerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ticker_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object namespace_ = "";
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 3;</code>
       */
      public boolean hasNamespace() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 3;</code>
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            namespace_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 3;</code>
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 3;</code>
       */
      public Builder clearNamespace() {
        bitField0_ = (bitField0_ & ~0x00000004);
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 3;</code>
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        namespace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mosaic_ = "";
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 4;</code>
       */
      public boolean hasMosaic() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 4;</code>
       */
      public java.lang.String getMosaic() {
        java.lang.Object ref = mosaic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mosaic_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 4;</code>
       */
      public com.google.protobuf.ByteString
          getMosaicBytes() {
        java.lang.Object ref = mosaic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mosaic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 4;</code>
       */
      public Builder setMosaic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        mosaic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 4;</code>
       */
      public Builder clearMosaic() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mosaic_ = getDefaultInstance().getMosaic();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 4;</code>
       */
      public Builder setMosaicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        mosaic_ = value;
        onChanged();
        return this;
      }

      private int divisibility_ ;
      /**
       * <pre>
       * Number of decimal places that a mosaic can be divided into
       * </pre>
       *
       * <code>optional uint32 divisibility = 5;</code>
       */
      public boolean hasDivisibility() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Number of decimal places that a mosaic can be divided into
       * </pre>
       *
       * <code>optional uint32 divisibility = 5;</code>
       */
      public int getDivisibility() {
        return divisibility_;
      }
      /**
       * <pre>
       * Number of decimal places that a mosaic can be divided into
       * </pre>
       *
       * <code>optional uint32 divisibility = 5;</code>
       */
      public Builder setDivisibility(int value) {
        bitField0_ |= 0x00000010;
        divisibility_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of decimal places that a mosaic can be divided into
       * </pre>
       *
       * <code>optional uint32 divisibility = 5;</code>
       */
      public Builder clearDivisibility() {
        bitField0_ = (bitField0_ & ~0x00000010);
        divisibility_ = 0;
        onChanged();
        return this;
      }

      private int levy_ = 1;
      /**
       * <pre>
       * Levy type
       * </pre>
       *
       * <code>optional .NEMMosaicLevy levy = 6;</code>
       */
      public boolean hasLevy() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Levy type
       * </pre>
       *
       * <code>optional .NEMMosaicLevy levy = 6;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy getLevy() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy result = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy.valueOf(levy_);
        return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy.MosaicLevy_Absolute : result;
      }
      /**
       * <pre>
       * Levy type
       * </pre>
       *
       * <code>optional .NEMMosaicLevy levy = 6;</code>
       */
      public Builder setLevy(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicLevy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        levy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Levy type
       * </pre>
       *
       * <code>optional .NEMMosaicLevy levy = 6;</code>
       */
      public Builder clearLevy() {
        bitField0_ = (bitField0_ & ~0x00000020);
        levy_ = 1;
        onChanged();
        return this;
      }

      private long fee_ ;
      /**
       * <pre>
       * Levy fee (interpretation depends on levy type)
       * </pre>
       *
       * <code>optional uint64 fee = 7;</code>
       */
      public boolean hasFee() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       * Levy fee (interpretation depends on levy type)
       * </pre>
       *
       * <code>optional uint64 fee = 7;</code>
       */
      public long getFee() {
        return fee_;
      }
      /**
       * <pre>
       * Levy fee (interpretation depends on levy type)
       * </pre>
       *
       * <code>optional uint64 fee = 7;</code>
       */
      public Builder setFee(long value) {
        bitField0_ |= 0x00000040;
        fee_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Levy fee (interpretation depends on levy type)
       * </pre>
       *
       * <code>optional uint64 fee = 7;</code>
       */
      public Builder clearFee() {
        bitField0_ = (bitField0_ & ~0x00000040);
        fee_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object levyAddress_ = "";
      /**
       * <pre>
       * Levy address
       * </pre>
       *
       * <code>optional string levy_address = 8;</code>
       */
      public boolean hasLevyAddress() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       * Levy address
       * </pre>
       *
       * <code>optional string levy_address = 8;</code>
       */
      public java.lang.String getLevyAddress() {
        java.lang.Object ref = levyAddress_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            levyAddress_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Levy address
       * </pre>
       *
       * <code>optional string levy_address = 8;</code>
       */
      public com.google.protobuf.ByteString
          getLevyAddressBytes() {
        java.lang.Object ref = levyAddress_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          levyAddress_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Levy address
       * </pre>
       *
       * <code>optional string levy_address = 8;</code>
       */
      public Builder setLevyAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        levyAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Levy address
       * </pre>
       *
       * <code>optional string levy_address = 8;</code>
       */
      public Builder clearLevyAddress() {
        bitField0_ = (bitField0_ & ~0x00000080);
        levyAddress_ = getDefaultInstance().getLevyAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Levy address
       * </pre>
       *
       * <code>optional string levy_address = 8;</code>
       */
      public Builder setLevyAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        levyAddress_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object levyNamespace_ = "";
      /**
       * <pre>
       * Fully qualified name of the namespace of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_namespace = 9;</code>
       */
      public boolean hasLevyNamespace() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <pre>
       * Fully qualified name of the namespace of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_namespace = 9;</code>
       */
      public java.lang.String getLevyNamespace() {
        java.lang.Object ref = levyNamespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            levyNamespace_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Fully qualified name of the namespace of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_namespace = 9;</code>
       */
      public com.google.protobuf.ByteString
          getLevyNamespaceBytes() {
        java.lang.Object ref = levyNamespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          levyNamespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Fully qualified name of the namespace of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_namespace = 9;</code>
       */
      public Builder setLevyNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        levyNamespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fully qualified name of the namespace of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_namespace = 9;</code>
       */
      public Builder clearLevyNamespace() {
        bitField0_ = (bitField0_ & ~0x00000100);
        levyNamespace_ = getDefaultInstance().getLevyNamespace();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fully qualified name of the namespace of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_namespace = 9;</code>
       */
      public Builder setLevyNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        levyNamespace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object levyMosaic_ = "";
      /**
       * <pre>
       * Name of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_mosaic = 10;</code>
       */
      public boolean hasLevyMosaic() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <pre>
       * Name of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_mosaic = 10;</code>
       */
      public java.lang.String getLevyMosaic() {
        java.lang.Object ref = levyMosaic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            levyMosaic_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_mosaic = 10;</code>
       */
      public com.google.protobuf.ByteString
          getLevyMosaicBytes() {
        java.lang.Object ref = levyMosaic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          levyMosaic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_mosaic = 10;</code>
       */
      public Builder setLevyMosaic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        levyMosaic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_mosaic = 10;</code>
       */
      public Builder clearLevyMosaic() {
        bitField0_ = (bitField0_ & ~0x00000200);
        levyMosaic_ = getDefaultInstance().getLevyMosaic();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the levy mosaic
       * </pre>
       *
       * <code>optional string levy_mosaic = 10;</code>
       */
      public Builder setLevyMosaicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        levyMosaic_ = value;
        onChanged();
        return this;
      }

      private long supply_ ;
      /**
       * <pre>
       * Initial supply to create, always given in entire units
       * </pre>
       *
       * <code>optional uint64 supply = 11;</code>
       */
      public boolean hasSupply() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <pre>
       * Initial supply to create, always given in entire units
       * </pre>
       *
       * <code>optional uint64 supply = 11;</code>
       */
      public long getSupply() {
        return supply_;
      }
      /**
       * <pre>
       * Initial supply to create, always given in entire units
       * </pre>
       *
       * <code>optional uint64 supply = 11;</code>
       */
      public Builder setSupply(long value) {
        bitField0_ |= 0x00000400;
        supply_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Initial supply to create, always given in entire units
       * </pre>
       *
       * <code>optional uint64 supply = 11;</code>
       */
      public Builder clearSupply() {
        bitField0_ = (bitField0_ & ~0x00000400);
        supply_ = 0L;
        onChanged();
        return this;
      }

      private boolean mutableSupply_ ;
      /**
       * <pre>
       * Mutable supply
       * </pre>
       *
       * <code>optional bool mutable_supply = 12;</code>
       */
      public boolean hasMutableSupply() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <pre>
       * Mutable supply
       * </pre>
       *
       * <code>optional bool mutable_supply = 12;</code>
       */
      public boolean getMutableSupply() {
        return mutableSupply_;
      }
      /**
       * <pre>
       * Mutable supply
       * </pre>
       *
       * <code>optional bool mutable_supply = 12;</code>
       */
      public Builder setMutableSupply(boolean value) {
        bitField0_ |= 0x00000800;
        mutableSupply_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mutable supply
       * </pre>
       *
       * <code>optional bool mutable_supply = 12;</code>
       */
      public Builder clearMutableSupply() {
        bitField0_ = (bitField0_ & ~0x00000800);
        mutableSupply_ = false;
        onChanged();
        return this;
      }

      private boolean transferable_ ;
      /**
       * <pre>
       * Mosaic allows transfers among accounts other than the creator
       * </pre>
       *
       * <code>optional bool transferable = 13;</code>
       */
      public boolean hasTransferable() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <pre>
       * Mosaic allows transfers among accounts other than the creator
       * </pre>
       *
       * <code>optional bool transferable = 13;</code>
       */
      public boolean getTransferable() {
        return transferable_;
      }
      /**
       * <pre>
       * Mosaic allows transfers among accounts other than the creator
       * </pre>
       *
       * <code>optional bool transferable = 13;</code>
       */
      public Builder setTransferable(boolean value) {
        bitField0_ |= 0x00001000;
        transferable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mosaic allows transfers among accounts other than the creator
       * </pre>
       *
       * <code>optional bool transferable = 13;</code>
       */
      public Builder clearTransferable() {
        bitField0_ = (bitField0_ & ~0x00001000);
        transferable_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Mosaic description
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <pre>
       * Mosaic description
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Mosaic description
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Mosaic description
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mosaic description
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00002000);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mosaic description
       * </pre>
       *
       * <code>optional string description = 14;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        description_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> networks_ = java.util.Collections.emptyList();
      private void ensureNetworksIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          networks_ = new java.util.ArrayList<java.lang.Integer>(networks_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <pre>
       * Networks that the mosaic is valid on (for whitelisted mosaics)
       * </pre>
       *
       * <code>repeated uint32 networks = 15;</code>
       */
      public java.util.List<java.lang.Integer>
          getNetworksList() {
        return java.util.Collections.unmodifiableList(networks_);
      }
      /**
       * <pre>
       * Networks that the mosaic is valid on (for whitelisted mosaics)
       * </pre>
       *
       * <code>repeated uint32 networks = 15;</code>
       */
      public int getNetworksCount() {
        return networks_.size();
      }
      /**
       * <pre>
       * Networks that the mosaic is valid on (for whitelisted mosaics)
       * </pre>
       *
       * <code>repeated uint32 networks = 15;</code>
       */
      public int getNetworks(int index) {
        return networks_.get(index);
      }
      /**
       * <pre>
       * Networks that the mosaic is valid on (for whitelisted mosaics)
       * </pre>
       *
       * <code>repeated uint32 networks = 15;</code>
       */
      public Builder setNetworks(
          int index, int value) {
        ensureNetworksIsMutable();
        networks_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Networks that the mosaic is valid on (for whitelisted mosaics)
       * </pre>
       *
       * <code>repeated uint32 networks = 15;</code>
       */
      public Builder addNetworks(int value) {
        ensureNetworksIsMutable();
        networks_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Networks that the mosaic is valid on (for whitelisted mosaics)
       * </pre>
       *
       * <code>repeated uint32 networks = 15;</code>
       */
      public Builder addAllNetworks(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNetworksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, networks_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Networks that the mosaic is valid on (for whitelisted mosaics)
       * </pre>
       *
       * <code>repeated uint32 networks = 15;</code>
       */
      public Builder clearNetworks() {
        networks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NEMMosaicDefinition)
    }

    // @@protoc_insertion_point(class_scope:NEMMosaicDefinition)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NEMMosaicDefinition>
        PARSER = new com.google.protobuf.AbstractParser<NEMMosaicDefinition>() {
      public NEMMosaicDefinition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NEMMosaicDefinition(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NEMMosaicDefinition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NEMMosaicDefinition> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicDefinition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NEMMosaicSupplyChangeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NEMMosaicSupplyChange)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    boolean hasNamespace();
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    java.lang.String getNamespace();
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    boolean hasMosaic();
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    java.lang.String getMosaic();
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    com.google.protobuf.ByteString
        getMosaicBytes();

    /**
     * <pre>
     * Type of supply change
     * </pre>
     *
     * <code>optional .NEMSupplyChangeType type = 3;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * Type of supply change
     * </pre>
     *
     * <code>optional .NEMSupplyChangeType type = 3;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType getType();

    /**
     * <pre>
     * Supply delta
     * </pre>
     *
     * <code>optional uint64 delta = 4;</code>
     */
    boolean hasDelta();
    /**
     * <pre>
     * Supply delta
     * </pre>
     *
     * <code>optional uint64 delta = 4;</code>
     */
    long getDelta();
  }
  /**
   * <pre>
   **
   * Structure representing the mosaic supply change part for NEM transactions
   * &#64;used_in NEMSignTx
   * </pre>
   *
   * Protobuf type {@code NEMMosaicSupplyChange}
   */
  public  static final class NEMMosaicSupplyChange extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NEMMosaicSupplyChange)
      NEMMosaicSupplyChangeOrBuilder {
    // Use NEMMosaicSupplyChange.newBuilder() to construct.
    private NEMMosaicSupplyChange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NEMMosaicSupplyChange() {
      namespace_ = "";
      mosaic_ = "";
      type_ = 1;
      delta_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NEMMosaicSupplyChange(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              namespace_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              mosaic_ = bs;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType value = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = rawValue;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              delta_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicSupplyChange_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicSupplyChange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange.Builder.class);
    }

    private int bitField0_;
    public static final int NAMESPACE_FIELD_NUMBER = 1;
    private volatile java.lang.Object namespace_;
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    public boolean hasNamespace() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          namespace_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Fully qualified name of the namespace
     * </pre>
     *
     * <code>optional string namespace = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MOSAIC_FIELD_NUMBER = 2;
    private volatile java.lang.Object mosaic_;
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    public boolean hasMosaic() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    public java.lang.String getMosaic() {
      java.lang.Object ref = mosaic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mosaic_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name of the mosaic definition
     * </pre>
     *
     * <code>optional string mosaic = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMosaicBytes() {
      java.lang.Object ref = mosaic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mosaic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <pre>
     * Type of supply change
     * </pre>
     *
     * <code>optional .NEMSupplyChangeType type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Type of supply change
     * </pre>
     *
     * <code>optional .NEMSupplyChangeType type = 3;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType getType() {
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType result = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType.valueOf(type_);
      return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType.SupplyChange_Increase : result;
    }

    public static final int DELTA_FIELD_NUMBER = 4;
    private long delta_;
    /**
     * <pre>
     * Supply delta
     * </pre>
     *
     * <code>optional uint64 delta = 4;</code>
     */
    public boolean hasDelta() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Supply delta
     * </pre>
     *
     * <code>optional uint64 delta = 4;</code>
     */
    public long getDelta() {
      return delta_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, namespace_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, mosaic_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, delta_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, namespace_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, mosaic_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, delta_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange) obj;

      boolean result = true;
      result = result && (hasNamespace() == other.hasNamespace());
      if (hasNamespace()) {
        result = result && getNamespace()
            .equals(other.getNamespace());
      }
      result = result && (hasMosaic() == other.hasMosaic());
      if (hasMosaic()) {
        result = result && getMosaic()
            .equals(other.getMosaic());
      }
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && type_ == other.type_;
      }
      result = result && (hasDelta() == other.hasDelta());
      if (hasDelta()) {
        result = result && (getDelta()
            == other.getDelta());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasNamespace()) {
        hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
        hash = (53 * hash) + getNamespace().hashCode();
      }
      if (hasMosaic()) {
        hash = (37 * hash) + MOSAIC_FIELD_NUMBER;
        hash = (53 * hash) + getMosaic().hashCode();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasDelta()) {
        hash = (37 * hash) + DELTA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getDelta());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing the mosaic supply change part for NEM transactions
     * &#64;used_in NEMSignTx
     * </pre>
     *
     * Protobuf type {@code NEMMosaicSupplyChange}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NEMMosaicSupplyChange)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChangeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicSupplyChange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicSupplyChange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        namespace_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        mosaic_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 1;
        bitField0_ = (bitField0_ & ~0x00000004);
        delta_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMMosaicSupplyChange_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.namespace_ = namespace_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mosaic_ = mosaic_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.delta_ = delta_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange.getDefaultInstance()) return this;
        if (other.hasNamespace()) {
          bitField0_ |= 0x00000001;
          namespace_ = other.namespace_;
          onChanged();
        }
        if (other.hasMosaic()) {
          bitField0_ |= 0x00000002;
          mosaic_ = other.mosaic_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDelta()) {
          setDelta(other.getDelta());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object namespace_ = "";
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public boolean hasNamespace() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            namespace_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public Builder clearNamespace() {
        bitField0_ = (bitField0_ & ~0x00000001);
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fully qualified name of the namespace
       * </pre>
       *
       * <code>optional string namespace = 1;</code>
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namespace_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mosaic_ = "";
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public boolean hasMosaic() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public java.lang.String getMosaic() {
        java.lang.Object ref = mosaic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mosaic_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMosaicBytes() {
        java.lang.Object ref = mosaic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mosaic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public Builder setMosaic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mosaic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public Builder clearMosaic() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mosaic_ = getDefaultInstance().getMosaic();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the mosaic definition
       * </pre>
       *
       * <code>optional string mosaic = 2;</code>
       */
      public Builder setMosaicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mosaic_ = value;
        onChanged();
        return this;
      }

      private int type_ = 1;
      /**
       * <pre>
       * Type of supply change
       * </pre>
       *
       * <code>optional .NEMSupplyChangeType type = 3;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Type of supply change
       * </pre>
       *
       * <code>optional .NEMSupplyChangeType type = 3;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType getType() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType result = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType.valueOf(type_);
        return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType.SupplyChange_Increase : result;
      }
      /**
       * <pre>
       * Type of supply change
       * </pre>
       *
       * <code>optional .NEMSupplyChangeType type = 3;</code>
       */
      public Builder setType(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMSupplyChangeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of supply change
       * </pre>
       *
       * <code>optional .NEMSupplyChangeType type = 3;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 1;
        onChanged();
        return this;
      }

      private long delta_ ;
      /**
       * <pre>
       * Supply delta
       * </pre>
       *
       * <code>optional uint64 delta = 4;</code>
       */
      public boolean hasDelta() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Supply delta
       * </pre>
       *
       * <code>optional uint64 delta = 4;</code>
       */
      public long getDelta() {
        return delta_;
      }
      /**
       * <pre>
       * Supply delta
       * </pre>
       *
       * <code>optional uint64 delta = 4;</code>
       */
      public Builder setDelta(long value) {
        bitField0_ |= 0x00000008;
        delta_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Supply delta
       * </pre>
       *
       * <code>optional uint64 delta = 4;</code>
       */
      public Builder clearDelta() {
        bitField0_ = (bitField0_ & ~0x00000008);
        delta_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NEMMosaicSupplyChange)
    }

    // @@protoc_insertion_point(class_scope:NEMMosaicSupplyChange)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NEMMosaicSupplyChange>
        PARSER = new com.google.protobuf.AbstractParser<NEMMosaicSupplyChange>() {
      public NEMMosaicSupplyChange parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NEMMosaicSupplyChange(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NEMMosaicSupplyChange> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NEMMosaicSupplyChange> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMMosaicSupplyChange getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NEMAggregateModificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NEMAggregateModification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Cosignatory modifications
     * </pre>
     *
     * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
     */
    java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification> 
        getModificationsList();
    /**
     * <pre>
     * Cosignatory modifications
     * </pre>
     *
     * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification getModifications(int index);
    /**
     * <pre>
     * Cosignatory modifications
     * </pre>
     *
     * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
     */
    int getModificationsCount();
    /**
     * <pre>
     * Cosignatory modifications
     * </pre>
     *
     * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
     */
    java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModificationOrBuilder> 
        getModificationsOrBuilderList();
    /**
     * <pre>
     * Cosignatory modifications
     * </pre>
     *
     * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModificationOrBuilder getModificationsOrBuilder(
        int index);

    /**
     * <pre>
     * Relative change of the minimum cosignatories
     * </pre>
     *
     * <code>optional sint32 relative_change = 2;</code>
     */
    boolean hasRelativeChange();
    /**
     * <pre>
     * Relative change of the minimum cosignatories
     * </pre>
     *
     * <code>optional sint32 relative_change = 2;</code>
     */
    int getRelativeChange();
  }
  /**
   * <pre>
   **
   * Structure representing the aggregate modification part for NEM transactions
   * &#64;used_in NEMSignTx
   * </pre>
   *
   * Protobuf type {@code NEMAggregateModification}
   */
  public  static final class NEMAggregateModification extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NEMAggregateModification)
      NEMAggregateModificationOrBuilder {
    // Use NEMAggregateModification.newBuilder() to construct.
    private NEMAggregateModification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NEMAggregateModification() {
      modifications_ = java.util.Collections.emptyList();
      relativeChange_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NEMAggregateModification(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                modifications_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification>();
                mutable_bitField0_ |= 0x00000001;
              }
              modifications_.add(
                  input.readMessage(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              relativeChange_ = input.readSInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          modifications_ = java.util.Collections.unmodifiableList(modifications_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMAggregateModification_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMAggregateModification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification.Builder.class);
    }

    private int bitField0_;
    public static final int MODIFICATIONS_FIELD_NUMBER = 1;
    private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification> modifications_;
    /**
     * <pre>
     * Cosignatory modifications
     * </pre>
     *
     * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
     */
    public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification> getModificationsList() {
      return modifications_;
    }
    /**
     * <pre>
     * Cosignatory modifications
     * </pre>
     *
     * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
     */
    public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModificationOrBuilder> 
        getModificationsOrBuilderList() {
      return modifications_;
    }
    /**
     * <pre>
     * Cosignatory modifications
     * </pre>
     *
     * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
     */
    public int getModificationsCount() {
      return modifications_.size();
    }
    /**
     * <pre>
     * Cosignatory modifications
     * </pre>
     *
     * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification getModifications(int index) {
      return modifications_.get(index);
    }
    /**
     * <pre>
     * Cosignatory modifications
     * </pre>
     *
     * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModificationOrBuilder getModificationsOrBuilder(
        int index) {
      return modifications_.get(index);
    }

    public static final int RELATIVE_CHANGE_FIELD_NUMBER = 2;
    private int relativeChange_;
    /**
     * <pre>
     * Relative change of the minimum cosignatories
     * </pre>
     *
     * <code>optional sint32 relative_change = 2;</code>
     */
    public boolean hasRelativeChange() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Relative change of the minimum cosignatories
     * </pre>
     *
     * <code>optional sint32 relative_change = 2;</code>
     */
    public int getRelativeChange() {
      return relativeChange_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < modifications_.size(); i++) {
        output.writeMessage(1, modifications_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt32(2, relativeChange_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < modifications_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, modifications_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, relativeChange_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification) obj;

      boolean result = true;
      result = result && getModificationsList()
          .equals(other.getModificationsList());
      result = result && (hasRelativeChange() == other.hasRelativeChange());
      if (hasRelativeChange()) {
        result = result && (getRelativeChange()
            == other.getRelativeChange());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getModificationsCount() > 0) {
        hash = (37 * hash) + MODIFICATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getModificationsList().hashCode();
      }
      if (hasRelativeChange()) {
        hash = (37 * hash) + RELATIVE_CHANGE_FIELD_NUMBER;
        hash = (53 * hash) + getRelativeChange();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing the aggregate modification part for NEM transactions
     * &#64;used_in NEMSignTx
     * </pre>
     *
     * Protobuf type {@code NEMAggregateModification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NEMAggregateModification)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMAggregateModification_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMAggregateModification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getModificationsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (modificationsBuilder_ == null) {
          modifications_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          modificationsBuilder_.clear();
        }
        relativeChange_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMAggregateModification_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (modificationsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            modifications_ = java.util.Collections.unmodifiableList(modifications_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.modifications_ = modifications_;
        } else {
          result.modifications_ = modificationsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.relativeChange_ = relativeChange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification.getDefaultInstance()) return this;
        if (modificationsBuilder_ == null) {
          if (!other.modifications_.isEmpty()) {
            if (modifications_.isEmpty()) {
              modifications_ = other.modifications_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureModificationsIsMutable();
              modifications_.addAll(other.modifications_);
            }
            onChanged();
          }
        } else {
          if (!other.modifications_.isEmpty()) {
            if (modificationsBuilder_.isEmpty()) {
              modificationsBuilder_.dispose();
              modificationsBuilder_ = null;
              modifications_ = other.modifications_;
              bitField0_ = (bitField0_ & ~0x00000001);
              modificationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getModificationsFieldBuilder() : null;
            } else {
              modificationsBuilder_.addAllMessages(other.modifications_);
            }
          }
        }
        if (other.hasRelativeChange()) {
          setRelativeChange(other.getRelativeChange());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification> modifications_ =
        java.util.Collections.emptyList();
      private void ensureModificationsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          modifications_ = new java.util.ArrayList<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification>(modifications_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModificationOrBuilder> modificationsBuilder_;

      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification> getModificationsList() {
        if (modificationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(modifications_);
        } else {
          return modificationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public int getModificationsCount() {
        if (modificationsBuilder_ == null) {
          return modifications_.size();
        } else {
          return modificationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification getModifications(int index) {
        if (modificationsBuilder_ == null) {
          return modifications_.get(index);
        } else {
          return modificationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public Builder setModifications(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification value) {
        if (modificationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModificationsIsMutable();
          modifications_.set(index, value);
          onChanged();
        } else {
          modificationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public Builder setModifications(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder builderForValue) {
        if (modificationsBuilder_ == null) {
          ensureModificationsIsMutable();
          modifications_.set(index, builderForValue.build());
          onChanged();
        } else {
          modificationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public Builder addModifications(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification value) {
        if (modificationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModificationsIsMutable();
          modifications_.add(value);
          onChanged();
        } else {
          modificationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public Builder addModifications(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification value) {
        if (modificationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModificationsIsMutable();
          modifications_.add(index, value);
          onChanged();
        } else {
          modificationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public Builder addModifications(
          com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder builderForValue) {
        if (modificationsBuilder_ == null) {
          ensureModificationsIsMutable();
          modifications_.add(builderForValue.build());
          onChanged();
        } else {
          modificationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public Builder addModifications(
          int index, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder builderForValue) {
        if (modificationsBuilder_ == null) {
          ensureModificationsIsMutable();
          modifications_.add(index, builderForValue.build());
          onChanged();
        } else {
          modificationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public Builder addAllModifications(
          java.lang.Iterable<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification> values) {
        if (modificationsBuilder_ == null) {
          ensureModificationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, modifications_);
          onChanged();
        } else {
          modificationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public Builder clearModifications() {
        if (modificationsBuilder_ == null) {
          modifications_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          modificationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public Builder removeModifications(int index) {
        if (modificationsBuilder_ == null) {
          ensureModificationsIsMutable();
          modifications_.remove(index);
          onChanged();
        } else {
          modificationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder getModificationsBuilder(
          int index) {
        return getModificationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModificationOrBuilder getModificationsOrBuilder(
          int index) {
        if (modificationsBuilder_ == null) {
          return modifications_.get(index);  } else {
          return modificationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public java.util.List<? extends com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModificationOrBuilder> 
           getModificationsOrBuilderList() {
        if (modificationsBuilder_ != null) {
          return modificationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(modifications_);
        }
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder addModificationsBuilder() {
        return getModificationsFieldBuilder().addBuilder(
            com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.getDefaultInstance());
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder addModificationsBuilder(
          int index) {
        return getModificationsFieldBuilder().addBuilder(
            index, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.getDefaultInstance());
      }
      /**
       * <pre>
       * Cosignatory modifications
       * </pre>
       *
       * <code>repeated .NEMCosignatoryModification modifications = 1;</code>
       */
      public java.util.List<com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder> 
           getModificationsBuilderList() {
        return getModificationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModificationOrBuilder> 
          getModificationsFieldBuilder() {
        if (modificationsBuilder_ == null) {
          modificationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModificationOrBuilder>(
                  modifications_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          modifications_ = null;
        }
        return modificationsBuilder_;
      }

      private int relativeChange_ ;
      /**
       * <pre>
       * Relative change of the minimum cosignatories
       * </pre>
       *
       * <code>optional sint32 relative_change = 2;</code>
       */
      public boolean hasRelativeChange() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Relative change of the minimum cosignatories
       * </pre>
       *
       * <code>optional sint32 relative_change = 2;</code>
       */
      public int getRelativeChange() {
        return relativeChange_;
      }
      /**
       * <pre>
       * Relative change of the minimum cosignatories
       * </pre>
       *
       * <code>optional sint32 relative_change = 2;</code>
       */
      public Builder setRelativeChange(int value) {
        bitField0_ |= 0x00000002;
        relativeChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Relative change of the minimum cosignatories
       * </pre>
       *
       * <code>optional sint32 relative_change = 2;</code>
       */
      public Builder clearRelativeChange() {
        bitField0_ = (bitField0_ & ~0x00000002);
        relativeChange_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NEMAggregateModification)
    }

    // @@protoc_insertion_point(class_scope:NEMAggregateModification)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NEMAggregateModification>
        PARSER = new com.google.protobuf.AbstractParser<NEMAggregateModification>() {
      public NEMAggregateModification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NEMAggregateModification(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NEMAggregateModification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NEMAggregateModification> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMAggregateModification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NEMCosignatoryModificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NEMCosignatoryModification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Type of cosignatory modification
     * </pre>
     *
     * <code>optional .NEMModificationType type = 1;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * Type of cosignatory modification
     * </pre>
     *
     * <code>optional .NEMModificationType type = 1;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType getType();

    /**
     * <pre>
     * Public key of the cosignatory
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     */
    boolean hasPublicKey();
    /**
     * <pre>
     * Public key of the cosignatory
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     */
    com.google.protobuf.ByteString getPublicKey();
  }
  /**
   * <pre>
   **
   * Structure representing the cosignatory modification for aggregate modification transactions
   * &#64;used_in NEMAggregateMdofiication
   * </pre>
   *
   * Protobuf type {@code NEMCosignatoryModification}
   */
  public  static final class NEMCosignatoryModification extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NEMCosignatoryModification)
      NEMCosignatoryModificationOrBuilder {
    // Use NEMCosignatoryModification.newBuilder() to construct.
    private NEMCosignatoryModification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NEMCosignatoryModification() {
      type_ = 1;
      publicKey_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NEMCosignatoryModification(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType value = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = rawValue;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              publicKey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMCosignatoryModification_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMCosignatoryModification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * Type of cosignatory modification
     * </pre>
     *
     * <code>optional .NEMModificationType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Type of cosignatory modification
     * </pre>
     *
     * <code>optional .NEMModificationType type = 1;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType getType() {
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType result = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType.valueOf(type_);
      return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType.CosignatoryModification_Add : result;
    }

    public static final int PUBLIC_KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString publicKey_;
    /**
     * <pre>
     * Public key of the cosignatory
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     */
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Public key of the cosignatory
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     */
    public com.google.protobuf.ByteString getPublicKey() {
      return publicKey_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, publicKey_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, publicKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification) obj;

      boolean result = true;
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && type_ == other.type_;
      }
      result = result && (hasPublicKey() == other.hasPublicKey());
      if (hasPublicKey()) {
        result = result && getPublicKey()
            .equals(other.getPublicKey());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasPublicKey()) {
        hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKey().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing the cosignatory modification for aggregate modification transactions
     * &#64;used_in NEMAggregateMdofiication
     * </pre>
     *
     * Protobuf type {@code NEMCosignatoryModification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NEMCosignatoryModification)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMCosignatoryModification_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMCosignatoryModification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        publicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMCosignatoryModification_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.publicKey_ = publicKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 1;
      /**
       * <pre>
       * Type of cosignatory modification
       * </pre>
       *
       * <code>optional .NEMModificationType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Type of cosignatory modification
       * </pre>
       *
       * <code>optional .NEMModificationType type = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType getType() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType result = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType.valueOf(type_);
        return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType.CosignatoryModification_Add : result;
      }
      /**
       * <pre>
       * Type of cosignatory modification
       * </pre>
       *
       * <code>optional .NEMModificationType type = 1;</code>
       */
      public Builder setType(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMModificationType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of cosignatory modification
       * </pre>
       *
       * <code>optional .NEMModificationType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 1;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Public key of the cosignatory
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       */
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Public key of the cosignatory
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       */
      public com.google.protobuf.ByteString getPublicKey() {
        return publicKey_;
      }
      /**
       * <pre>
       * Public key of the cosignatory
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       */
      public Builder setPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        publicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Public key of the cosignatory
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       */
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NEMCosignatoryModification)
    }

    // @@protoc_insertion_point(class_scope:NEMCosignatoryModification)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NEMCosignatoryModification>
        PARSER = new com.google.protobuf.AbstractParser<NEMCosignatoryModification>() {
      public NEMCosignatoryModification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NEMCosignatoryModification(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NEMCosignatoryModification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NEMCosignatoryModification> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMCosignatoryModification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NEMImportanceTransferOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NEMImportanceTransfer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Mode of importance transfer
     * </pre>
     *
     * <code>optional .NEMImportanceTransferMode mode = 1;</code>
     */
    boolean hasMode();
    /**
     * <pre>
     * Mode of importance transfer
     * </pre>
     *
     * <code>optional .NEMImportanceTransferMode mode = 1;</code>
     */
    com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode getMode();

    /**
     * <pre>
     * Public key of the remote account
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     */
    boolean hasPublicKey();
    /**
     * <pre>
     * Public key of the remote account
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     */
    com.google.protobuf.ByteString getPublicKey();
  }
  /**
   * <pre>
   **
   * Structure representing the importance transfer part for NEM transactions
   * &#64;used_in NEMSignTx
   * </pre>
   *
   * Protobuf type {@code NEMImportanceTransfer}
   */
  public  static final class NEMImportanceTransfer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NEMImportanceTransfer)
      NEMImportanceTransferOrBuilder {
    // Use NEMImportanceTransfer.newBuilder() to construct.
    private NEMImportanceTransfer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NEMImportanceTransfer() {
      mode_ = 1;
      publicKey_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NEMImportanceTransfer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode value = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mode_ = rawValue;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              publicKey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMImportanceTransfer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMImportanceTransfer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer.Builder.class);
    }

    private int bitField0_;
    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_;
    /**
     * <pre>
     * Mode of importance transfer
     * </pre>
     *
     * <code>optional .NEMImportanceTransferMode mode = 1;</code>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Mode of importance transfer
     * </pre>
     *
     * <code>optional .NEMImportanceTransferMode mode = 1;</code>
     */
    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode getMode() {
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode result = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode.valueOf(mode_);
      return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode.ImportanceTransfer_Activate : result;
    }

    public static final int PUBLIC_KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString publicKey_;
    /**
     * <pre>
     * Public key of the remote account
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     */
    public boolean hasPublicKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Public key of the remote account
     * </pre>
     *
     * <code>optional bytes public_key = 2;</code>
     */
    public com.google.protobuf.ByteString getPublicKey() {
      return publicKey_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, publicKey_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, publicKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer)) {
        return super.equals(obj);
      }
      com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer other = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer) obj;

      boolean result = true;
      result = result && (hasMode() == other.hasMode());
      if (hasMode()) {
        result = result && mode_ == other.mode_;
      }
      result = result && (hasPublicKey() == other.hasPublicKey());
      if (hasPublicKey()) {
        result = result && getPublicKey()
            .equals(other.getPublicKey());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasMode()) {
        hash = (37 * hash) + MODE_FIELD_NUMBER;
        hash = (53 * hash) + mode_;
      }
      if (hasPublicKey()) {
        hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKey().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     **
     * Structure representing the importance transfer part for NEM transactions
     * &#64;used_in NEMSignTx
     * </pre>
     *
     * Protobuf type {@code NEMImportanceTransfer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NEMImportanceTransfer)
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMImportanceTransfer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMImportanceTransfer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer.class, com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer.Builder.class);
      }

      // Construct using com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mode_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        publicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.internal_static_NEMImportanceTransfer_descriptor;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer getDefaultInstanceForType() {
        return com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer.getDefaultInstance();
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer build() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer buildPartial() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer result = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.publicKey_ = publicKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer) {
          return mergeFrom((com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer other) {
        if (other == com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasPublicKey()) {
          setPublicKey(other.getPublicKey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int mode_ = 1;
      /**
       * <pre>
       * Mode of importance transfer
       * </pre>
       *
       * <code>optional .NEMImportanceTransferMode mode = 1;</code>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Mode of importance transfer
       * </pre>
       *
       * <code>optional .NEMImportanceTransferMode mode = 1;</code>
       */
      public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode getMode() {
        com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode result = com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode.valueOf(mode_);
        return result == null ? com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode.ImportanceTransfer_Activate : result;
      }
      /**
       * <pre>
       * Mode of importance transfer
       * </pre>
       *
       * <code>optional .NEMImportanceTransferMode mode = 1;</code>
       */
      public Builder setMode(com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransferMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mode of importance transfer
       * </pre>
       *
       * <code>optional .NEMImportanceTransferMode mode = 1;</code>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = 1;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Public key of the remote account
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       */
      public boolean hasPublicKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Public key of the remote account
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       */
      public com.google.protobuf.ByteString getPublicKey() {
        return publicKey_;
      }
      /**
       * <pre>
       * Public key of the remote account
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       */
      public Builder setPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        publicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Public key of the remote account
       * </pre>
       *
       * <code>optional bytes public_key = 2;</code>
       */
      public Builder clearPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        publicKey_ = getDefaultInstance().getPublicKey();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NEMImportanceTransfer)
    }

    // @@protoc_insertion_point(class_scope:NEMImportanceTransfer)
    private static final com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer();
    }

    public static com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NEMImportanceTransfer>
        PARSER = new com.google.protobuf.AbstractParser<NEMImportanceTransfer>() {
      public NEMImportanceTransfer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NEMImportanceTransfer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NEMImportanceTransfer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NEMImportanceTransfer> getParserForType() {
      return PARSER;
    }

    public com.satoshilabs.trezor.lib.protobuf.TrezorType.NEMImportanceTransfer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int WIRE_IN_FIELD_NUMBER = 50002;
  /**
   * <pre>
   * message can be transmitted via wire from PC to TREZOR
   * </pre>
   *
   * <code>extend .google.protobuf.EnumValueOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.EnumValueOptions,
      java.lang.Boolean> wireIn = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Boolean.class,
        null);
  public static final int WIRE_OUT_FIELD_NUMBER = 50003;
  /**
   * <pre>
   * message can be transmitted via wire from TREZOR to PC
   * </pre>
   *
   * <code>extend .google.protobuf.EnumValueOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.EnumValueOptions,
      java.lang.Boolean> wireOut = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Boolean.class,
        null);
  public static final int WIRE_DEBUG_IN_FIELD_NUMBER = 50004;
  /**
   * <pre>
   * message can be transmitted via debug wire from PC to TREZOR
   * </pre>
   *
   * <code>extend .google.protobuf.EnumValueOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.EnumValueOptions,
      java.lang.Boolean> wireDebugIn = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Boolean.class,
        null);
  public static final int WIRE_DEBUG_OUT_FIELD_NUMBER = 50005;
  /**
   * <pre>
   * message can be transmitted via debug wire from TREZOR to PC
   * </pre>
   *
   * <code>extend .google.protobuf.EnumValueOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.EnumValueOptions,
      java.lang.Boolean> wireDebugOut = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Boolean.class,
        null);
  public static final int WIRE_TINY_FIELD_NUMBER = 50006;
  /**
   * <pre>
   * message is handled by TREZOR when the USB stack is in tiny mode
   * </pre>
   *
   * <code>extend .google.protobuf.EnumValueOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.EnumValueOptions,
      java.lang.Boolean> wireTiny = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Boolean.class,
        null);
  public static final int WIRE_BOOTLOADER_FIELD_NUMBER = 50007;
  /**
   * <pre>
   * message is only handled by TREZOR Bootloader
   * </pre>
   *
   * <code>extend .google.protobuf.EnumValueOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.EnumValueOptions,
      java.lang.Boolean> wireBootloader = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Boolean.class,
        null);
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HDNodeType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HDNodeType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HDNodePathType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HDNodePathType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CoinType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CoinType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MultisigRedeemScriptType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MultisigRedeemScriptType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TxInputType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TxInputType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TxOutputType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TxOutputType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TxOutputBinType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TxOutputBinType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TransactionType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TransactionType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TxRequestDetailsType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TxRequestDetailsType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TxRequestSerializedType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TxRequestSerializedType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IdentityType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IdentityType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NEMTransactionCommon_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NEMTransactionCommon_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NEMTransfer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NEMTransfer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NEMMosaic_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NEMMosaic_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NEMProvisionNamespace_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NEMProvisionNamespace_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NEMMosaicCreation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NEMMosaicCreation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NEMMosaicDefinition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NEMMosaicDefinition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NEMMosaicSupplyChange_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NEMMosaicSupplyChange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NEMAggregateModification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NEMAggregateModification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NEMCosignatoryModification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NEMCosignatoryModification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NEMImportanceTransfer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NEMImportanceTransfer_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013types.proto\032 google/protobuf/descripto" +
      "r.proto\"\200\001\n\nHDNodeType\022\r\n\005depth\030\001 \002(\r\022\023\n" +
      "\013fingerprint\030\002 \002(\r\022\021\n\tchild_num\030\003 \002(\r\022\022\n" +
      "\nchain_code\030\004 \002(\014\022\023\n\013private_key\030\005 \001(\014\022\022" +
      "\n\npublic_key\030\006 \001(\014\">\n\016HDNodePathType\022\031\n\004" +
      "node\030\001 \002(\0132\013.HDNodeType\022\021\n\taddress_n\030\002 \003" +
      "(\r\"\217\002\n\010CoinType\022\021\n\tcoin_name\030\001 \001(\t\022\025\n\rco" +
      "in_shortcut\030\002 \001(\t\022\027\n\014address_type\030\003 \001(\r:" +
      "\0010\022\021\n\tmaxfee_kb\030\004 \001(\004\022\034\n\021address_type_p2" +
      "sh\030\005 \001(\r:\0015\022\035\n\025signed_message_header\030\010 \001",
      "(\t\022\034\n\nxpub_magic\030\t \001(\r:\01076067358\022\034\n\nxprv" +
      "_magic\030\n \001(\r:\01076066276\022\016\n\006segwit\030\013 \001(\010\022\016" +
      "\n\006forkid\030\014 \001(\r\022\024\n\014force_bip143\030\r \001(\010\"[\n\030" +
      "MultisigRedeemScriptType\022 \n\007pubkeys\030\001 \003(" +
      "\0132\017.HDNodePathType\022\022\n\nsignatures\030\002 \003(\014\022\t" +
      "\n\001m\030\003 \001(\r\"\237\002\n\013TxInputType\022\021\n\taddress_n\030\001" +
      " \003(\r\022\021\n\tprev_hash\030\002 \002(\014\022\022\n\nprev_index\030\003 " +
      "\002(\r\022\022\n\nscript_sig\030\004 \001(\014\022\034\n\010sequence\030\005 \001(" +
      "\r:\n4294967295\0223\n\013script_type\030\006 \001(\0162\020.Inp" +
      "utScriptType:\014SPENDADDRESS\022+\n\010multisig\030\007",
      " \001(\0132\031.MultisigRedeemScriptType\022\016\n\006amoun" +
      "t\030\010 \001(\004\022\023\n\013decred_tree\030\t \001(\r\022\035\n\025decred_s" +
      "cript_version\030\n \001(\r\"\316\001\n\014TxOutputType\022\017\n\007" +
      "address\030\001 \001(\t\022\021\n\taddress_n\030\002 \003(\r\022\016\n\006amou" +
      "nt\030\003 \002(\004\022&\n\013script_type\030\004 \002(\0162\021.OutputSc" +
      "riptType\022+\n\010multisig\030\005 \001(\0132\031.MultisigRed" +
      "eemScriptType\022\026\n\016op_return_data\030\006 \001(\014\022\035\n" +
      "\025decred_script_version\030\007 \001(\r\"W\n\017TxOutput" +
      "BinType\022\016\n\006amount\030\001 \002(\004\022\025\n\rscript_pubkey" +
      "\030\002 \002(\014\022\035\n\025decred_script_version\030\003 \001(\r\"\206\002",
      "\n\017TransactionType\022\017\n\007version\030\001 \001(\r\022\034\n\006in" +
      "puts\030\002 \003(\0132\014.TxInputType\022%\n\013bin_outputs\030" +
      "\003 \003(\0132\020.TxOutputBinType\022\036\n\007outputs\030\005 \003(\013" +
      "2\r.TxOutputType\022\021\n\tlock_time\030\004 \001(\r\022\022\n\nin" +
      "puts_cnt\030\006 \001(\r\022\023\n\013outputs_cnt\030\007 \001(\r\022\022\n\ne" +
      "xtra_data\030\010 \001(\014\022\026\n\016extra_data_len\030\t \001(\r\022" +
      "\025\n\rdecred_expiry\030\n \001(\r\"q\n\024TxRequestDetai" +
      "lsType\022\025\n\rrequest_index\030\001 \001(\r\022\017\n\007tx_hash" +
      "\030\002 \001(\014\022\026\n\016extra_data_len\030\003 \001(\r\022\031\n\021extra_" +
      "data_offset\030\004 \001(\r\"\\\n\027TxRequestSerialized",
      "Type\022\027\n\017signature_index\030\001 \001(\r\022\021\n\tsignatu" +
      "re\030\002 \001(\014\022\025\n\rserialized_tx\030\003 \001(\014\"g\n\014Ident" +
      "ityType\022\r\n\005proto\030\001 \001(\t\022\014\n\004user\030\002 \001(\t\022\014\n\004" +
      "host\030\003 \001(\t\022\014\n\004port\030\004 \001(\t\022\014\n\004path\030\005 \001(\t\022\020" +
      "\n\005index\030\006 \001(\r:\0010\"|\n\024NEMTransactionCommon" +
      "\022\021\n\taddress_n\030\001 \003(\r\022\017\n\007network\030\002 \001(\r\022\021\n\t" +
      "timestamp\030\003 \001(\r\022\013\n\003fee\030\004 \001(\004\022\020\n\010deadline" +
      "\030\005 \001(\r\022\016\n\006signer\030\006 \001(\014\"r\n\013NEMTransfer\022\021\n" +
      "\trecipient\030\001 \001(\t\022\016\n\006amount\030\002 \001(\004\022\017\n\007payl" +
      "oad\030\003 \001(\014\022\022\n\npublic_key\030\004 \001(\014\022\033\n\007mosaics",
      "\030\005 \003(\0132\n.NEMMosaic\"@\n\tNEMMosaic\022\021\n\tnames" +
      "pace\030\001 \001(\t\022\016\n\006mosaic\030\002 \001(\t\022\020\n\010quantity\030\003" +
      " \001(\004\"U\n\025NEMProvisionNamespace\022\021\n\tnamespa" +
      "ce\030\001 \001(\t\022\016\n\006parent\030\002 \001(\t\022\014\n\004sink\030\003 \001(\t\022\013" +
      "\n\003fee\030\004 \001(\004\"X\n\021NEMMosaicCreation\022(\n\ndefi" +
      "nition\030\001 \001(\0132\024.NEMMosaicDefinition\022\014\n\004si" +
      "nk\030\002 \001(\t\022\013\n\003fee\030\003 \001(\004\"\277\002\n\023NEMMosaicDefin" +
      "ition\022\014\n\004name\030\001 \001(\t\022\016\n\006ticker\030\002 \001(\t\022\021\n\tn" +
      "amespace\030\003 \001(\t\022\016\n\006mosaic\030\004 \001(\t\022\024\n\014divisi" +
      "bility\030\005 \001(\r\022\034\n\004levy\030\006 \001(\0162\016.NEMMosaicLe",
      "vy\022\013\n\003fee\030\007 \001(\004\022\024\n\014levy_address\030\010 \001(\t\022\026\n" +
      "\016levy_namespace\030\t \001(\t\022\023\n\013levy_mosaic\030\n \001" +
      "(\t\022\016\n\006supply\030\013 \001(\004\022\026\n\016mutable_supply\030\014 \001" +
      "(\010\022\024\n\014transferable\030\r \001(\010\022\023\n\013description\030" +
      "\016 \001(\t\022\020\n\010networks\030\017 \003(\r\"m\n\025NEMMosaicSupp" +
      "lyChange\022\021\n\tnamespace\030\001 \001(\t\022\016\n\006mosaic\030\002 " +
      "\001(\t\022\"\n\004type\030\003 \001(\0162\024.NEMSupplyChangeType\022" +
      "\r\n\005delta\030\004 \001(\004\"g\n\030NEMAggregateModificati" +
      "on\0222\n\rmodifications\030\001 \003(\0132\033.NEMCosignato" +
      "ryModification\022\027\n\017relative_change\030\002 \001(\021\"",
      "T\n\032NEMCosignatoryModification\022\"\n\004type\030\001 " +
      "\001(\0162\024.NEMModificationType\022\022\n\npublic_key\030" +
      "\002 \001(\014\"U\n\025NEMImportanceTransfer\022(\n\004mode\030\001" +
      " \001(\0162\032.NEMImportanceTransferMode\022\022\n\npubl" +
      "ic_key\030\002 \001(\014*\353\002\n\013FailureType\022\035\n\031Failure_" +
      "UnexpectedMessage\020\001\022\032\n\026Failure_ButtonExp" +
      "ected\020\002\022\025\n\021Failure_DataError\020\003\022\033\n\027Failur" +
      "e_ActionCancelled\020\004\022\027\n\023Failure_PinExpect" +
      "ed\020\005\022\030\n\024Failure_PinCancelled\020\006\022\026\n\022Failur" +
      "e_PinInvalid\020\007\022\034\n\030Failure_InvalidSignatu",
      "re\020\010\022\030\n\024Failure_ProcessError\020\t\022\032\n\026Failur" +
      "e_NotEnoughFunds\020\n\022\032\n\026Failure_NotInitial" +
      "ized\020\013\022\027\n\023Failure_PinMismatch\020\014\022\031\n\025Failu" +
      "re_FirmwareError\020c*\207\001\n\020OutputScriptType\022" +
      "\020\n\014PAYTOADDRESS\020\000\022\023\n\017PAYTOSCRIPTHASH\020\001\022\021" +
      "\n\rPAYTOMULTISIG\020\002\022\021\n\rPAYTOOPRETURN\020\003\022\020\n\014" +
      "PAYTOWITNESS\020\004\022\024\n\020PAYTOP2SHWITNESS\020\005*l\n\017" +
      "InputScriptType\022\020\n\014SPENDADDRESS\020\000\022\021\n\rSPE" +
      "NDMULTISIG\020\001\022\014\n\010EXTERNAL\020\002\022\020\n\014SPENDWITNE" +
      "SS\020\003\022\024\n\020SPENDP2SHWITNESS\020\004*U\n\013RequestTyp",
      "e\022\013\n\007TXINPUT\020\000\022\014\n\010TXOUTPUT\020\001\022\n\n\006TXMETA\020\002" +
      "\022\016\n\nTXFINISHED\020\003\022\017\n\013TXEXTRADATA\020\004*\307\003\n\021Bu" +
      "ttonRequestType\022\027\n\023ButtonRequest_Other\020\001" +
      "\022\"\n\036ButtonRequest_FeeOverThreshold\020\002\022\037\n\033" +
      "ButtonRequest_ConfirmOutput\020\003\022\035\n\031ButtonR" +
      "equest_ResetDevice\020\004\022\035\n\031ButtonRequest_Co" +
      "nfirmWord\020\005\022\034\n\030ButtonRequest_WipeDevice\020" +
      "\006\022\035\n\031ButtonRequest_ProtectCall\020\007\022\030\n\024Butt" +
      "onRequest_SignTx\020\010\022\037\n\033ButtonRequest_Firm" +
      "wareCheck\020\t\022\031\n\025ButtonRequest_Address\020\n\022\033",
      "\n\027ButtonRequest_PublicKey\020\013\022#\n\037ButtonReq" +
      "uest_MnemonicWordCount\020\014\022\037\n\033ButtonReques" +
      "t_MnemonicInput\020\r\022 \n\034ButtonRequest_Passp" +
      "hraseType\020\016*\177\n\024PinMatrixRequestType\022 \n\034P" +
      "inMatrixRequestType_Current\020\001\022!\n\035PinMatr" +
      "ixRequestType_NewFirst\020\002\022\"\n\036PinMatrixReq" +
      "uestType_NewSecond\020\003*Z\n\022RecoveryDeviceTy" +
      "pe\022%\n!RecoveryDeviceType_ScrambledWords\020" +
      "\000\022\035\n\031RecoveryDeviceType_Matrix\020\001*f\n\017Word" +
      "RequestType\022\031\n\025WordRequestType_Plain\020\000\022\033",
      "\n\027WordRequestType_Matrix9\020\001\022\033\n\027WordReque" +
      "stType_Matrix6\020\002*C\n\rNEMMosaicLevy\022\027\n\023Mos" +
      "aicLevy_Absolute\020\001\022\031\n\025MosaicLevy_Percent" +
      "ile\020\002*K\n\023NEMSupplyChangeType\022\031\n\025SupplyCh" +
      "ange_Increase\020\001\022\031\n\025SupplyChange_Decrease" +
      "\020\002*Z\n\023NEMModificationType\022\037\n\033Cosignatory" +
      "Modification_Add\020\001\022\"\n\036CosignatoryModific" +
      "ation_Delete\020\002*_\n\031NEMImportanceTransferM" +
      "ode\022\037\n\033ImportanceTransfer_Activate\020\001\022!\n\035" +
      "ImportanceTransfer_Deactivate\020\002:4\n\007wire_",
      "in\022!.google.protobuf.EnumValueOptions\030\322\206" +
      "\003 \001(\010:5\n\010wire_out\022!.google.protobuf.Enum" +
      "ValueOptions\030\323\206\003 \001(\010::\n\rwire_debug_in\022!." +
      "google.protobuf.EnumValueOptions\030\324\206\003 \001(\010" +
      ":;\n\016wire_debug_out\022!.google.protobuf.Enu" +
      "mValueOptions\030\325\206\003 \001(\010:6\n\twire_tiny\022!.goo" +
      "gle.protobuf.EnumValueOptions\030\326\206\003 \001(\010:<\n" +
      "\017wire_bootloader\022!.google.protobuf.EnumV" +
      "alueOptions\030\327\206\003 \001(\010B1\n#com.satoshilabs.t" +
      "rezor.lib.protobufB\nTrezorType"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DescriptorProtos.getDescriptor(),
        }, assigner);
    internal_static_HDNodeType_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_HDNodeType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HDNodeType_descriptor,
        new java.lang.String[] { "Depth", "Fingerprint", "ChildNum", "ChainCode", "PrivateKey", "PublicKey", });
    internal_static_HDNodePathType_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_HDNodePathType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HDNodePathType_descriptor,
        new java.lang.String[] { "Node", "AddressN", });
    internal_static_CoinType_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CoinType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CoinType_descriptor,
        new java.lang.String[] { "CoinName", "CoinShortcut", "AddressType", "MaxfeeKb", "AddressTypeP2Sh", "SignedMessageHeader", "XpubMagic", "XprvMagic", "Segwit", "Forkid", "ForceBip143", });
    internal_static_MultisigRedeemScriptType_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_MultisigRedeemScriptType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MultisigRedeemScriptType_descriptor,
        new java.lang.String[] { "Pubkeys", "Signatures", "M", });
    internal_static_TxInputType_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_TxInputType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TxInputType_descriptor,
        new java.lang.String[] { "AddressN", "PrevHash", "PrevIndex", "ScriptSig", "Sequence", "ScriptType", "Multisig", "Amount", "DecredTree", "DecredScriptVersion", });
    internal_static_TxOutputType_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_TxOutputType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TxOutputType_descriptor,
        new java.lang.String[] { "Address", "AddressN", "Amount", "ScriptType", "Multisig", "OpReturnData", "DecredScriptVersion", });
    internal_static_TxOutputBinType_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_TxOutputBinType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TxOutputBinType_descriptor,
        new java.lang.String[] { "Amount", "ScriptPubkey", "DecredScriptVersion", });
    internal_static_TransactionType_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_TransactionType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TransactionType_descriptor,
        new java.lang.String[] { "Version", "Inputs", "BinOutputs", "Outputs", "LockTime", "InputsCnt", "OutputsCnt", "ExtraData", "ExtraDataLen", "DecredExpiry", });
    internal_static_TxRequestDetailsType_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_TxRequestDetailsType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TxRequestDetailsType_descriptor,
        new java.lang.String[] { "RequestIndex", "TxHash", "ExtraDataLen", "ExtraDataOffset", });
    internal_static_TxRequestSerializedType_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_TxRequestSerializedType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TxRequestSerializedType_descriptor,
        new java.lang.String[] { "SignatureIndex", "Signature", "SerializedTx", });
    internal_static_IdentityType_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_IdentityType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IdentityType_descriptor,
        new java.lang.String[] { "Proto", "User", "Host", "Port", "Path", "Index", });
    internal_static_NEMTransactionCommon_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_NEMTransactionCommon_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NEMTransactionCommon_descriptor,
        new java.lang.String[] { "AddressN", "Network", "Timestamp", "Fee", "Deadline", "Signer", });
    internal_static_NEMTransfer_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_NEMTransfer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NEMTransfer_descriptor,
        new java.lang.String[] { "Recipient", "Amount", "Payload", "PublicKey", "Mosaics", });
    internal_static_NEMMosaic_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_NEMMosaic_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NEMMosaic_descriptor,
        new java.lang.String[] { "Namespace", "Mosaic", "Quantity", });
    internal_static_NEMProvisionNamespace_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_NEMProvisionNamespace_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NEMProvisionNamespace_descriptor,
        new java.lang.String[] { "Namespace", "Parent", "Sink", "Fee", });
    internal_static_NEMMosaicCreation_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_NEMMosaicCreation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NEMMosaicCreation_descriptor,
        new java.lang.String[] { "Definition", "Sink", "Fee", });
    internal_static_NEMMosaicDefinition_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_NEMMosaicDefinition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NEMMosaicDefinition_descriptor,
        new java.lang.String[] { "Name", "Ticker", "Namespace", "Mosaic", "Divisibility", "Levy", "Fee", "LevyAddress", "LevyNamespace", "LevyMosaic", "Supply", "MutableSupply", "Transferable", "Description", "Networks", });
    internal_static_NEMMosaicSupplyChange_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_NEMMosaicSupplyChange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NEMMosaicSupplyChange_descriptor,
        new java.lang.String[] { "Namespace", "Mosaic", "Type", "Delta", });
    internal_static_NEMAggregateModification_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_NEMAggregateModification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NEMAggregateModification_descriptor,
        new java.lang.String[] { "Modifications", "RelativeChange", });
    internal_static_NEMCosignatoryModification_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_NEMCosignatoryModification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NEMCosignatoryModification_descriptor,
        new java.lang.String[] { "Type", "PublicKey", });
    internal_static_NEMImportanceTransfer_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_NEMImportanceTransfer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NEMImportanceTransfer_descriptor,
        new java.lang.String[] { "Mode", "PublicKey", });
    wireIn.internalInit(descriptor.getExtensions().get(0));
    wireOut.internalInit(descriptor.getExtensions().get(1));
    wireDebugIn.internalInit(descriptor.getExtensions().get(2));
    wireDebugOut.internalInit(descriptor.getExtensions().get(3));
    wireTiny.internalInit(descriptor.getExtensions().get(4));
    wireBootloader.internalInit(descriptor.getExtensions().get(5));
    com.google.protobuf.DescriptorProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
